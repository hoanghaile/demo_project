{"version":3,"sources":["api/urlCovid.js","api/Covid/covidApi.js","components/Client/Information/Information.js","components/Client/Menu/NavBar/NavBar.js","components/Common/CustomFields/InputFields/InputFields.js","components/Common/CustomFields/TextAreaFields/TextAreaFields.js","api/constants.js","api/Take/takeApi.js","components/Common/CheckWord/CheckWord.js","components/Client/Content/Takes/FormTake/FormTake.js","components/Client/Content/Takes/Take/Take.js","api/Send/sendApi.js","components/Client/Content/Sends/FormSend/FormSend.js","components/Client/Content/Sends/Send/Send.js","components/Client/map/map.js","components/Client/Content/Content.js","components/Client/Home.js","page/client/clientPage.js","components/contexts/constants.js","components/Common/Alert/CustomAlert.js","components/Admin/SideBar/SideBar.js","components/Common/TitleBreadcrumb/TitleBreadcrumb.js","components/Admin/HomePage/HomePage.js","assets/images/userface.jpg","components/reducers/authReducer.js","components/Utils/setAuthToken.js","components/contexts/authContext.js","components/Common/Navbar/Navbar.js","api/Category/categoryApi.js","components/Admin/Category/FormAddCate/FormAddCate.js","components/Admin/Category/AddCategory/AddCate.js","components/Admin/Category/ListCategory/ListCategory.js","components/Common/export/export.js","components/Admin/Take/showTake/Take.js","components/Common/BtnBack.js","components/Admin/Take/editTake/EditTake.js","components/Admin/Send/editSend/EditSend.js","api/Auth/authApi.js","components/Admin/UserAdmin/FormEdit/FormEdit.js","api/User/userApi.js","components/Admin/User/FormEdit/FormEdit.js","components/Admin/Category/EditCategory/EditCategory.js","components/Admin/Send/showSend/Send.js","components/Admin/User/DetailUser/DetailUser.js","components/Common/import/import.js","components/Admin/User/FormAdd/FormAdd.js","components/Admin/User/AddUser/AddUser.js","components/Admin/User/User/UserAdmin.js","components/Admin/UserAdmin/DetailAdmin/DetailAdmin.js","components/Admin/UserAdmin/FormAdd/FormAdd.js","components/Admin/UserAdmin/AddAdmin/AddAdmin.js","components/Admin/UserAdmin/Admin/Admin.js","components/Admin/ChangePass/ChangePass.js","page/admin/AdminPage.js","assets/images/react.png","page/Login/Login.js","components/Auth/AuthProvider.js","api/Mail/mailApi.js","page/changePassForm/ChangePassForm.js","page/ForgetPass/ForgetPass.js","components/Auth/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["apiURL","process","NODE_env","CovidApi","getVietNam","axios","get","Information","useState","dataCovid","setDataCovid","searchData","setSearchData","show","setShow","useEffect","CovidData","a","res","data","className","variant","onClick","Modal","onHide","id","Header","closeButton","Title","Body","onChange","e","target","value","placeholder","filter","item","country","toLowerCase","includes","map","index","style","msWordBreak","cases","deaths","NavBar","type","to","InputField","props","field","form","label","name","errors","touched","ShowError","FormGroup","htmlFor","defaultProps","disabled","options","MyTextArea","useField","meta","error","SendApi","getAll","getById","_id","addTake","post","updateTake","patch","deleteTake","delete","updateStatus","removeAccents","str","AccentsMap","i","length","re","RegExp","substr","char","replace","FormAdd","onSubmit","console","log","takeApi","initialValues","address","phone","text","clothes","car","mark","vegetable","rice","noodles","milk","egg","status","formikProps","component","valueInput","forEach","word","CheckWord","CheckText","Take","backdrop","keyboard","FormTake","addSend","updateSend","deleteSend","display","Send","Map","width","height","latitude","longitude","zoom","viewport","setViewport","mapRef","useRef","navigator","geolocation","watchPosition","position","coords","Longitude","mapStyle","goongApiAccessToken","onViewportChange","event","feature","features","clusterId","properties","cluster_id","current","getMap","getSource","getClusterExpansionZoom","err","geometry","coordinates","transitionDuration","ref","cluster","clusterMaxZoom","clusterRadius","Content","zIndex","HomeClient","withRouter","path","Client","LOCAL_STORAGE_TOKEN_NAME","LogoutAlter","Swal","fire","icon","title","showDenyButton","confirmButtonColor","confirmButtonText","denyButtonText","then","result","isConfirmed","sessionStorage","removeItem","localStorage","Cookies","remove","window","location","href","SideBar","matchList","useRouteMatch","matchUser","matchInfor","matchProduct","fontSize","marginLeft","cursor","activeClassName","TitleBreadcrumb","subTitile","pathHome","HomePage","authReducer","state","action","payload","isAuthenticated","user","authLoading","setAuthToken","token","defaults","headers","common","AuthContext","createContext","AuthContextProvider","children","useReducer","authState","dispatch","loadUser","SetAuthToken","response","success","loginUser","userForm","setItem","accessToken","message","authContextData","logoutUser","Provider","Navbar","useContext","fullname","password","username","paddingTop","src","img","alt","CateApi","addCategory","updateCategory","deleteCategory","FormAddCate","onsubmit","AddCate","lgShow","setLgShow","Button","size","ListCategory","listCate","setListCate","getList","category","deleteCate","showCancelButton","cate","exportFile","filename","dataExport","filenameExport","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","ExportTo","Received","showTake","setShowTake","setDataExport","search","setSearch","pageNumber","setPageNumber","pagesVisited","pageCount","Math","ceil","sttList","takeList","takes","exportTake","handleStatus","dataStatus","slice","query","rows","defaultValue","previousLabel","nextLabel","onPageChange","selected","previousClassName","containerClassName","nextLinkClassName","disabledClassName","BtnBack","history","useHistory","goBack","EditTake","useParams","setUpdateTake","loadData","as","EditSend","setUpdateSend","sendApi","sends","authApi","login","register","getAdmin","updateAdmin","deleteAdmin","changePass","mailChange","FormEdit","email","gender","passport","nationality","nation","work","setUpdateAdmin","AdminApi","admins","UserApi","getUserId","addUser","updateUser","deleteUser","setUpdateUser","users","updateCate","setUpdateCate","CategoryApi","showSend","setShowSend","exportSend","DetailUser","setDisplay","importFile","col","obj","Object","keys","file","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","wbName","ws","sheet_to_json","onerror","d","k","userApi","readExcel","files","AddUser","UserAdmin","allUser","setAllUser","detail","setDetail","sttUser","getAllUser","exportUser","getUsersId","userId","dataWork","toString","DetailAdmin","control","userLoad","ExportAdmin","AddAdmin","ChangePass","document","validationSchema","Yup","shape","oldPass","required","min","max","newPass","comNewPass","oneOf","record","toast","setTimeout","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","AdminPage","match","exact","Admin","EditAdmin","EditUser","EditCategory","User","Login","loginForm","setLoginForm","onHandleChange","preventDefault","Form","Group","Control","isInvalid","Feedback","Auth","body","authRoute","Spinner","animation","mailApi","sendMail","ChangePassForm","otp","confirmPass","assign","mailData","setMailData","otpForm","setOtpFrom","ProtectedRoute","Component","rest","render","App","ClientPage","ForgetPass","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"o7BAAaA,EAAkC,eAAzBC,mIAAYC,SAA4B,4BAA8B,MCQ7EC,EALE,CACbC,WAAY,WACR,OAAOC,IAAMC,IAAN,UAAaN,EAAb,6B,gBC6GAO,EA3GK,WAAO,IAAD,EACtB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwBJ,oBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAYA,OATAC,qBAAU,WACN,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACId,EAASC,aADb,OACRc,EADQ,OAGdR,EAAY,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAKC,MAHJ,2CAAH,qDAKfH,MACF,IAGE,qCACI,wBAAQI,UAAU,aAAaC,QAAQ,UAAUC,QAbtC,kBAAMR,GAAQ,IAazB,sBAGA,eAACS,EAAA,EAAD,CAAQV,KAAMA,EAAMW,OAfR,kBAAMV,GAAQ,IAegBW,GAAG,kBAA7C,UACI,cAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACA,cAACJ,EAAA,EAAMK,MAAP,4DAEA,eAACL,EAAA,EAAMM,KAAP,WACI,8BACI,uBAAOC,SAAU,SAACC,GAAD,OAAKnB,EAAcmB,EAAEC,OAAOC,QAAQb,UAAU,sCAAsCc,YAAY,qCAErH,qBAAKd,UAAU,sCAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,oBAEf,uBAAOA,UAAU,cAAjB,SACI,uCACKX,QADL,IACKA,GADL,UACKA,EACK0B,QAAO,SAACC,GACN,OAAmB,KAAfzB,KAEG,OAAIyB,QAAJ,IAAIA,MAAMC,QAAQC,cAAcC,SAAS5B,EAAW2B,kBADpDF,YAJnB,aACK,EAUCI,KAAI,SAACJ,EAAMK,GAAP,OACF,qBAAgBrB,UAAU,mBAA1B,UACI,oBAAIsB,MAAO,CAACC,YAAa,cAAzB,SAII,sCAAOP,QAAP,IAAOA,OAAP,EAAOA,EAAMC,YAEjB,qBAAIjB,UAAU,eAAd,UACI,qBAAKA,UAAU,cAAf,qCACA,qBAAKA,UAAU,cAAf,SACI,wCAAOgB,QAAP,IAAOA,OAAP,EAAOA,EAAMQ,MAAb,aAEJ,qBAAKxB,UAAU,QAEnB,qBAAIA,UAAU,qBAAd,UACI,qBAAKA,UAAU,cAAf,6BACA,qBAAKA,UAAU,cAAf,SACI,wCAAOgB,QAAP,IAAOA,OAAP,EAAOA,EAAMS,OAAb,aAEJ,qBAAKzB,UAAU,UAnBdqB,yBCnBlCK,G,OA3BA,WACb,OACE,mCACE,qBAAK1B,UAAU,mCAAf,SACE,sBAAKA,UAAU,kBAAf,UACI,wBAAQA,UAAU,4BAA4BK,GAAG,gBAAjD,SAAiE,cAAC,IAAD,CAAQL,UAAU,gBACnF,qBAAKA,UAAU,iBAAiB2B,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAzL,SAA6M,cAAC,EAAD,MAC7M,qBAAK3B,UAAU,2BAA2BK,GAAG,yBAA7C,SACI,oBAAIL,UAAU,kCAAd,SACI,oBAAIA,UAAU,kBAAd,SAAgC,cAAC,IAAD,CAAMA,UAAU,WAAW4B,GAAG,IAA9B,SAAkC,cAAC,EAAD,qB,uCCOtF,SAASC,EAAWC,GAEhB,IACIC,EACAD,EADAC,MAAOC,EACPF,EADOE,KAAMC,EACbH,EADaG,MAAOnB,EACpBgB,EADoBhB,YAAaD,EACjCiB,EADiCjB,MAAOc,EACxCG,EADwCH,KAEpCO,EAASH,EAATG,KACAC,EAAoBH,EAApBG,OAAQC,EAAYJ,EAAZI,QACVC,EAAYF,EAAOD,IAASE,EAAQF,GAC1C,OACI,eAACI,EAAA,EAAD,CAAWtC,UAAU,cAArB,UACKiC,GAAS,uBAAOM,QAASL,EAAMlC,UAAU,cAAhC,SAA+CiC,IACzD,+CAAOpB,MAAOA,EAAOc,KAAMA,EAAM3B,UAAU,2BAA8B+B,GAAzE,IAAgFjB,YAAaA,KAC5FuB,GAAa,mBAAGrC,UAAU,UAAb,SAAwBmC,EAAOD,QApBzDL,EAAWW,aAAe,CACtBP,MAAO,GACPnB,YAAa,GACb2B,UAAU,EACVC,QAAS,GACTf,KAAM,QAoBKE,Q,6BCtBAc,EAXI,SAAC,GAAyB,IAAvBV,EAAsB,EAAtBA,MAAUH,EAAY,iBAExC,EAAsBc,YAASd,GAA/B,mBAAOC,EAAP,KAAcc,EAAd,KACA,OACI,qCACI,uBAAO7C,UAAU,cAAcuC,QAAST,EAAMzB,IAAMyB,EAAMI,KAA1D,SAAiED,IACjE,kDAAUjC,UAAU,aAAgB8B,GAAUC,IAC7Cc,EAAKT,SAAWS,EAAKV,OAAU,qBAAKnC,UAAU,QAAf,SAAwB6C,EAAKC,QAAgB,SCZ5ElE,EAA2E,4BCuBzEmE,EArBC,CACZC,OAAQ,WACJ,OAAO/D,IAAMC,IAAN,UAAaN,EAAb,eAEXqE,QAAS,SAACC,GACN,OAAOjE,IAAMC,IAAN,UAAaN,EAAb,oBAA+BsE,KAE1CC,QAAS,SAACpD,GACN,OAAOd,IAAMmE,KAAN,UAAcxE,EAAd,aAAiCmB,IAE5CsD,WAAY,SAACH,EAAKnD,GACd,OAAOd,IAAMqE,MAAN,UAAe1E,EAAf,wBAAqCsE,GAAOnD,IAEvDwD,WAAY,SAACL,GACT,OAAOjE,IAAMuE,OAAN,UAAgB5E,EAAhB,wBAAsCsE,KAEjDO,aAAc,SAACP,EAAKnD,GAChB,OAAOd,IAAMqE,MAAN,UAAe1E,EAAf,+BAA4CsE,GAAOnD,KCApD2D,EAAgB,SAACC,GAgB3B,IAfA,IAAIC,EAAa,CACb,kGACA,kGACA,UAAM,UACN,gEACA,gEACA,8BACA,8BACA,kGACA,kGACA,kEACA,kEACA,gCACA,iCAEKC,EAAE,EAAGA,EAAED,EAAWE,OAAQD,IAAK,CACpC,IAAIE,EAAK,IAAIC,OAAO,IAAMJ,EAAWC,GAAGI,OAAO,GAAK,IAAK,KACrDC,EAAON,EAAWC,GAAG,GACzBF,EAAMA,EAAIQ,QAAQJ,EAAIG,GAE1B,OAAOP,GChCLS,EAAU,WAEZ,IAgBMC,EAAQ,uCAAG,WAAOtE,GAAP,SAAAF,EAAA,6DACbyE,QAAQC,IAAIxE,GADC,SAEPyE,EAAQrB,QAAR,eAAoBpD,IAFb,2CAAH,sDASd,OACI,mCACI,yBAASC,UAAU,UAAnB,SAEQ,qBAAKA,UAAU,gBAAf,SACA,cAAC,IAAD,CACIyE,cA/BE,CAClBvC,KAAM,GACNwC,QAAS,GACTC,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,IAAK,GACLC,KAAM,GACNC,UAAW,GACXC,KAAM,GACNC,QAAS,GACTC,KAAM,GACNC,IAAI,GACJC,QAAQ,GAmBQhB,SAAU,SAACtE,GAAD,OAAUsE,EAAStE,IAFjC,SAIS,SAAAuF,GACG,OACI,eAAC,IAAD,WACI,qBAAKtF,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kBAAUsD,UAAW1D,EAAYhB,MAAO,EAAGqB,KAAK,UAAUpB,YAAY,gCAE3F,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kBAAasD,UAAW1D,EAAYhB,MAAO,EAAGqB,KAAK,OAAOpB,YAAY,iCAE3F,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,uBAAasD,UAAW1D,EAAYhB,MAAO,EAAGqB,KAAK,YAAYpB,YAAY,2BAEhG,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,WAAMsD,UAAW1D,EAAYhB,MAAO,EAAGqB,KAAK,OAAOpB,YAAY,2BAEpF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,eAASsD,UAAW1D,EAAYhB,MAAO,EAAGqB,KAAK,UAAUpB,YAAY,iCAE1F,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,WAAMsD,UAAW1D,EAAYhB,MAAO,EAAGqB,KAAK,OAAOpB,YAAY,iCAEpF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,aAAQsD,UAAW1D,EAAYhB,MAAO,EAAGqB,KAAK,MAAMpB,YAAY,iCAErF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,cAASsD,UAAW1D,EAAYhB,MAAO,EAAGqB,KAAK,MAAMpB,YAAY,mCAEtF,+DACA,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,uBAAYsD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,qCAEhF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,yBAAUsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,uCAEjF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,oCAAgBsD,UAAW1D,EAAYK,KAAK,QAAQpB,YAAY,wCAErF,cAAC,EAAD,CAAYmB,MAAM,aAAUC,KAAK,OAAQxB,SAAU,SAACC,GAAD,OAnDrE,SAACA,GACf,IAAIb,EDhCa,SAAC8E,GACtB,IAAIY,EAAaZ,EAAK1D,cAgBtB,MAfU,CAAC,YAAS,MAAO,OAAQ,OAAQ,WAAO,WAClD,WAAO,eAAO,eAAO,eAAO,WAAO,KAAO,MAAO,OACjD,OAAO,QAAS,QAAS,eAAO,eAAO,UAAO,UAAO,UACrD,KAAM,KAAO,KAAM,WAAQ,WAAO,MAAO,MAAO,KAAO,MACnD,OAAQ,OAAQ,OAAQ,cAAO,cAAO,MAAO,MAAO,MAEpDuE,SAAQ,SAAAC,GACR,GAAIF,EAAWrE,SAASuE,GAAO,CAE3B,IADA,IAAI/B,EAAM,GACDE,EAAI,EAAGA,EAAI6B,EAAK5B,OAAQD,IAC7BF,GAAO,IAEX6B,EAAYA,EAAWrB,QAAQuB,EAAM/B,OAGtC6B,ECeOG,CAAUhF,EAAEC,OAAOC,OAC7BF,EAAEC,OAAOC,MAAQf,EAiDuE8F,CAAUjF,MAClE,sBAAKX,UAAU,sBAAf,UACI,wBAAQ2B,KAAK,QAAQ3B,UAAU,sBAA/B,oBACA,wBAAQ2B,KAAK,SAASd,MAAM,SAASb,UAAU,mBAA/C,sCAgB5CoE,EAAQ5B,aAAe,CACnB6B,SAAU,MAECD,QCvEAyB,G,OA3BF,WACX,MAAwBzG,oBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAGE,OACI,qCACE,yBAAQM,UAAU,aAAaE,QAHpB,kBAAMR,GAAQ,IAGzB,UACI,cAAC,IAAD,CAASM,UAAU,aADvB,yBAGA,eAACG,EAAA,EAAD,CAAOV,KAAMA,EAAMW,OAPP,kBAAMV,GAAQ,IAOcoG,SAAS,SAASC,UAAU,EAApE,UACE,cAAC5F,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,4CAEF,cAACL,EAAA,EAAMM,KAAP,UACI,cAACuF,EAAD,cCIDjD,EArBC,CACZC,OAAQ,WACJ,OAAO/D,IAAMC,IAAN,UAAaN,EAAb,eAEXqE,QAAS,SAACC,GACN,OAAOjE,IAAMC,IAAN,UAAaN,EAAb,oBAA+BsE,KAE1C+C,QAAS,SAAClG,GACN,OAAOd,IAAMmE,KAAN,UAAcxE,EAAd,aAAiCmB,IAE5CmG,WAAY,SAAChD,EAAKnD,GACd,OAAOd,IAAMqE,MAAN,UAAe1E,EAAf,wBAAqCsE,GAAOnD,IAEvDoG,WAAY,SAACjD,GACT,OAAOjE,IAAMuE,OAAN,UAAgB5E,EAAhB,wBAAsCsE,KAEjDO,aAAc,SAACP,EAAKnD,GAChB,OAAOd,IAAMqE,MAAN,UAAe1E,EAAf,+BAA4CsE,GAAOnD,KCZ5DqE,G,OAAU,WAEZ,IAgBMC,EAAQ,uCAAG,WAAOtE,GAAP,SAAAF,EAAA,6DACbyE,QAAQC,IAAIxE,GADC,SAEPgD,EAAQkD,QAAR,eAAoBlG,IAFb,2CAAH,sDAKd,OACI,mCACI,yBAASC,UAAU,UAAnB,SAEQ,qBAAKA,UAAU,gBAAf,SACA,cAAC,IAAD,CACIyE,cA3BE,CAClBvC,KAAM,GACNwC,QAAS,GACTC,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,IAAK,GACLC,KAAM,GACNC,UAAW,GACXC,KAAM,GACNC,QAAS,GACTC,KAAM,GACNC,IAAI,GACJC,QAAQ,GAeQhB,SAAU,SAACtE,GAAQsE,EAAStE,IAFhC,SAIS,SAAAuF,GACG,OACI,eAAC,IAAD,WACI,qBAAKtF,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kBAAUsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,gCAEjF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kBAAasD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,iCAEjF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,uBAAasD,UAAW1D,EAAYK,KAAK,YAAYpB,YAAY,2BAEtF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,WAAMsD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,2BAE1E,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,eAASsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,iCAEhF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,WAAMsD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,iCAE1E,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,aAAQsD,UAAW1D,EAAYK,KAAK,MAAMpB,YAAY,iCAE3E,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,cAASsD,UAAW1D,EAAYK,KAAK,MAAMpB,YAAY,mCAE5E,+DACA,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,uBAAYsD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,qCAEhF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,yBAAUsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,uCAEjF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,oCAAgBsD,UAAW1D,EAAYK,KAAK,QAAQpB,YAAY,wCAErF,qBAAKQ,MAAO,CAAC8E,QAAS,QAAtB,SACI,cAAC,IAAD,CAAWb,UAAW1D,EAAYK,KAAK,SAASpB,YAAY,wCAEhE,cAAC,EAAD,CAAYmB,MAAM,aAAUC,KAAK,SACjC,sBAAKlC,UAAU,sBAAf,UACI,wBAAQ2B,KAAK,QAAQ3B,UAAU,sBAA/B,oBACA,wBAAQ2B,KAAK,SAASd,MAAM,SAASb,UAAU,mBAA/C,uCAgB5CoE,EAAQ5B,aAAe,CACnB6B,SAAU,MAECD,QCrEAiC,G,OA3BF,WACT,MAAwBjH,oBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAGA,OACI,qCACI,yBAAQM,UAAU,aAAaE,QAHpB,kBAAMR,GAAQ,IAGzB,UACE,cAAC,IAAD,CAAQM,UAAU,cADpB,mBAGF,eAACG,EAAA,EAAD,CAAOV,KAAMA,EAAMW,OAPL,kBAAMV,GAAQ,IAOYoG,SAAS,SAASC,UAAU,EAApE,UACE,cAAC5F,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,+CAEF,cAACL,EAAA,EAAMM,KAAP,UACE,cAAC,EAAD,c,SCsDC6F,EArEH,WACR,MAAgClH,mBAAS,CACzCmH,MAAO,IACPC,OAAQ,IACRC,SAAU,mBACVC,UAAW,mBACXC,KAAM,IALN,mBAAOC,EAAP,KAAiBC,EAAjB,KAOMC,EAASC,iBAAO,MAqCtB,OAdApH,qBAAU,WACFqH,UAAUC,aACVD,UAAUC,YAAYC,eAAc,SAAUC,GAE1CN,EAAY,2BACLD,GADI,IAEPH,SAAUU,EAASC,OAAOX,SAC1BY,UAAWF,EAASC,OAAOV,kBAKxC,IAGC,mCACA,cAAC,IAAD,2BAAgBE,GAAhB,IACIL,MAAM,OACNC,OAAO,OACPc,SAAS,oDACTC,oBArDe,2CAsDfC,iBAAkBX,EAClB3G,QA3CQ,SAAAuH,GAAU,IAAD,EACfC,EAAO,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAOE,SAAS,GAC1BC,EAAS,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAASG,kBAAZ,aAAG,EAAqBC,WAElBhB,EAAOiB,QAAQC,SAASC,UAAU,eAG1CC,wBAAwBN,GAAW,SAACO,EAAKxB,GAAU,IAAD,IACvDwB,GAGJtB,EAAY,2BACLD,GADI,IAEPF,UAAS,OAAEgB,QAAF,IAAEA,GAAF,UAAEA,EAASU,gBAAX,aAAE,EAAmBC,YAAY,GAC1C5B,SAAQ,OAAEiB,QAAF,IAAEA,GAAF,UAAEA,EAASU,gBAAX,aAAE,EAAmBC,YAAY,GACzC1B,OACA2B,mBAAoB,WA4BxBC,IAAKzB,EAPT,SASI,cAAC,IAAD,CACInF,KAAK,UACL5B,KAAK,mDACLyI,SAAS,EACTC,eAAgB,GAChBC,cAAe,WChBhBC,EA1CC,WACZ,OACI,mCACI,oCAEI,sBAAK3I,UAAU,kBAAkBsB,MAAO,CAACsH,OAAO,GAAhD,UACI,sBAAK5I,UAAU,aAAf,UACI,uBAAOA,UAAU,6BAA6Bc,YAAY,yCAC1D,cAAC,IAAD,CAAUd,UAAU,oBAExB,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,kCAAf,+BAEJ,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,qCAAf,wBAEJ,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,oCAAf,8CAIZ,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,UAAf,SAAyB,cAAC,EAAD,QAE7B,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,WAAf,SAA0B,cAAC,EAAD,gBAK1C,qBAAKsB,MAAO,CAAEkF,OAAQ,QAASD,MAAO,OAAQY,SAAU,YAAxD,SACI,cAAC,EAAD,YCPL0B,EA7BI,WAQf,OACE,mCACE,qBAAK7I,UAAU,SAASK,GAAG,UAA3B,SAII,sBAAKA,GAAG,uBAAR,UAEQ,cAAC,EAAD,IAEJ,qBAAKL,UAAU,kBAAf,SACI,cAAC,EAAD,cCJL8I,eAhBI,WACf,OAEQ,qBAAKzI,GAAG,MAAR,SAGI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAQ0I,KAAK,IAAIxD,UAAWyD,a,2DCdvCC,EAA2B,QC2CzBC,GAvCK,WAChB,OACIC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,gDACPC,gBAAgB,EAChBC,mBAAoB,UACpBC,kBAAmB,WACnBC,eAAe,aAChBC,MAAK,SAACC,GACDA,EAAOC,cACPC,eAAeC,WAAWd,GAC1Be,aAAaD,WAAWd,GACxBgB,IAAQC,OAAO,UACfC,OAAOC,SAASC,KAAO,cC4GxBC,I,OAnHC,WACZ,IAAIC,EAAYC,YAAc,oBAC1BC,EAAYD,YAAc,mBAC1BE,EAAaF,YAAc,gBAC3BG,EAAeH,YAAc,mBASjC,OACI,mCACI,qBAAKnK,GAAG,UAAUL,UAAU,SAA5B,SACI,sBAAKA,UAAU,gCAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,iCAAf,UACI,qBAAKA,UAAU,OAAf,SACI,uBAAOsB,MAAO,CAAEsJ,SAAU,SAAUC,WAAY,QAAhD,6BAEJ,qBAAK7K,UAAU,SAAf,SACI,sBAAKsB,MAAO,CAAEwJ,OAAQ,WAAa9K,UAAU,iCAA7C,UACI,mBAAGA,UAAU,sBACb,cAAC,IAAD,cAKhB,qBAAKA,UAAU,eAAf,SAEQ,qBAAIA,UAAU,OAAd,UACI,oBAAIA,UAAU,gBAAd,kDACA,cAAC,IAAD,CAAS4B,GAAG,SAAS5B,UAAU,eAAe+K,gBAAgB,SAA9D,SACI,oBAAG/K,UAAU,eAAb,UACI,cAAC,IAAD,CAAkBA,UAAU,cAC5B,uDAGR,qBAAIA,UAAW,iBAAmBuK,EAAY,SAAW,IAAKjJ,MAAO,CAAEwJ,OAAQ,WAA/E,UACI,oBAAG9K,UAAU,eAAb,UACI,cAAC,IAAD,CAAYA,UAAU,cACtB,gDACA,cAAC,IAAD,CAAeA,UAAU,eAE7B,qBAAIA,UAAU,UAAd,UACI,oBAAIA,UAAU,gBAAd,SACI,cAAC,IAAD,CAAM4B,GAAG,kCAAT,mCAEJ,oBAAI5B,UAAU,gBAAd,SACI,cAAC,IAAD,CAAM4B,GAAG,iCAAT,mCAOZ,qBAAI5B,UAAW,iBAAmByK,EAAY,SAAW,IAAKnJ,MAAO,CAAEwJ,OAAQ,WAA/E,UACI,oBAAG9K,UAAU,eAAb,UACI,cAAC,IAAD,CAAcA,UAAU,cACxB,sEACA,cAAC,IAAD,CAAeA,UAAU,eAEjC,qBAAIA,UAAU,UAAd,UACI,oBAAIA,UAAU,gBAAd,SACQ,cAAC,IAAD,CAAM4B,GAAG,kCAAT,kCAEJ,oBAAI5B,UAAU,gBAAd,SACI,cAAC,IAAD,CAAM4B,GAAG,sCAAT,kDAIhB,qBAAI5B,UAAW,iBAAmB2K,EAAe,SAAW,IAAKrJ,MAAO,CAAEwJ,OAAQ,WAAlF,UACQ,oBAAG9K,UAAU,eAAb,UACI,cAAC,IAAD,CAAcA,UAAU,cACxB,qEACA,cAAC,IAAD,CAAeA,UAAU,eAE5B,oBAAIA,UAAU,UAAd,SACG,oBAAIA,UAAU,gBAAd,SACI,cAAC,IAAD,CAAM4B,GAAG,2BAAT,iCAIZ,qBAAI5B,UAAW,iBAAmB0K,EAAa,SAAW,IAAKpJ,MAAO,CAACwJ,OAAQ,WAA/E,UACI,oBAAG9K,UAAU,eAAb,UACI,cAAC,IAAD,CAAiBA,UAAU,cAC3B,mDACA,cAAC,IAAD,CAAeA,UAAU,eAE7B,oBAAIA,UAAU,UAAd,SACI,oBAAIA,UAAU,gBAAd,SACI,cAAC,IAAD,CAAM4B,GAAG,sBAAT,qDAIZ,oBAAI5B,UAAU,gBAAgBsB,MAAO,CAAEwJ,OAAQ,WAA/C,SACA,oBAAG9K,UAAU,eACTE,QAASgJ,GADb,UAGQ,cAAC,IAAD,CAAkBlJ,UAAU,cAC5B,+EC5FzBgL,I,OAlBS,SAAC,GAAqC,IAApC1B,EAAmC,EAAnCA,MAAO2B,EAA4B,EAA5BA,UAA4B,IAAjBC,gBAAiB,MAAR,GAAQ,EACzD,OACI,qBAAKlL,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wCAAf,UACI,6BAAKsJ,IACL,mBAAGtJ,UAAU,2BAAb,SAAyCiL,OAE7C,qBAAKjL,UAAU,kFAAf,SACI,qBAAIA,UAAU,aAAd,UACI,oBAAIA,UAAU,kBAAd,SAAgC,mBAAGqK,KAAI,WAAMa,GAAb,8BAChC,oBAAIlL,UAAU,yBAAyB,eAAa,OAApD,SAA4DsJ,gBCgDrE6B,I,OAzDE,WACb,OACI,mCACI,sBAAKnL,UAAU,eAAf,UACI,cAAC,GAAD,CAAiBsJ,MAAM,iBAAY4B,SAAS,WAC5C,yBAASlL,UAAU,UAAnB,SACK,qBAAKA,UAAU,sBAAf,SACG,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,qCAAf,SACI,qBAAKA,UAAU,iCAAf,SACI,sBAAKA,UAAU,2CAAf,UACI,sBAAKA,UAAU,YAAf,UACI,sCACA,kFAEJ,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAqBA,UAAU,sBAK/C,qBAAKA,UAAU,qCAAf,SACI,qBAAKA,UAAU,kCAAf,SACI,sBAAKA,UAAU,2CAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qCACA,4EAEJ,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAgBA,UAAU,sBAK1C,qBAAKA,UAAU,qCAAf,SACI,qBAAKA,UAAU,kCAAf,SACI,sBAAKA,UAAU,2CAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qCACA,mFAEJ,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAaA,UAAU,sC,SChDxD,OAA0B,qCCA5BoL,GAAc,SAACC,EAAOC,GAC/B,IAAQ3J,EAA0C2J,EAA1C3J,KAAR,EAAkD2J,EAApCC,QAASC,EAAvB,EAAuBA,gBAAiBC,EAAxC,EAAwCA,KACxC,MACS,aADD9J,EAEO,2BACA0J,GADP,IAEIK,aAAa,EACbF,kBACAC,SAGGJ,GCDJM,GARM,SAACC,GACdA,EACA3M,IAAM4M,SAASC,QAAQC,OAAvB,+BAA2DH,UAEpD3M,IAAM4M,SAASC,QAAQC,OAAvB,eCIFC,GAAcC,0BA0EZC,GAnEa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAE3B,EAA8BC,qBAAWhB,GAAa,CAClDM,aAAa,EACbF,iBAAiB,EACjBC,KAAM,OAHV,mBAAOY,EAAP,KAAkBC,EAAlB,KAMA3M,qBAAU,WAAO4M,MAAa,IAE9B,IAAMA,EAAQ,uCAAG,4BAAA1M,EAAA,6DACTmK,aAAY,OACZwC,GAAaxC,aAAY,OAFhB,kBAKc/K,IAAMC,IAAN,UAAaN,EAAb,UALd,OAKH6N,EALG,OAMTnI,QAAQC,IAAIkI,EAAS,KACjBA,EAAS1M,KAAK2M,SACdJ,EAAS,CACL3K,KAAM,WACN4J,QAAS,CAAEC,iBAAiB,EAAMC,KAAMgB,EAAS1M,KAAK0L,QAVrD,gDAaTzB,aAAaD,WAAWd,GACxBuD,GAAa,MACbF,EAAS,CACL3K,KAAM,WACN4J,QAAS,CAAEC,iBAAiB,EAAOC,KAAM,QAjBpC,yDAAH,qDAsBRkB,EAAS,uCAAG,WAAMC,GAAN,eAAA/M,EAAA,+EAEaZ,IAAMmE,KAAN,UAAcxE,EAAd,eAAmCgO,GAFhD,cAEJH,EAFI,QAGG1M,KAAK2M,SACd1C,aAAa6C,QAAQ5D,EAA0BwD,EAAS1M,KAAK+M,aAJvD,SAMJP,IANI,gCAQHE,EAAS1M,MARN,sCAUN,KAAI0M,SAAS1M,KAVP,0CAWC,KAAI0M,SAAS1M,MAXd,iCAYE,CACR2M,SAAS,EACTK,QAAS,KAAIA,UAdP,0DAAH,sDA2BTC,EAAkB,CAAEL,YAAWM,WARlB,WACfjD,aAAaD,WAAWd,GACxBqD,EAAS,CACL3K,KAAM,WACN4J,QAAS,CAACC,iBAAiB,EAAOC,KAAM,SAICY,aACjD,OACI,cAACL,GAAYkB,SAAb,CAAsBrM,MAAOmM,EAA7B,SACKb,KCCEgB,I,OAvEA,WACX,MAIIC,qBAAWpB,IAHXK,UACIZ,KAAQvI,EAFhB,EAEgBA,IAAKmK,EAFrB,EAEqBA,SAAUC,EAF/B,EAE+BA,SAAUC,EAFzC,EAEyCA,SAMzC,OAHAjJ,QAAQC,IAAIrB,EAAKmK,EAAUC,EAAUC,EAAU,QAKvC,aADJ,CACI,OAAKvN,UAAU,yCAAyCsB,MAAO,CAACkM,WAAY,GAA5E,SACI,sBAAKxN,UAAU,uBAAf,UAEI,qBAAKA,UAAU,sBAAsBsB,MAAO,CAACwJ,OAAQ,WAArD,SACI,mBAAG9K,UAAU,yBAGjB,wBAAQA,UAAU,iBAAiB2B,KAAK,SAAS,iBAAe,WAC5D,iBAAe,0BAA0B,gBAAc,yBACvD,gBAAc,QAAQ,aAAW,oBAFrC,SAGI,sBAAM3B,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,SACI,sBAAKL,UAAU,wBAAf,UACI,cAAC,IAAD,CAAM4B,GAAG,IAAI,iBAAe,WAAW,gBAAc,QAArD,SACI,sBAAK5B,UAAU,mBAAf,UACI,qBAAKA,UAAU,qCAAf,SACI,qBAAKA,UAAU,mBAAf,SACQ,qBAAKyN,IAAKC,GAAKC,IAAI,SAG/B,qBAAK3N,UAAU,qBAAf,SACI,oBAAIA,UAAU,gBAAd,SACKqN,WAKjB,qBAAIrN,UAAU,yCAAyC,kBAAgB,qBAAvE,UACI,6BACI,qBAAIA,UAAU,kBAAd,6BACKqN,OAGT,cAAC,IAAD,CAAMzL,GAAG,IAAT,SACI,oBAAG5B,UAAU,iBAAb,UAA8B,cAAC,IAAD,CAAgBA,UAAU,SAAxD,qBAEJ,cAAC,IAAD,CAAM4B,GAAG,IAAT,SACI,oBAAG5B,UAAU,gBAAb,UAA6B,cAAC,KAAD,CAAkBA,UAAU,SAAzD,yCAEJ,6BACI,oBAAIA,UAAU,uBAElB,6BACI,eAAC,IAAD,CAAM4B,GAAG,IAAI5B,UAAU,gBACnBE,QAASgJ,GADb,UAGA,cAAC,KAAD,CAAUlJ,UAAU,SACpB,gF,mBC3CrB4N,GAtBC,CACZ5K,OAAQ,WACJ,OAAO/D,IAAMC,IAAN,UAAaN,EAAb,mBAGXqE,QAAS,SAACC,GACN,OAAOjE,IAAMC,IAAN,UAAaN,EAAb,wBAAmCsE,KAG9C2K,YAAa,SAAC9N,GACV,OAAOd,IAAMmE,KAAN,UAAcxE,EAAd,iBAAqCmB,IAGhD+N,eAAgB,SAAC5K,EAAKnD,GAClB,OAAOd,IAAMqE,MAAN,UAAe1E,EAAf,4BAAyCsE,GAAOnD,IAG3DgO,eAAgB,SAAC7K,GACb,OAAOjE,IAAMuE,OAAN,UAAgB5E,EAAhB,4BAA0CsE,MCfnD8K,GAAc,WAChB,IAGM3J,EAAQ,uCAAG,WAAOtE,GAAP,SAAAF,EAAA,sEAEP+N,GAAQC,YAAR,eAAyB9N,IAFlB,2CAAH,sDAKd,OACI,mCACI,cAAC,IAAD,CACI0E,cAXU,CAClBvC,KAAM,IAWEmC,SAAU,SAACtE,GAAD,OAAQsE,EAAStE,IAF/B,SAIK,SAAAuF,GACG,OACI,cAAC,IAAD,UACI,sBAAKtF,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,0BAAesD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,4CAI3F,sBAAKd,UAAU,2BAAf,UACA,wBAAQ2B,KAAK,QAAQ3B,UAAU,sBAA/B,oBACA,wBAAQ2B,KAAK,SAAS3B,UAAU,mBAAhC,oCAehCgO,GAAYxL,aAAe,CACvByL,SAAU,MAGCD,UC9BAE,GAnBC,WACZ,MAA4B9O,oBAAS,GAArC,mBAAO+O,EAAP,KAAeC,EAAf,KACA,OACI,qCACI,eAACC,GAAA,EAAD,CAAQnO,QAAS,kBAAMkO,GAAU,IAAjC,UAAwC,cAAC,IAAD,CAASpO,UAAU,aAA3D,cACA,eAACG,EAAA,EAAD,CAAOmO,KAAK,KAAK7O,KAAM0O,EAAQ/N,OAAQ,kBAAMgO,GAAU,IAAQ,kBAAgB,+BAA/E,UACI,cAACjO,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMK,MAAP,CAAaH,GAAG,+BAAhB,sCAIJ,cAACF,EAAA,EAAMM,KAAP,UACQ,cAAC,GAAD,aC6HT8N,GAlIM,WAoBjB,MAAgCnP,mBAAS,IAAzC,mBAAOoP,EAAP,KAAiBC,EAAjB,KACA9O,qBAAU,WACN+O,MACD,IAGF,IAAMA,EAAO,uCAAG,8BAAA7O,EAAA,sEACS+N,GAAQ5K,SADjB,OACHlD,EADG,OAETwE,QAAQC,IAAIzE,EAAIC,KAAK4O,UACrBF,EAAW,OAAC3O,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAW4O,UAHd,2CAAH,qDAMRC,EAAU,uCAAG,WAAOvO,GAAP,SAAAR,EAAA,6DACfyE,QAAQC,IAAIlE,GADG,kBAER8I,IAAKC,KAAK,CACbC,KAAM,UACNC,MAAO,qCACP1E,KAAM,2EACNiK,kBAAkB,EAClBpF,kBAAmB,SACnBD,mBAAoB,UACpBE,eAAe,aAChBC,MAAK,SAAC7J,GACDA,EAAI+J,aACH+D,GAAQG,eAAe1N,GACvBsJ,MAAK,kBAAI+E,WAbH,2CAAH,sDAkBhB,OACI,mCACI,sBAAK1O,UAAU,eAAf,UACI,cAAC,GAAD,CAAiBsJ,MAAM,8BAAqB4B,SAAS,UAEjD,yBAASlL,UAAU,UAAnB,SACI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,mCAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,6BAA6Bc,YAAY,2FAC1D,cAAC,IAAD,CAAUd,UAAU,qBAG5B,qBAAKA,UAAU,+BAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,wBAAQ2B,KAAK,SAAS3B,UAAU,qBAAhC,SACI,0CAEJ,wBAAQ2B,KAAK,SAAS3B,UAAU,qBAAhC,SACI,0CAEJ,wBAAQ2B,KAAK,SAAS3B,UAAU,qBAAhC,SACI,iDAKhB,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,cAAC,GAAD,QAGR,qBAAKA,UAAU,0DAAf,SACI,wBAAOA,UAAU,YAAjB,UACI,gCACI,+BACI,mCAWA,gDAEA,0DAGR,uCACKwO,QADL,IACKA,OADL,EACKA,EAAUpN,KAAI,SAAC0N,EAAMzN,GAAP,OACX,+BACI,6BAAKA,EAAQ,IACb,oCAAKyN,QAAL,IAAKA,OAAL,EAAKA,EAAM5M,OACX,+BACI,cAAC,IAAD,CAAMN,GAAE,+CAAmCkN,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAM5L,KAAjD,SACI,cAAC,KAAD,CAAQlD,UAAU,sBAEtB,cAAC,KAAD,CAAUA,UAAU,YAAYE,QAAS,kBAAI0O,EAAU,OAACE,QAAD,IAACA,OAAD,EAACA,EAAM5L,aAP7D7B,0B,4BC5F1C0N,GArBI,SAAC,GAAwB,IAAtBhP,EAAqB,EAArBA,KAAMiP,EAAe,EAAfA,SAYxB,OACI,mCACI,wBAAQrN,KAAK,SAAS3B,UAAU,qBAAqBE,QAAS,SAACS,GAAD,OAVrD,SAACsO,EAAYC,GAC1B,IACMC,EAAK,CAAEC,OAAQ,CAAE,KADZC,SAAWC,cAAcL,IACCM,WAAY,CAAC,SAC5CC,EAAcH,SAAWF,EAAI,CAAEM,SAAU,OAAQ9N,KAAM,UACvD5B,EAAO,IAAI2P,KAAK,CAACF,GAAc,CAAE7N,KAP7B,oFAQVgO,UAAiB5P,EAAMmP,EAPL,SAYuDU,CAAS7P,EAAMiP,IAApF,SACI,6C,oBCqODa,I,OAvOE,WAAO,IAAD,IAmBnB,EAAgCzQ,mBAAS,IAAzC,mBAAO0Q,EAAP,KAAiBC,EAAjB,KACA,EAAoC3Q,mBAAS,IAA7C,mBAAO6P,EAAP,KAAmBe,EAAnB,KACA,EAA4B5Q,mBAAS,IAArC,mBAAO6Q,EAAP,KAAeC,EAAf,KACA,EAAoC9Q,mBAAS,GAA7C,mBAAO+Q,EAAP,KAAmBC,EAAnB,KAEMC,EADc,GACCF,EACfG,EAAYC,KAAKC,KAAKV,EAAShM,OAFjB,IAMd2M,EANc,GAMJN,EAEhBxQ,qBAAU,WACN+Q,MACF,IAEF,IAAMA,EAAQ,uCAAG,kCAAA7Q,EAAA,sEACK2E,EAAQxB,SADb,OACPlD,EADO,OAGbiQ,EAAW,OAACjQ,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAW4Q,OAEjBC,EALO,OAKM9Q,QALN,IAKMA,GALN,UAKMA,EAAKC,YALX,aAKM,EAAW4Q,MAAMvP,KAAI,SAACT,EAAGU,GACxC,MAAO,CACF,IAAOA,EAAQ,EAChB,uBAAaV,EAAEuB,KACf,WAAOvB,EAAEgE,MACT,yBAAWhE,EAAE+D,QACb,kBAAW/D,EAAEkE,QACb,uBAAclE,EAAEqE,UAChB,WAAOrE,EAAEsE,KACT,eAAUtE,EAAEuE,QACZ,WAAOvE,EAAEwE,KACT,aAASxE,EAAEyE,IACX,GAAMzE,EAAEmE,IACR,qBAAcnE,EAAE0E,OAAS,uBAAY,0BAG7C2K,EAAcY,GArBD,2CAAH,qDA4CRC,EAAY,uCAAG,WAAO3N,EAAKnD,GAAZ,eAAAF,EAAA,6DACbiR,EAAa/Q,EAAKsF,OADL,SAEXb,EAAQf,aAAaP,EAArB,2BAA+BnD,GAA/B,IAAqCsF,QAASyL,KAFnC,OAGjBJ,IAHiB,2CAAH,wDAMlB,OACI,mCACI,sBAAK1Q,UAAU,eAAf,UACI,cAAC,GAAD,CAAiBsJ,MAAM,mCAAsB4B,SAAS,UAElD,yBAASlL,UAAU,UAAnB,SACI,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,mCAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,6BAA6Bc,YAAY,yFAAyCJ,SAAU,SAACC,GAAD,OAAKuP,EAAUvP,EAAEC,OAAOC,UACrI,cAAC,IAAD,CAAUb,UAAU,qBAG5B,qBAAKA,UAAU,+BAAf,SACI,sBAAKA,UAAU,uBAAf,UAII,cAAC,GAAD,CAAYD,KAAMkP,EAAYD,SAAS,2BACvC,wBAAQrN,KAAK,SAAS3B,UAAU,qBAAhC,SACI,0CAEJ,wBAAQ2B,KAAK,SAAS3B,UAAU,qBAAhC,SACI,iDAKhB,qBAAKA,UAAU,0DAAf,SACI,wBAAOA,UAAU,YAAjB,UACI,gCACI,+BACI,mCAWA,gDACA,0CACA,wDACA,iDACA,iDACA,sDACA,0CACA,8CACA,0CACA,4CACA,oCACA,4CACA,oDACA,0DAGR,uCACK8P,QADL,IACKA,GADL,UACKA,EACKiB,MAAMV,EAAcA,EA7H9C,WA2HgB,iBACK,EAEKtP,QAAO,SAACC,GAEN,IAAIgQ,EAAQtN,EAAcuM,EAAO/O,eAEjC,OAAe,KAAX+O,MAEY,OAAJjP,QAAI,IAAJA,KAAM2D,MAAMzD,cAAcC,SAAS6P,IAAnC,OAA6ChQ,QAA7C,IAA6CA,KAAMkB,KAAKhB,cAAcC,SAAS6P,MADhFhQ,YARvB,aACK,EAeKI,KAAI,SAACJ,EAAMK,GAAP,OACN,+BACI,6BAAKoP,EAAUpP,EAAQ,IASvB,oCAAKL,QAAL,IAAKA,OAAL,EAAKA,EAAMkB,OACX,oCAAKlB,QAAL,IAAKA,OAAL,EAAKA,EAAM2D,QACX,oCAAK3D,QAAL,IAAKA,OAAL,EAAKA,EAAM0D,UACX,oCAAK1D,QAAL,IAAKA,OAAL,EAAKA,EAAM+D,OACX,oCAAK/D,QAAL,IAAKA,OAAL,EAAKA,EAAM6D,UACX,oCAAK7D,QAAL,IAAKA,OAAL,EAAKA,EAAMgE,YACX,oCAAKhE,QAAL,IAAKA,OAAL,EAAKA,EAAMiE,OACX,oCAAKjE,QAAL,IAAKA,OAAL,EAAKA,EAAMkE,UACX,oCAAKlE,QAAL,IAAKA,OAAL,EAAKA,EAAMmE,OACX,oCAAKnE,QAAL,IAAKA,OAAL,EAAKA,EAAMoE,MACX,oCAAKpE,QAAL,IAAKA,OAAL,EAAKA,EAAM8D,MACX,6BACI,0BAAU9E,UAAU,eAAeiR,KAAK,IAAIC,aAAY,OAAElQ,QAAF,IAAEA,OAAF,EAAEA,EAAM4D,KAAMnC,UAAU,MAEpF,oBAAInB,MAAO,CAAEiF,MAAO,SAApB,SACS,OAAJvF,QAAI,IAAJA,KAAMqE,OAAS,eAACgJ,GAAA,EAAD,CAAQnO,QAAS,kBAAM2Q,EAAY,OAAC7P,QAAD,IAACA,OAAD,EAACA,EAAMkC,IAAKlC,IAAOf,QAAQ,kBAAkBqB,MAAO,CAAEsJ,SAAU,QAAnG,UAA6G,cAAC,KAAD,IAA7G,2BACN,eAACyD,GAAA,EAAD,CAAQnO,QAAS,kBAAM2Q,EAAY,OAAC7P,QAAD,IAACA,OAAD,EAACA,EAAMkC,IAAKlC,IAAOf,QAAQ,iBAAiBqB,MAAO,CAAEsJ,SAAU,QAAlG,UAA4G,cAAC,IAAD,IAA5G,4BAUd,+BACI,cAAC,IAAD,CAAMhJ,GAAE,2CAA+BZ,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMkC,KAA7C,SACI,cAAC,KAAD,CAAQlD,UAAU,uBAEtB,cAAC,KAAD,CAAUA,UAAU,YAAYE,QAAS,kBA3IzEG,EA2IuF,OAACW,QAAD,IAACA,OAAD,EAACA,EAAMkC,IA1IvGiG,IAAKC,KAAK,CACbC,KAAM,UACNC,MAAO,qCACP1E,KAAM,2EACNiK,kBAAkB,EAClBpF,kBAAmB,SACnBD,mBAAoB,UACpBE,eAAe,aAChBC,MAAK,SAAC7J,GACDA,EAAI+J,aACJrF,EAAQjB,WAAWlD,GAAIsJ,MAAK,kBAAI+G,UAXzB,IAACrQ,UAmGiCgB,gBAiD7B,cAAC,KAAD,CACI8P,cAAe,kBACfC,UAAW,MACXd,UAAWA,EACXe,aA9LP,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBlB,EAAckB,IA8LUC,kBAAmB,gBACnBC,mBAAoB,kBACpBC,kBAAmB,YACnBC,kBAAmB,qBACnB3G,gBAAiB,iCChOlC4G,GAXC,WAEZ,IAAIC,EAAUC,cAEd,OACI,wBAAQ7R,UAAU,uBAAuBE,QAAS,kBAAI0R,EAAQE,UAA9D,4BCEFC,GAAW,WACb,IAAMH,EAAUC,cACRxR,EAAO2R,cAAP3R,GAkBR,EAAoCjB,mBAjBhB,CAChB8D,IAAK,GACLhB,KAAM,GACNwC,QAAS,GACTC,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,IAAK,GACLC,KAAM,GACNC,UAAW,GACXC,KAAM,GACNC,QAAS,GACTC,KAAM,GACNC,IAAI,GACJC,QAAQ,IAGZ,mBAAOhC,EAAP,KAAmB4O,EAAnB,KAEAtS,qBAAU,WACN,IAAMuS,EAAQ,uCAAG,8BAAArS,EAAA,sEACK2E,EAAQvB,QAAQ5C,GADrB,OACPP,EADO,OAGbmS,EAAa,OAACnS,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAW4Q,OAHZ,2CAAH,qDAKduB,MACD,CAAC7R,IAEJ,IAAMgE,EAAQ,uCAAG,WAAOtE,GAAP,iBAAAF,EAAA,+EAES2E,EAAQnB,WAAWtD,EAAKmD,IAAKnD,GAFtC,OAEHD,EAFG,OAGTmS,EAAa,OAACnS,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAW4Q,OAHhB,gDAKTrM,QAAQC,IAAR,MALS,yDAAH,sDASd,OACI,mCACI,sBAAKvE,UAAU,eAAf,UACI,cAAC,GAAD,CAAiBsJ,MAAM,oCACvB,cAAC,GAAD,CAASpJ,QAAS,kBAAI0R,EAAQE,YAC9B,yBAAS9R,UAAU,UAAnB,SACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACgB,KAAnBqD,EAAWH,IACR,cAAC,IAAD,CACIuB,cAAepB,EACXgB,SAAU,SAACtE,GAAWsE,EAAStE,IAFvC,SAIK,SAAAuF,GACG,OACI,cAAC,IAAD,UACI,sBAAKtF,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,uBAAYsD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,qCAEhF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,yBAAUsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,uCAEjF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,oCAAgBsD,UAAW1D,EAAYK,KAAK,QAAQpB,YAAY,wCAErF,qBAAKd,UAAU,cAAf,SACI,eAAC,IAAD,CAAOmS,GAAG,SAASjQ,KAAK,SAASlC,UAAU,oCAA3C,UACI,wBAAQa,OAAO,EAAMoB,MAAM,yBAC3B,wBAAQpB,OAAO,EAAQoB,MAAM,kCAK7C,qBAAKjC,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kBAAUsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,gCAEjF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kBAAasD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,iCAEjF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,uBAAasD,UAAW1D,EAAYK,KAAK,YAAYpB,YAAY,2BAEtF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,WAAMsD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,2BAE1E,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,eAASsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,iCAEhF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,WAAMsD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,iCAE1E,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,aAAQsD,UAAW1D,EAAYK,KAAK,MAAMpB,YAAY,iCAE3E,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,cAASsD,UAAW1D,EAAYK,KAAK,MAAMpB,YAAY,mCAG5E,cAAC,EAAD,CAAYmB,MAAM,aAAUC,KAAK,OAAOO,UAAU,SAG1D,sBAAKzC,UAAU,sBAAf,UACI,wBAAQ2B,KAAK,QAAQ3B,UAAU,sBAA/B,oBACA,wBAAQ2B,KAAK,SAASd,MAAM,SAASb,UAAU,mBAA/C,iCAQvB,yCAazB+R,GAASvP,aAAe,CACpByL,SAAU,MAIC8D,UCtITK,GAAW,WACb,IAAMR,EAAUC,cACRxR,EAAO2R,cAAP3R,GAkBR,EAAoCjB,mBAjBhB,CAChB8D,IAAK,GACLhB,KAAM,GACNwC,QAAS,GACTC,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,IAAK,GACLC,KAAM,GACNC,UAAW,GACXC,KAAM,GACNC,QAAS,GACTC,KAAM,GACNC,IAAI,GACJC,QAAQ,IAGZ,mBAAOa,EAAP,KAAmBmM,EAAnB,KAEA1S,qBAAU,WACN,IAAMuS,EAAQ,uCAAG,8BAAArS,EAAA,sEACKyS,EAAQrP,QAAQ5C,GADrB,OACPP,EADO,OAGbuS,EAAa,OAACvS,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAWwS,OAHZ,2CAAH,qDAKdL,MACD,CAAC7R,IAEJ,IAAMgE,EAAQ,uCAAG,WAAOtE,GAAP,iBAAAF,EAAA,+EAESyS,EAAQpM,WAAWnG,EAAKmD,IAAKnD,GAFtC,OAEHD,EAFG,OAGTuS,EAAa,OAACvS,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAWwS,OACzBX,EAAQE,SAJC,gDAMTxN,QAAQC,IAAR,MANS,yDAAH,sDAUd,OACI,mCACI,sBAAKvE,UAAU,eAAf,UACI,cAAC,GAAD,CAAiBsJ,MAAM,8BAEvB,cAAC,GAAD,CAASpJ,QAAS,kBAAI0R,EAAQE,YAC9B,yBAAS9R,UAAU,UAAnB,SACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACoB,KAAnBkG,EAAWhD,IACZ,cAAC,IAAD,CACIuB,cAAeyB,EACf7B,SAAU,SAACtE,GAAWsE,EAAStE,IAFnC,SAIK,SAAAuF,GACG,OACI,cAAC,IAAD,UACI,sBAAKtF,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,uBAAYsD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,qCAEhF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,yBAAUsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,uCAEjF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,oCAAgBsD,UAAW1D,EAAYK,KAAK,QAAQpB,YAAY,wCAErF,qBAAKd,UAAU,cAAf,SACI,eAAC,IAAD,CAAOmS,GAAG,SAASjQ,KAAK,SAASlC,UAAU,oCAA3C,UACI,wBAAQa,OAAO,EAAMoB,MAAM,mBAC3B,wBAAQpB,OAAO,EAAQoB,MAAM,4BAK7C,qBAAKjC,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kBAAUsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,gCAEjF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kBAAasD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,iCAEjF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,uBAAasD,UAAW1D,EAAYK,KAAK,YAAYpB,YAAY,2BAEtF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,WAAMsD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,2BAE1E,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,eAASsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,iCAEhF,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,WAAMsD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,iCAE1E,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,aAAQsD,UAAW1D,EAAYK,KAAK,MAAMpB,YAAY,iCAE3E,qBAAKd,UAAU,cAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,cAASsD,UAAW1D,EAAYK,KAAK,MAAMpB,YAAY,mCAG5E,cAAC,EAAD,CAAYmB,MAAM,aAAUC,KAAK,OAAOO,UAAU,SAG1D,sBAAKzC,UAAU,sBAAf,UACI,wBAAQ2B,KAAK,QAAQ3B,UAAU,sBAA/B,oBACA,wBAAQ2B,KAAK,SAASd,MAAM,SAASb,UAAU,mBAA/C,iCAOvB,yCAYzBoS,GAAS5P,aAAe,CACpByL,SAAU,MAGCmE,UC9GAI,GA7BC,CACZC,MAAO,SAAC1S,GACJ,OAAOd,IAAMmE,KAAN,UAAcxE,EAAd,eAAmCmB,IAE9C2S,SAAU,SAAC3S,GACP,OAAOd,IAAMmE,KAAN,UAAcxE,EAAd,kBAAsCmB,IAEjD4S,SAAU,WACN,OAAO1T,IAAMC,IAAN,UAAaN,EAAb,qBAEXqE,QAAS,SAACC,GACN,OAAOjE,IAAMC,IAAN,UAAaN,EAAb,uBAAkCsE,KAE7C0P,YAAa,SAAC1P,EAAKnD,GACf,OAAOd,IAAMqE,MAAN,UAAe1E,EAAf,8BAA2CsE,GAAOnD,IAE7D8S,YAAa,SAAC3P,GACV,OAAOjE,IAAMuE,OAAN,UAAgB5E,EAAhB,8BAA4CsE,KAEvDO,aAAc,SAACP,EAAKnD,GAChB,OAAOd,IAAMqE,MAAN,UAAe1E,EAAf,qCAAkDsE,GAAOnD,IAEpE+S,WAAY,SAAC5P,EAAInD,GACb,OAAOd,IAAMqE,MAAN,UAAe1E,EAAf,mCAAgDsE,KAE3D6P,WAAY,SAAChT,GACT,OAAOd,IAAMmE,KAAN,UAAcxE,EAAd,yBAA4CmB,KCpBrDiT,GAAW,WAkBb,IAAMpB,EAAUC,cACRxR,EAAO2R,cAAP3R,GAsBR,EAAsCjB,mBApBlB,CACZ8D,IAAI,GACJmK,SAAU,GACVE,SAAU,GAGV5I,MAAO,GACPsO,MAAO,GACPC,OAAQ,GACRxO,QAAS,GACTyO,SAAU,GACVC,YAAa,GACbC,OAAQ,GACRlM,SAAU,GACVmM,MAAM,IAMd,mBAAOV,EAAP,KAAoBW,EAApB,KAEA5T,qBAAU,WACN,IAAMuS,EAAQ,uCAAG,8BAAArS,EAAA,sEACK2T,GAASvQ,QAAQ5C,GADtB,OACPP,EADO,OAEbyT,EAAc,OAACzT,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAW0T,QAFb,2CAAH,qDAIdvB,MACF,CAAC7R,IAEH,IAAMgE,EAAQ,uCAAG,WAAOtE,GAAP,iBAAAF,EAAA,+EAGS2T,GAASZ,YAAY7S,EAAKmD,IAAKnD,GAHxC,OAGHD,EAHG,OAKTyT,EAAc,OAACzT,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAW0T,QAC1B7B,EAAQE,SANC,gDASVxN,QAAQC,IAAR,MATU,yDAAH,sDAcd,OACI,mCACI,sBAAKvE,UAAU,eAAf,UACI,cAAC,GAAD,CAAiBsJ,MAAM,8BAAsB4B,SAAS,UACtD,cAAC,GAAD,IACA,yBAASlL,UAAU,UAAnB,SACI,qBAAKA,UAAU,OAAf,SAEI,qBAAKA,UAAU,YAAf,SACyB,KAApB4S,EAAY1P,IAEb,cAAC,IAAD,CAEIuB,cAAemO,EACfvO,SAAU,SAACtE,GAAWsE,EAAStE,IAHnC,SAKK,SAAAuF,GACG,OACI,cAAC,IAAD,UACI,sBAAKtF,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,KAsBf,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,uBAAYsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,+BAEpF,qBAAKd,UAAU,uBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kCAAgBsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,gDAExF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,oCAAgBsD,UAAW1D,EAAYK,KAAK,QAAQpB,YAAY,kDAKrF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,QAAQsD,UAAW1D,EAAYK,KAAK,QAAQpB,YAAY,sBAE7E,sBAAKd,UAAU,sBAAf,UACI,uBAAOA,UAAU,cAAjB,+BACA,eAAC,IAAD,CAAOiC,MAAM,GAAGC,KAAK,SAASiQ,GAAG,SAASnS,UAAU,+BAApD,UACI,wBAAQiC,MAAM,gCACd,wBAAQpB,MAAM,MAAMoB,MAAM,QAC1B,wBAAQpB,MAAM,UAAKoB,MAAM,kBAGjC,qBAAKjC,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,yBAAUsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,6CAIzF,qBAAKd,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UAEI,qBAAKA,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,qBAAqBsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,2CAE7F,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,sBAAYsD,UAAW1D,EAAYK,KAAK,cAAcpB,YAAY,oCAEvF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kBAAUsD,UAAW1D,EAAYK,KAAK,SAASpB,YAAY,gCAEhF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,oBAAUsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,kCAElF,sBAAKd,UAAU,sBAAf,UACI,uBAAOA,UAAU,cAAjB,gCACA,eAAC,IAAD,CAAOiC,MAAM,GAAGC,KAAK,OAAOiQ,GAAG,SAASnS,UAAU,oCAAlD,UACI,wBAAQiC,MAAM,iCACd,wBAAQpB,OAAO,EAAMoB,MAAM,+BAC3B,wBAAQpB,OAAO,EAAOoB,MAAM,gCAK5C,sBAAKjC,UAAU,2BAAf,UACI,wBAAQ2B,KAAK,QAAQ3B,UAAU,sBAA/B,oBACA,wBAAQ2B,KAAK,SAASd,MAAM,SAASb,UAAU,mBAA/C,iCAOvB,yCAY7BgT,GAASxQ,aAAe,CACpByL,SAAU,MAGC+E,UC7KAU,GArBE,CACb1Q,OAAQ,WACJ,OAAO/D,IAAMC,IAAN,UAAaN,EAAb,gBAEX+U,UAAW,SAACzQ,GACR,OAAOjE,IAAMC,IAAN,UAAaN,EAAb,qBAAgCsE,KAE3C0Q,QAAS,SAAC7T,GACN,OAAOd,IAAMmE,KAAN,UAAcxE,EAAd,cAAkCmB,IAE7C8T,WAAY,SAAC3Q,EAAKnD,GACd,OAAOd,IAAMqE,MAAN,UAAe1E,EAAf,yBAAsCsE,GAAOnD,IAExD+T,WAAY,SAAC5Q,GACT,OAAOjE,IAAMuE,OAAN,UAAgB5E,EAAhB,yBAAuCsE,KAElDO,aAAc,SAACP,EAAKnD,GAChB,OAAOd,IAAMqE,MAAN,UAAe1E,EAAf,gCAA6CsE,GAAOnD,KCV7DiT,GAAW,WAkBb,IAAMpB,EAAUC,cACRxR,EAAO2R,cAAP3R,GAmBR,EAAoCjB,mBAjBhB,CACZ8D,IAAI,GACJmK,SAAU,GACV1I,MAAO,GACPsO,MAAO,GACPC,OAAQ,GACRxO,QAAS,GACTyO,SAAU,GACVC,YAAa,GACbC,OAAQ,GACRlM,SAAU,GACVmM,MAAM,IAMd,mBAAOO,EAAP,KAAmBE,EAAnB,KAEApU,qBAAU,WACN,IAAMuS,EAAQ,uCAAG,8BAAArS,EAAA,sEACK6T,GAAQC,UAAUtT,GADvB,OACPP,EADO,OAEbiU,EAAa,OAACjU,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAWiU,OAFZ,2CAAH,qDAId9B,MACF,CAAC7R,IAEH,IAAMgE,EAAQ,uCAAG,WAAOtE,GAAP,iBAAAF,EAAA,+EAGS6T,GAAQG,WAAW9T,EAAKmD,IAAKnD,GAHtC,OAGHD,EAHG,OAKTiU,EAAa,OAACjU,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAWiU,OACzBpC,EAAQE,SANC,gDASVxN,QAAQC,IAAR,MATU,yDAAH,sDAcd,OACI,mCACI,sBAAKvE,UAAU,eAAf,UACI,cAAC,GAAD,CAAiBsJ,MAAM,wCAA0B4B,SAAS,UAC1D,cAAC,GAAD,CAAShL,QAAS,kBAAI0R,EAAQE,YAC9B,yBAAS9R,UAAU,UAAnB,SACI,qBAAKA,UAAU,OAAf,SAEI,qBAAKA,UAAU,YAAf,SACwB,KAAnB6T,EAAW3Q,IAEZ,cAAC,IAAD,CAEIuB,cAAeoP,EACfxP,SAAU,SAACtE,GAAWsE,EAAStE,IAHnC,SAKK,SAAAuF,GACG,OACI,cAAC,IAAD,UACI,sBAAKtF,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,KAsBf,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,uBAAYsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,+BAKpF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,oCAAgBsD,UAAW1D,EAAYK,KAAK,QAAQpB,YAAY,kDAKrF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,QAAQsD,UAAW1D,EAAYK,KAAK,QAAQpB,YAAY,sBAE7E,sBAAKd,UAAU,sBAAf,UACI,uBAAOA,UAAU,cAAjB,+BACA,eAAC,IAAD,CAAOiC,MAAM,GAAGC,KAAK,SAASiQ,GAAG,SAASnS,UAAU,+BAApD,UACI,wBAAQiC,MAAM,gCACd,wBAAQpB,MAAM,MAAMoB,MAAM,QAC1B,wBAAQpB,MAAM,UAAKoB,MAAM,kBAGjC,qBAAKjC,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,yBAAUsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,6CAIzF,qBAAKd,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UAEI,qBAAKA,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,qBAAqBsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,2CAE7F,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,sBAAYsD,UAAW1D,EAAYK,KAAK,cAAcpB,YAAY,oCAEvF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kBAAUsD,UAAW1D,EAAYK,KAAK,SAASpB,YAAY,gCAEhF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,oBAAUsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,kCAElF,sBAAKd,UAAU,sBAAf,UACI,uBAAOA,UAAU,cAAjB,gCACA,eAAC,IAAD,CAAOiC,MAAM,GAAGC,KAAK,OAAOiQ,GAAG,SAASnS,UAAU,oCAAlD,UACI,wBAAQiC,MAAM,iCACd,wBAAQpB,OAAO,EAAMoB,MAAM,+BAC3B,wBAAQpB,OAAO,EAAOoB,MAAM,gCAK5C,sBAAKjC,UAAU,2BAAf,UACI,wBAAQ2B,KAAK,QAAQ3B,UAAU,sBAA/B,oBACA,wBAAQ2B,KAAK,SAASd,MAAM,SAASb,UAAU,mBAA/C,iCAOvB,yCAY7BgT,GAASxQ,aAAe,CACpByL,SAAU,MAGC+E,UCxLTA,GAAW,WAEb,IAAMpB,EAAUC,cACRxR,EAAO2R,cAAP3R,GAMR,EAAoCjB,mBAJhB,CACZ8D,IAAI,GACJhB,KAAM,KAEd,mBAAO+R,EAAP,KAAmBC,EAAnB,KAEAvU,qBAAU,WACN,IAAMuS,EAAQ,uCAAG,8BAAArS,EAAA,sEACKsU,GAAYlR,QAAQ5C,GADzB,OACPP,EADO,OAEboU,EAAa,OAACpU,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAW4O,UAFZ,2CAAH,qDAIduD,MACF,CAAC7R,IAEH,IAAMgE,EAAQ,uCAAG,WAAOtE,GAAP,iBAAAF,EAAA,+EAESsU,GAAYrG,eAAe/N,EAAKmD,IAAKnD,GAF9C,OAEHD,EAFG,OAGToU,EAAa,OAACpU,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAW4O,UACzBiD,EAAQE,SAJC,gDAOVxN,QAAQC,IAAR,MAPU,yDAAH,sDAYd,OACI,mCACI,sBAAKvE,UAAU,eAAf,UACI,cAAC,GAAD,CAAiBsJ,MAAM,8BAAsB4B,SAAS,UACtD,cAAC,GAAD,CAAShL,QAAS,kBAAI0R,EAAQE,YAC9B,yBAAS9R,UAAU,UAAnB,SACI,qBAAKA,UAAU,OAAf,SAEI,qBAAKA,UAAU,YAAf,SACwB,KAAnBiU,EAAW/Q,IACZ,cAAC,IAAD,CAEIuB,cAAewP,EACf5P,SAAU,SAACtE,GAAWsE,EAAStE,IAHnC,SAKK,SAAAuF,GACG,OACI,cAAC,IAAD,UACI,sBAAKtF,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,KAEf,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,uBAAYsD,UAAW1D,EAAYK,KAAK,OAAOpB,YAAY,oCAKxF,qBAAKd,UAAU,gBAAf,SACI,qBAAKA,UAAU,iBAGnB,sBAAKA,UAAU,2BAAf,UACI,wBAAQ2B,KAAK,QAAQ3B,UAAU,sBAA/B,oBACA,wBAAQ2B,KAAK,SAASd,MAAM,SAASb,UAAU,mBAA/C,iCAOvB,yCAY7BgT,GAASxQ,aAAe,CACpByL,SAAU,MAGC+E,UC2GA3M,I,OA9LF,WAAO,IAAD,IACf,EAA4BjH,mBAAS,IAArC,mBAAO6Q,EAAP,KAAeC,EAAf,KACA,EAAoC9Q,mBAAS,IAA7C,mBAAO6P,EAAP,KAAmBe,EAAnB,KACA,EAAgC5Q,mBAAS,IAAzC,mBAAOgV,EAAP,KAAiBC,EAAjB,KACA,EAAoCjV,mBAAS,GAA7C,mBAAO+Q,EAAP,KAAmBC,EAAnB,KAEMC,EADc,GACCF,EACfG,EAAYC,KAAKC,KAAK4D,EAAStQ,OAFjB,IAMd2M,EANc,GAMJN,EAEhBxQ,qBAAU,WACN+O,MACF,IACF,IAAMA,EAAO,uCAAG,kCAAA7O,EAAA,sEACMyS,EAAQtP,SADd,OACNlD,EADM,OAEZuU,EAAW,OAACvU,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAWwS,OAEjB+B,EAJM,OAIOxU,QAJP,IAIOA,GAJP,UAIOA,EAAKC,YAJZ,aAIO,EAAWwS,MAAMnR,KAAI,SAACT,EAAGU,GACxC,MAAO,CACH,IAAOA,EAAQ,EACf,uBAAaV,EAAEuB,KACf,WAAOvB,EAAEgE,MACT,yBAAWhE,EAAE+D,QACb,kBAAW/D,EAAEkE,QACb,uBAAclE,EAAEqE,UAChB,WAAOrE,EAAEsE,KACT,eAAUtE,EAAEuE,QACZ,WAAOvE,EAAEwE,KACT,aAASxE,EAAEyE,IACX,GAAMzE,EAAEmE,IACR,qBAAcnE,EAAE0E,OAAS,iBAAW,oBAG5C2K,EAAcsE,GApBF,2CAAH,qDAuCPzD,EAAY,uCAAG,WAAO3N,EAAKnD,GAAZ,eAAAF,EAAA,6DACbiR,EAAa/Q,EAAKsF,OADL,SAEXiN,EAAQ7O,aAAaP,EAArB,2BAA+BnD,GAA/B,IAAqCsF,QAASyL,KAFnC,OAGjBpC,IAHiB,2CAAH,wDAMlB,OACI,mCACI,sBAAK1O,UAAU,eAAf,UACI,cAAC,GAAD,CAAiBsJ,MAAM,6BAAqB4B,SAAS,UAEjD,yBAASlL,UAAU,UAAnB,SACI,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,mCAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,6BAA6Bc,YAAY,yFAAyCJ,SAAU,SAACC,GAAD,OAAKuP,EAAUvP,EAAEC,OAAOC,UACrI,cAAC,IAAD,CAAUb,UAAU,qBAG5B,qBAAKA,UAAU,+BAAf,SACI,sBAAKA,UAAU,uBAAf,UAEQ,cAAC,GAAD,CAAYD,KAAMkP,EAAaD,SAAS,qBAGxC,wBAAQrN,KAAK,SAAS3B,UAAU,qBAAhC,SACI,0CAIJ,wBAAQ2B,KAAK,SAAS3B,UAAU,qBAAhC,SACI,iDAMpB,qBAAKA,UAAU,0DAAf,SACI,wBAAOA,UAAU,YAAjB,UACI,gCACI,+BACI,mCACA,gDACA,0CACA,wDACA,iDACA,iDACA,sDACA,0CACA,8CACA,0CACA,4CACA,oCACA,4CACA,oDACA,0DAGR,uCACKoU,QADL,IACKA,GADL,UACKA,EACKrD,MAAMV,EAAcA,EAhH9C,WA8GgB,iBACK,EAEKtP,QAAO,SAACC,GAEN,IAAIgQ,EAAQtN,EAAcuM,EAAO/O,eAEjC,OAAe,KAAX+O,MAEY,OAAJjP,QAAI,IAAJA,KAAM2D,MAAMzD,cAAcC,SAAS6P,IAAnC,OAA6ChQ,QAA7C,IAA6CA,KAAMkB,KAAKhB,cAAcC,SAAS6P,MADhFhQ,YARvB,aACK,EAeKI,KAAI,SAACJ,EAAMK,GAAP,OACN,+BACI,6BAAMoP,EAAWpP,EAAQ,IACzB,oCAAKL,QAAL,IAAKA,OAAL,EAAKA,EAAMkB,OACX,oCAAKlB,QAAL,IAAKA,OAAL,EAAKA,EAAM2D,QACX,oCAAK3D,QAAL,IAAKA,OAAL,EAAKA,EAAM0D,UACX,oCAAK1D,QAAL,IAAKA,OAAL,EAAKA,EAAM+D,OACX,oCAAK/D,QAAL,IAAKA,OAAL,EAAKA,EAAM6D,UACX,oCAAK7D,QAAL,IAAKA,OAAL,EAAKA,EAAMgE,YACX,oCAAKhE,QAAL,IAAKA,OAAL,EAAKA,EAAMiE,OACX,oCAAKjE,QAAL,IAAKA,OAAL,EAAKA,EAAMkE,UACX,oCAAKlE,QAAL,IAAKA,OAAL,EAAKA,EAAMmE,OACX,oCAAKnE,QAAL,IAAKA,OAAL,EAAKA,EAAMoE,MACX,oCAAKpE,QAAL,IAAKA,OAAL,EAAKA,EAAM8D,MACX,6BAAI,0BAAU9E,UAAU,eAAeiR,KAAK,IAAIC,aAAY,OAAElQ,QAAF,IAAEA,OAAF,EAAEA,EAAM4D,KAAOnC,UAAU,MACrF,oBAAInB,MAAO,CAACiF,MAAM,SAAlB,SACa,OAAJvF,QAAI,IAAJA,KAAMqE,OAAS,eAACgJ,GAAA,EAAD,CAAQnO,QAAS,kBAAM2Q,EAAY,OAAC7P,QAAD,IAACA,OAAD,EAACA,EAAMkC,IAAKlC,IAAOf,QAAQ,kBAAkBqB,MAAO,CAAEsJ,SAAU,QAAnG,UAA6G,cAAC,KAAD,IAA7G,qBACV,eAACyD,GAAA,EAAD,CAAQnO,QAAS,kBAAM2Q,EAAY,OAAC7P,QAAD,IAACA,OAAD,EAACA,EAAMkC,IAAKlC,IAAOf,QAAQ,iBAAiBqB,MAAO,CAAEsJ,SAAU,QAAlG,UAA4G,cAAC,IAAD,IAA5G,sBAWd,+BACI,cAAC,IAAD,CAAMhJ,GAAE,4CAAgCZ,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAMkC,KAA9C,SACI,cAAC,KAAD,CAAQlD,UAAU,sBAEtB,cAAC,KAAD,CAAUA,UAAU,aAAaE,QAAS,kBA5H1EG,EA4HwF,OAACW,QAAD,IAACA,OAAD,EAACA,EAAMkC,IA3HxGiG,IAAKC,KAAK,CACbC,KAAM,UACNC,MAAO,qCACP1E,KAAM,2EACNiK,kBAAkB,EAClBpF,kBAAmB,SACnBD,mBAAoB,UACpBE,eAAe,aAChBC,MAAK,SAAC7J,GACDA,EAAI+J,aACJyI,EAAQnM,WAAW9F,GAAIsJ,MAAK,kBAAI+E,UAXzB,IAACrO,UA6FiCgB,gBAuC7B,cAAC,KAAD,CACI8P,cAAe,kBACfC,UAAW,MACXd,UAAWA,EACXe,aAvKP,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBlB,EAAckB,IAuKUC,kBAAmB,gBACnBC,mBAAoB,kBACpBC,kBAAmB,YACnBC,kBAAmB,qBACnB3G,gBAAiB,iCCvJlCwJ,I,cAxCI,SAAC,GAAiC,IAAhCnO,EAA+B,EAA/BA,QAASoO,EAAsB,EAAtBA,WAAYzU,EAAU,EAAVA,KACtC,OACI,mCACI,eAACI,EAAA,EAAD,CAAOmO,KAAK,KAAK7O,KAAM2G,EAAShG,OAAQ,kBAAMoU,GAAW,IAAQ,kBAAgB,+BAAjF,UACI,cAACrU,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,eAACJ,EAAA,EAAMK,MAAP,CAAaH,GAAG,+BAAhB,sCACYN,QADZ,IACYA,OADZ,EACYA,EAAMsN,cAGtB,cAAClN,EAAA,EAAMM,KAAP,UACI,sBAAKT,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKyN,IAAKC,GAAKC,IAAI,eAEvB,sBAAK3N,UAAU,aAAf,UACI,kDAAY,sBAAMA,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMsN,cACjD,mEAAmB,sBAAMrN,UAAU,cAAhB,gBAAgCD,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAMwN,cACzD,qEAAmB,sBAAMvN,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAM4E,WACxD,yCAAW,sBAAM3E,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMkT,iBAIxD,qBAAKjT,UAAU,YAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qDAAe,sBAAMA,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMmT,YACpD,0DAAa,sBAAMlT,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAM2E,aAClD,sDAAwB,sBAAM1E,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMoT,cAC7D,uDAAe,sBAAMnT,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMqT,iBACpD,mDAAa,sBAAMpT,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMsT,YAClD,qDAAa,sBAAMrT,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMoH,cAClD,sDAAgB,sBAAMnH,UAAU,cAAhB,SAAmC,OAAJD,QAAI,IAAJA,KAAMuT,KAAO,6BAAgB,4CC6B7FmB,I,OA5DI,WAKf,IAAMC,EAAM,SAACC,EAAKtT,GACd,OAAQsT,EAAIC,OAAOC,KAAKF,GAAKtT,KAuCjC,OACI,mCACI,sBAAKrB,UAAU,OAAf,UACI,uBAAOuC,QAAQ,aAAavC,UAAU,oBAAtC,oBACA,uBACIU,SAAU,SAACC,IAzCT,SAACmU,GACC,IAAIC,SAAQ,SAACC,EAASC,GAClC,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,kBAAkBN,GAC7BI,EAAWG,OAAS,SAAC1U,GACjB,IAAM2U,EAAc3U,EAAEC,OAAOgJ,OACvBuF,EAAKE,QAAUiG,EAAa,CAAE3T,KAAM,WACpC4T,EAASpG,EAAGI,WAAW,GACvBiG,EAAKrG,EAAGC,OAAOmG,GACfxV,EAAOsP,SAAWoG,cAAcD,GACtCR,EAAQjV,IAEZmV,EAAWQ,QAAU,SAACvN,GAClB8M,EAAO9M,OAGPwB,MAAK,SAACgM,GACV,IAAM/L,EAAS+L,EAAEvU,IAAF,uCAAM,WAAOT,EAAGiV,GAAV,eAAA/V,EAAA,6DACXmU,EAAQ,CACV3G,SAAUqH,EAAI/T,EAAG,GACjBgE,MAAO+P,EAAI/T,EAAG,GACdsS,MAAOyB,EAAI/T,EAAG,GACduS,OAAQwB,EAAI/T,EAAG,GACf+D,QAASgQ,EAAI/T,EAAG,GAChBwS,SAAUuB,EAAI/T,EAAG,GACjByS,YAAasB,EAAI/T,EAAG,GACpB0S,OAAQqB,EAAI/T,EAAG,GACfwG,SAAUuN,EAAI/T,EAAG,GACjB2S,KAAMoB,EAAI/T,EAAG,KAXA,SAaXkV,GAAQjC,QAAQI,GAbL,gCAcTA,GAdS,2CAAN,yDAgBf1P,QAAQC,IAAIqF,MAUAkM,CADanV,EAAEC,OAAOmV,MAAM,KAGhC7T,KAAK,OAAOP,KAAK,OAAOtB,GAAG,aAAaL,UAAU,6BClDhEoE,I,OAAU,WAiBZ,IAiBMC,EAAQ,uCAAG,WAAOtE,GAAP,SAAAF,EAAA,6DACbyE,QAAQC,IAAIxE,EAAM,WADL,SAEP2T,GAAQE,QAAR,eAAqB7T,IAFd,2CAAH,sDAOd,OACI,mCACI,cAAC,IAAD,CAEI0E,cA5BU,CACd4I,SAAU,GACV1I,MAAO,GACPsO,MAAO,GACPC,OAAQ,GACRxO,QAAS,GACTyO,SAAU,GACVC,YAAa,GACbC,OAAQ,GACRlM,SAAU,GACVmM,MAAM,GAmBFjP,SAAU,SAACtE,GAAWsE,EAAStE,IAHnC,SAKK,SAAAuF,GACG,OACA,cAAC,IAAD,UACI,sBAAKtF,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,KAsBf,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,uBAAYsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,+BAKpF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,oCAAgBsD,UAAW1D,EAAYK,KAAK,QAAQpB,YAAY,kDAKrF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,QAAQsD,UAAW1D,EAAYK,KAAK,QAAQpB,YAAY,sBAE7E,sBAAKd,UAAU,sBAAf,UACI,uBAAOA,UAAU,cAAjB,+BACA,eAAC,IAAD,CAAOiC,MAAM,GAAGC,KAAK,SAASiQ,GAAG,SAASnS,UAAU,+BAApD,UACQ,wBAAQiC,MAAM,gCACd,wBAAQpB,MAAM,MAAMoB,MAAM,QAC1B,wBAAQpB,MAAM,UAAKoB,MAAM,kBAGjC,qBAAKjC,UAAU,sBAAf,SACA,cAAC,IAAD,CAAWiC,MAAM,yBAAUsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,6CAIzF,qBAAKd,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,qBAAqBsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,2CAE7F,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,sBAAYsD,UAAW1D,EAAYK,KAAK,cAAcpB,YAAY,oCAEvF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kBAAUsD,UAAW1D,EAAYK,KAAK,SAASpB,YAAY,gCAEhF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,oBAAUsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,kCAElF,sBAAKd,UAAU,sBAAf,UACI,uBAAOA,UAAU,cAAjB,gCACA,eAAC,IAAD,CAAOiC,MAAM,GAAGC,KAAK,OAAOiQ,GAAG,SAASnS,UAAU,oCAAlD,UACQ,wBAAQiC,MAAM,iCACd,wBAAQpB,OAAO,EAAMoB,MAAM,+BAC3B,wBAAQpB,OAAO,EAAOoB,MAAM,gCAKhD,sBAAKjC,UAAU,2BAAf,UACI,wBAAQ2B,KAAK,QAAQ3B,UAAU,sBAA/B,oBACA,wBAAQ2B,KAAK,SAASd,MAAM,SAASb,UAAU,mBAA/C,qCAYhCoE,GAAQ5B,aAAe,CACnByL,SAAU,MAGC7J,UCnIA4R,I,OAlBC,WACZ,MAA4B5W,oBAAS,GAArC,mBAAO+O,EAAP,KAAeC,EAAf,KACA,OACI,qCACI,eAACC,GAAA,EAAD,CAAQnO,QAAS,kBAAMkO,GAAU,IAAjC,UAAwC,cAAC,IAAD,CAAepO,UAAU,aAAjE,cACA,eAACG,EAAA,EAAD,CAAOmO,KAAK,KAAK7O,KAAM0O,EAAQ/N,OAAQ,kBAAMgO,GAAU,IAAQ,kBAAgB,+BAA/E,UACI,cAACjO,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMK,MAAP,CAAaH,GAAG,+BAAhB,kDAIJ,cAACF,EAAA,EAAMM,KAAP,UACQ,cAAC,GAAD,cCqOTwV,GApOG,WAAO,IAAD,IAsBpB,EAA4B7W,mBAAS,IAArC,mBAAO6Q,EAAP,KAAeC,EAAf,KACA,EAAoC9Q,mBAAS,IAA7C,mBAAO6P,EAAP,KAAmBe,EAAnB,KACA,EAA8B5Q,mBAAS,IAAvC,mBAAO8W,EAAP,KAAgBC,EAAhB,KACA,EAA4B/W,oBAAS,GAArC,mBAAO+O,EAAP,KAAeC,EAAf,KACA,EAA4BhP,mBAAS,IAArC,mBAAOgX,EAAP,KAAeC,EAAf,KACA,EAAoCjX,mBAAS,GAA7C,mBAAO+Q,EAAP,KAAmBC,EAAnB,KAEMC,EADc,GACCF,EACfG,EAAYC,KAAKC,KAAK0F,EAAQpS,OAFhB,IAMdwS,EANc,GAMJnG,EAEhBxQ,qBAAU,WACN4W,MACD,IAEH,IAAMA,EAAU,uCAAG,kCAAA1W,EAAA,sEACG6T,GAAQ1Q,SADX,OACTlD,EADS,OAGfqW,EAAU,OAACrW,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAWiU,OAChBwC,EAJS,OAII1W,QAJJ,IAIIA,GAJJ,UAIIA,EAAKC,YAJT,aAII,EAAWiU,MAAM5S,KAAI,SAACT,EAAGU,GACxC,MAAO,CACH,IAAOA,EAAQ,EACf,uBAAaV,EAAE0M,SACf,oCAAiB1M,EAAEgE,MACnB,MAAShE,EAAEsS,MACX,oBAAatS,EAAEuS,OACf,yBAAWvS,EAAE+D,QACb,KAAQ/D,EAAEwS,SACV,sBAAaxS,EAAEyS,YACf,kBAAWzS,EAAE0S,OACb,iBAAU1S,EAAEwG,SACZ,qBAAcxG,EAAE2S,KAAO,6BAAkB,uBAGjDtD,EAAcwG,GAnBC,2CAAH,qDAqBVC,EAAU,uCAAG,WAAOC,GAAP,iBAAA7W,EAAA,6DACfuO,GAAU,GADK,SAGGsF,GAAQC,UAAU+C,GAHrB,OAGT5W,EAHS,OAIfuW,EAAS,OAACvW,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAWiU,OAJN,2CAAH,sDAyBVnD,EAAY,uCAAG,WAAO3N,EAAKnD,GAAZ,eAAAF,EAAA,6DACb8W,EAAW5W,EAAKuT,KADH,SAGXI,GAAQjQ,aAAaP,EAArB,2BAA+BnD,GAA/B,IAAqCuT,MAAOqD,KAHjC,OAIjBJ,IAJiB,2CAAH,wDAOlB,OACI,mCACI,sBAAKvW,UAAU,eAAf,UACI,cAAC,GAAD,CAAiBsJ,MAAM,0CAA0B4B,SAAS,UAEtD,yBAASlL,UAAU,UAAnB,SACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,mCAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,6BAA6Bc,YAAY,yFAAyCJ,SAAU,SAACC,GAAD,OAAKuP,EAAUvP,EAAEC,OAAOC,UACrI,cAAC,IAAD,CAAUb,UAAU,qBAG5B,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,GAAD,CAAYuW,WAAYA,MAE5B,sBAAKvW,UAAU,uBAAf,UACI,cAAC,GAAD,CAAYD,KAAMkP,EAAYD,SAAS,iCACvC,wBAAQrN,KAAK,SAAS3B,UAAU,qBAAhC,SACI,0CAEJ,wBAAQ2B,KAAK,SAAS3B,UAAU,qBAAhC,SACI,kDAKhB,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,cAAC,GAAD,QAGR,qBAAKA,UAAU,0DAAf,SACI,wBAAOA,UAAU,YAAjB,UACI,gCACI,+BACI,mCAWA,gDACA,mEACA,qCACA,oDACA,0DAGR,yCACKkW,QADL,IACKA,GADL,UACKA,EACKnF,MAAMV,EAAcA,EA5H9C,WA0HgB,iBACK,EAEKtP,QAAO,SAACC,GAEN,IAAIgQ,EAAQtN,EAAcuM,EAAO/O,eAEjC,OADAF,EAAK2D,MAAQ3D,EAAK2D,MAAMiS,YACT,KAAX3G,MAEY,OAAJjP,QAAI,IAAJA,KAAM2D,MAAMzD,cAAcC,SAAS6P,IAAnC,OAA6ChQ,QAA7C,IAA6CA,KAAMqM,SAASnM,cAAcC,SAAS6P,MADpFhQ,YARvB,aACK,EAeKI,KAAI,SAACqK,EAAMpK,GAAP,OACN,+BACI,mCAAOiV,EAAUjV,EAAQ,KASzB,oCAAKoK,QAAL,IAAKA,OAAL,EAAKA,EAAM4B,WACX,oCAAK5B,QAAL,IAAKA,OAAL,EAAKA,EAAM9G,QACX,6BACI,wBAAQ3E,UAAU,kBAAkBE,QAAS,WAAQuW,EAAU,OAAChL,QAAD,IAACA,OAAD,EAACA,EAAMvI,MAAtE,iCAGJ,6BACS,OAAJuI,QAAI,IAAJA,KAAM6H,KAAO,eAACjF,GAAA,EAAD,CAAQnO,QAAS,kBAAM2Q,EAAY,OAACpF,QAAD,IAACA,OAAD,EAACA,EAAMvI,IAAKuI,IAAOxL,QAAQ,kBAAkBqB,MAAO,CAAEsJ,SAAU,QAAnG,UAA6G,cAAC,KAAD,IAA7G,iCACJ,eAACyD,GAAA,EAAD,CAAQnO,QAAS,kBAAM2Q,EAAY,OAACpF,QAAD,IAACA,OAAD,EAACA,EAAMvI,IAAKuI,IAAOxL,QAAQ,iBAAiBqB,MAAO,CAAEsJ,SAAU,QAAlG,UAA4G,cAAC,IAAD,IAA5G,4BAUd,+BACI,cAAC,IAAD,CAAMhJ,GAAE,2CAA+B6J,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMvI,KAA7C,SACI,cAAC,KAAD,CAAQlD,UAAU,sBAEtB,cAAC,KAAD,CAAUA,UAAU,aAAaE,QAAS,kBAlI1EG,EAkIyF,OAACoL,QAAD,IAACA,OAAD,EAACA,EAAMvI,IAhIzGiG,IAAKC,KAAK,CACbC,KAAM,UACNC,MAAO,qCACP1E,KAAM,2EACNiK,kBAAkB,EAClBpF,kBAAmB,SACnBD,mBAAoB,UACpBE,eAAe,aAChBC,MAAK,SAAC7J,GACDA,EAAI+J,aACJ6J,GAAQI,WAAWzT,GAAIsJ,MAAK,kBAAM4M,UAZ3B,IAAClW,UAkGiCgB,MAqCZ,cAAC,GAAD,CAAYtB,KAAMqW,EAAQhQ,QAAS+H,EAAQqG,WAAYpG,eAKxE,cAAC,KAAD,CACI+C,cAAe,kBACfC,UAAW,MACXd,UAAWA,EACXe,aAtLP,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBlB,EAAckB,IAsLUC,kBAAmB,gBACnBC,mBAAoB,kBACpBC,kBAAmB,YACnBC,kBAAmB,qBACnB3G,gBAAiB,gCC3LlC8L,I,OA5CK,SAAC,GAAiC,IAAhCzQ,EAA+B,EAA/BA,QAASoO,EAAsB,EAAtBA,WAAYzU,EAAU,EAAVA,KACvC,OACI,mCAII,eAACI,EAAA,EAAD,CAAOmO,KAAK,KAAK7O,KAAM2G,EAAShG,OAAQ,kBAAMoU,GAAW,IAAQ,kBAAgB,+BAAjF,UACI,cAACrU,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,eAACJ,EAAA,EAAMK,MAAP,CAAaH,GAAG,+BAAhB,sCACYN,QADZ,IACYA,OADZ,EACYA,EAAMsN,cAGtB,cAAClN,EAAA,EAAMM,KAAP,UACI,sBAAKT,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKyN,IAAKC,GAAKC,IAAI,eAEvB,sBAAK3N,UAAU,aAAf,UACI,kDAAY,sBAAMA,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMsN,cACjD,mEAAmB,sBAAMrN,UAAU,cAAhB,gBAAgCD,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAMwN,cACzD,qEAAmB,sBAAMvN,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAM4E,WACxD,yCAAW,sBAAM3E,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMkT,iBAIxD,qBAAKjT,UAAU,YAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qDAAe,sBAAMA,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMmT,YAEpD,0DAAa,sBAAMlT,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAM2E,aAClD,sDAAwB,sBAAM1E,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMoT,cAC7D,uDAAe,sBAAMnT,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMqT,iBACpD,mDAAa,sBAAMpT,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMsT,YAClD,qDAAa,sBAAMrT,UAAU,cAAhB,gBAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMoH,cAClD,sDAAgB,sBAAMnH,UAAU,cAAhB,SAAmC,OAAJD,QAAI,IAAJA,KAAMuT,KAAO,6BAAkB,4C,SCjCxGlP,GAAU,SAAC,GAAyB,IAAxB0S,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAuCjB1S,EAAQ,uCAAG,WAAOtE,GAAP,SAAAF,EAAA,sEAEP2T,GAASd,SAAT,eAAuB3S,IAFhB,OAGb+W,GAAQ,GACRC,IAJa,2CAAH,sDASd,OACI,mCACI,cAAC,IAAD,CAEItS,cAjCU,CACd4I,SAAU,GACVE,SAAU,GACVD,SAAU,GAEV3I,MAAO,GACPsO,MAAO,GACPC,OAAQ,GACRxO,QAAS,GACTyO,SAAU,GACVC,YAAa,GACbC,OAAQ,GACRlM,SAAU,GACVmM,MAAM,GAqBFjP,SAAU,SAACtE,GAAWsE,EAAStE,IAHnC,SAKK,SAAAuF,GACG,OACA,cAAC,IAAD,UACI,sBAAKtF,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,KAsBf,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,uBAAYsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,+BAEpF,qBAAKd,UAAU,uBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kCAAgBsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,gDAExF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,oCAAgBsD,UAAW1D,EAAYK,KAAK,QAAQpB,YAAY,kDAErF,qBAAKd,UAAU,uBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,qBAAWsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,mCAEnF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,QAAQsD,UAAW1D,EAAYK,KAAK,QAAQpB,YAAY,sBAE7E,sBAAKd,UAAU,sBAAf,UACI,uBAAOA,UAAU,cAAjB,+BACA,eAAC,IAAD,CAAOiC,MAAM,GAAGC,KAAK,SAASiQ,GAAG,SAASnS,UAAU,+BAApD,UACQ,wBAAQiC,MAAM,gCACd,wBAAQpB,MAAM,MAAMoB,MAAM,QAC1B,wBAAQpB,MAAM,UAAKoB,MAAM,wBAK7C,qBAAKjC,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UAEI,qBAAKA,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,yBAAUsD,UAAW1D,EAAYK,KAAK,UAAUpB,YAAY,uCAEjF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,qBAAqBsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,2CAE7F,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,sBAAYsD,UAAW1D,EAAYK,KAAK,cAAcpB,YAAY,oCAEvF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,kBAAUsD,UAAW1D,EAAYK,KAAK,SAASpB,YAAY,gCAEhF,qBAAKd,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,oBAAUsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,kCAElF,sBAAKd,UAAU,sBAAf,UACI,uBAAOA,UAAU,cAAjB,gCACA,eAAC,IAAD,CAAOiC,MAAM,GAAGC,KAAK,OAAOiQ,GAAG,SAASnS,UAAU,oCAAlD,UACQ,wBAAQiC,MAAM,iCACd,wBAAQpB,OAAO,EAAMoB,MAAM,+BAC3B,wBAAQpB,OAAO,EAAOoB,MAAM,gCAKhD,sBAAKjC,UAAU,2BAAf,UACI,wBAAQ2B,KAAK,QAAQ3B,UAAU,sBAA/B,oBACA,wBAAQ2B,KAAK,SAAS3B,UAAU,mBAAhC,oCAYhCoE,GAAQ5B,aAAe,CACnByL,SAAU,MAGC7J,UC3IA4R,GAlBC,SAAC,GAAgB,IAAfe,EAAc,EAAdA,SACd,EAA4B3X,oBAAS,GAArC,mBAAO+O,EAAP,KAAeC,EAAf,KACA,OACI,qCACI,eAACC,GAAA,EAAD,CAAQnO,QAAS,kBAAMkO,GAAU,IAAjC,UAAwC,cAAC,IAAD,CAAepO,UAAU,aAAjE,cACA,eAACG,EAAA,EAAD,CAAOmO,KAAK,KAAK7O,KAAM0O,EAAQ/N,OAAQ,kBAAMgO,GAAU,IAAQ,kBAAgB,+BAA/E,UACI,cAACjO,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMK,MAAP,CAAaH,GAAG,+BAAhB,kDAIJ,cAACF,EAAA,EAAMM,KAAP,UACI,cAAC,GAAD,CAASqW,QAAS1I,EAAW2I,SAAWA,aC6O7Cd,I,OA5OG,WAAO,IAAD,IAsBpB,EAA4B7W,mBAAS,IAArC,mBAAO6Q,EAAP,KAAeC,EAAf,KACA,EAAoC9Q,mBAAS,IAA7C,mBAAO6P,EAAP,KAAmBe,EAAnB,KACA,EAA8B5Q,mBAAS,IAAvC,mBAAO8W,EAAP,KAAgBC,EAAhB,KACA,EAA4B/W,oBAAS,GAArC,mBAAO+O,EAAP,KAAeC,EAAf,KACA,EAA4BhP,mBAAS,IAArC,mBAAOgX,EAAP,KAAeC,EAAf,KACA,EAAoCjX,mBAAS,GAA7C,mBAAO+Q,EAAP,KAAmBC,EAAnB,KAEMC,EADc,GACCF,EACfG,EAAYC,KAAKC,KAAK0F,EAAQpS,OAFhB,IAOdwS,EAPc,GAOJnG,EAEhBxQ,qBAAU,WACN4W,MACF,IACF,IAAMA,EAAU,uCAAG,kCAAA1W,EAAA,sEACG2T,GAASb,WADZ,OACT7S,EADS,OAGfqW,EAAU,OAACrW,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAW0T,QAChBuD,EAJS,OAIKlX,QAJL,IAIKA,GAJL,UAIKA,EAAKC,YAJV,aAIK,EAAW0T,OAAOrS,KAAI,SAACT,EAAGU,GAC1C,MAAO,CACH,IAAOA,EAAQ,EACf,uBAAaV,EAAE0M,SACf,kCAAiB1M,EAAE4M,SACnB,oCAAiB5M,EAAEgE,MACnB,MAAShE,EAAEsS,MACX,oBAAatS,EAAEuS,OACf,yBAAWvS,EAAE+D,QACb,KAAQ/D,EAAEwS,SACV,sBAAaxS,EAAEyS,YACf,kBAAWzS,EAAE0S,OACb,iBAAU1S,EAAEwG,SACZ,qBAAcxG,EAAE2S,KAAO,+BAAkB,0BAGjDtD,EAAcgH,GApBC,2CAAH,qDAuBVP,EAAU,uCAAG,WAAOC,GAAP,iBAAA7W,EAAA,6DACfuO,GAAU,GADK,SAGGoF,GAASvQ,QAAQyT,GAHpB,OAGT5W,EAHS,OAIfuW,EAAS,OAACvW,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,aAAC,EAAW0T,QAJN,2CAAH,sDAOVK,EAAU,uCAAG,WAAOzT,GAAP,SAAAR,EAAA,6DACfyE,QAAQC,IAAIlE,GADG,kBAER8I,IAAKC,KAAK,CACbC,KAAM,UACNC,MAAO,qCACP1E,KAAM,2EACNiK,kBAAkB,EAClBpF,kBAAmB,SACnBD,mBAAoB,UACpBE,eAAe,aAChBC,MAAK,SAAC7J,GACDA,EAAI+J,aACJ2J,GAASX,YAAYxS,GAAIsJ,MAAK,kBAAM4M,WAZ7B,2CAAH,sDAiBV1F,EAAY,uCAAG,WAAO3N,EAAKnD,GAAZ,eAAAF,EAAA,6DACb8W,EAAW5W,EAAKuT,KADH,SAGXE,GAAS/P,aAAaP,EAAtB,2BAAgCnD,GAAhC,IAAsCuT,MAAOqD,KAHlC,OAIjBJ,IAJiB,2CAAH,wDAOlB,OACI,mCACI,sBAAKvW,UAAU,eAAf,UACI,cAAC,GAAD,CAAiBsJ,MAAM,qBAAkB4B,SAAS,UAE9C,yBAASlL,UAAU,UAAnB,SACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,mCAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,6BAA6Bc,YAAY,yFAAyCJ,SAAU,SAACC,GAAD,OAAOuP,EAAUvP,EAAEC,OAAOC,UACvI,cAAC,IAAD,CAAUb,UAAU,qBAG5B,qBAAKA,UAAU,+BAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,cAAC,GAAD,CAAYD,KAAMkP,EAAYD,SAAS,4CACvC,wBAAQrN,KAAK,SAAS3B,UAAU,qBAAhC,SACI,0CAEJ,wBAAQ2B,KAAK,SAAS3B,UAAU,qBAAhC,SACI,iDAKhB,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,cAACiX,GAAD,CAAUF,SAAUR,QAG5B,qBAAKvW,UAAU,0DAAf,SACI,wBAAOA,UAAU,YAAjB,UACI,gCACI,+BACI,mCAWA,gDACA,mEACA,qCACA,oDACA,0DAGR,yCACKkW,QADL,IACKA,GADL,UACKA,EACKnF,MAAMV,EAAcA,EA1H9C,WAwHgB,iBACK,EAEKtP,QAAO,SAACC,GAEN,IAAIgQ,EAAQtN,EAAcuM,EAAO/O,eAEjC,OADAF,EAAK2D,MAAQ3D,EAAK2D,MAAMiS,YACT,KAAX3G,MAEY,OAAJjP,QAAI,IAAJA,KAAM2D,MAAMzD,cAAcC,SAAS6P,IAAnC,OAA6ChQ,QAA7C,IAA6CA,KAAMqM,SAASnM,cAAcC,SAAS6P,MADpFhQ,YARvB,aACK,EAeKI,KAAI,SAACqK,EAAMpK,GAAP,OACF,+BACI,mCAAMiV,EAAWjV,EAAQ,KASzB,oCAAKoK,QAAL,IAAKA,OAAL,EAAKA,EAAM4B,WACX,oCAAK5B,QAAL,IAAKA,OAAL,EAAKA,EAAM9G,QACX,6BACI,wBAAQ3E,UAAU,kBAAkBE,QAAS,WAAQuW,EAAU,OAAChL,QAAD,IAACA,OAAD,EAACA,EAAMvI,MAAtE,iCAMJ,6BACS,OAAJuI,QAAI,IAAJA,KAAM6H,KAAO,eAACjF,GAAA,EAAD,CAAQnO,QAAS,kBAAM2Q,EAAY,OAACpF,QAAD,IAACA,OAAD,EAACA,EAAMvI,IAAKuI,IAAOxL,QAAQ,kBAAkBqB,MAAO,CAAEsJ,SAAU,QAAnG,UAA6G,cAAC,KAAD,IAA7G,iCACR,eAACyD,GAAA,EAAD,CAAQnO,QAAS,kBAAM2Q,EAAY,OAACpF,QAAD,IAACA,OAAD,EAACA,EAAMvI,IAAKuI,IAAOxL,QAAQ,iBAAiBqB,MAAO,CAAEsJ,SAAU,QAAlG,UAA4G,cAAC,IAAD,IAA5G,4BAUV,+BACI,cAAC,IAAD,CAAMhJ,GAAE,4CAAgC6J,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAMvI,KAA9C,SACI,cAAC,KAAD,CAAQlD,UAAU,sBAGtB,cAAC,KAAD,CAAUA,UAAU,aAAaE,QAAS,kBAAK4T,EAAU,OAACrI,QAAD,IAACA,OAAD,EAACA,EAAMvI,aApC/D7B,MAyCjB,cAAC,GAAD,CAAatB,KAAMqW,EAAQhQ,QAAS+H,EAAQqG,WAAYpG,eAKxE,cAAC,KAAD,CACI+C,cAAe,kBACfC,UAAW,MACXd,UAAWA,EACXe,aAvLP,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBlB,EAAckB,IAuLUC,kBAAmB,gBACnBC,mBAAoB,kBACpBC,kBAAmB,YACnBC,kBAAmB,qBACnB3G,gBAAiB,iC,SC9N3CmM,I,OAAa,WACf,MAII9J,qBAAWpB,IAHXK,UACIZ,KAAQvI,EAFhB,EAEgBA,IAAKmK,EAFrB,EAEqBA,SAAUC,EAF/B,EAE+BA,SAAUC,EAFzC,EAEyCA,SAGzCjJ,QAAQC,IAAIrB,EAAKmK,EAAUC,EAAUC,EAAU,QAG/BsE,cAChBsF,SAAS7N,MAAQ,mCAEjB,IAAM8N,EAAmBC,OAAaC,MAAM,CACxCC,QAASF,OACJG,SAAS,4CACTC,IAAI,EAAG,kFACPC,IAAI,GAAI,sFACbC,QAASN,OACJG,SAAS,sEACTC,IAAI,EAAG,kFACPC,IAAI,GAAI,sFACbE,WAAYP,OACPG,SAAS,yFACTK,MAAM,CAACR,KAAQ,WAAY,MAAO,8DAQrChT,EAAQ,uCAAG,WAAOtE,GAAP,iBAAAF,EAAA,+EAISZ,IAAMqE,MAAN,uDAA4DJ,GAAOnD,GAJ5E,OAIHD,EAJG,QAOe,KAAd,QADNgY,EANK,OAMIhY,QANJ,IAMIA,OANJ,EAMIA,EAAKC,YACR,IAAN+X,OAAA,EAAAA,EAAQpL,UACRqL,KAAMrL,QAAQ,qDACd5C,eAAeC,WAAWd,GAC1Be,aAAaD,WAAWd,GACxBgB,IAAQC,OAAO,UACf8N,YAAW,WAEP7N,OAAOC,SAASC,KAAO,WACzB,OAEF0N,KAAMjV,MAAN,OAAYgV,QAAZ,IAAYA,OAAZ,EAAYA,EAAQ/K,SAjBf,gDAoBTzI,QAAQC,IAAR,MACAwT,KAAMjV,MAAM,iDArBH,yDAAH,sDAiDd,OAPAnD,qBAAU,cAKR,IAGE,mCACI,sBAAKK,UAAU,eAAf,UACI,cAAC,KAAD,CACImH,SAAS,YACT8Q,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,YAEV,cAAC,GAAD,CAAiBnP,MAAM,mCAAe4B,SAAS,UAC/C,yBAASlL,UAAU,UAAnB,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,+CAAf,UACI,iHACA,8JACA,cAAC,IAAD,CACIoX,iBAAkBA,EAClB3S,cA/EV,CAClB8S,QAAS,GACTI,QAAS,GACTC,WAAW,IA6EiBvT,SAAU,SAACtE,GAAD,OAAQsE,EAAStE,IAH/B,SAKK,SAAAuF,GACG,OACA,eAAC,IAAD,WACI,qBAAKtF,UAAU,2BAAf,SACI,cAAC,IAAD,CAAWkC,KAAK,UAAUD,MAAM,6BAAcsD,UAAW1D,EAAYf,YAAY,2CAErF,qBAAKd,UAAU,4BAAf,SACI,cAAC,IAAD,CAAWkC,KAAK,UAAUD,MAAM,8BAAesD,UAAW1D,EAAYf,YAAY,4CAEtF,qBAAKd,UAAU,4BAAf,SACI,cAAC,IAAD,CAAWkC,KAAK,aAAaD,MAAM,+CAAwBsD,UAAW1D,EAAYf,YAAY,qDAElG,wBAAQa,KAAK,SAAS3B,UAAU,wBAAhC,4CAgB5CkX,GAAW1U,aAAe,CACtB6B,SAAU,MAEC6S,UC7GAwB,GA5BG,WACd,OACI,mCACI,cAAC,IAAD,UACI,sBAAKrY,GAAG,MAAR,UACI,cAAC,GAAD,IACA,sBAAKA,GAAG,OAAR,UACI,cAAC,GAAD,CAAQsY,MAAM,UACd,eAAC,IAAD,WACI,cAAC,IAAD,CAAO5P,KAAK,SAAS6P,OAAK,EAACrT,UAAW4F,KACtC,cAAC,IAAD,CAAOpC,KAAK,kCAAkC6P,OAAK,EAACrT,UAAWM,KAC/D,cAAC,IAAD,CAAOkD,KAAK,gCAAgC6P,OAAK,EAACrT,UAAWwM,KAC7D,cAAC,IAAD,CAAOhJ,KAAK,iCAAiC6P,OAAK,EAACrT,UAAWc,KAC9D,cAAC,IAAD,CAAO0C,KAAK,iCAAiC6P,OAAK,EAACrT,UAAW6M,KAC9D,cAAC,IAAD,CAAOrJ,KAAK,kCAAkC6P,OAAK,EAACrT,UAAWsT,KAC/D,cAAC,IAAD,CAAO9P,KAAK,iCAAiC6P,OAAK,EAACrT,UAAWuT,KAC9D,cAAC,IAAD,CAAO/P,KAAK,gCAAgC6P,OAAK,EAACrT,UAAWwT,KAC7D,cAAC,IAAD,CAAOhQ,KAAK,oCAAoC6P,OAAK,EAACrT,UAAWyT,KACjE,cAAC,IAAD,CAAOjQ,KAAK,sCAAsC6P,OAAK,EAACrT,UAAW0T,KACnE,cAAC,IAAD,CAAOlQ,KAAK,2BAA2B6P,OAAK,EAACrT,UAAWgJ,KACxD,cAAC,IAAD,CAAOxF,KAAK,sBAAsB6P,OAAK,EAACrT,UAAW2R,mB,+ECrChE,I,OAAA,IAA0B,mCCWnCgC,GAAQ,WACZ,IAAQvM,EAAcS,qBAAWpB,IAAzBW,UACRrI,QAAQC,IAAI,eACZ4S,SAAS7N,MAAQ,2BAkBjB,MAA4BlK,mBAAS,IAArC,mBAAO+C,EAAP,KACA,GADA,KACkC/C,mBAAS,CACzCmO,SAAU,GACVD,SAAU,MAFZ,mBAAO6L,EAAP,KAAkBC,EAAlB,KAKQ7L,EAAuB4L,EAAvB5L,SAAUD,EAAa6L,EAAb7L,SACZ+L,EAAiB,SAACtZ,GAAD,OACrBqZ,EAAa,2BACRD,GADO,mBAETpZ,EAAKa,OAAOsB,KAAOnC,EAAKa,OAAOC,UAE9B4R,EAAK,uCAAG,WAAOhL,GAAP,SAAA5H,EAAA,6DACZ4H,EAAM6R,iBADM,kBAIc3M,EAAUwM,GAJxB,cAKIzM,QALJ,gDAUVpI,QAAQC,IAAR,MAVU,yDAAH,sDAcX,OACE,mCACE,qBAAKlE,GAAG,OAAR,SACE,qBAAKL,UAAU,yBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAACuZ,GAAA,EAAD,CAAMlV,SAAUoO,EAAhB,SACE,sBAAKzS,UAAU,8BAAf,UACE,sBAAMA,UAAU,6BAAhB,sCACA,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,wBAAf,SAEE,eAACuZ,GAAA,EAAKC,MAAN,WACE,cAACD,GAAA,EAAKE,QAAN,CACEC,UAAWvX,EAAO8Q,MAClBtR,KAAK,OACLb,YAAY,2CACZoB,KAAK,WACLrB,MAAO0M,EACP7M,SAAU2Y,IAEZ,cAACE,GAAA,EAAKE,QAAQE,SAAd,CAAuBhY,KAAK,UAA5B,SACGQ,EAAO8Q,aAId,qBAAKjT,UAAU,wBAAf,SAEE,eAACuZ,GAAA,EAAKC,MAAN,WACE,cAACD,GAAA,EAAKE,QAAN,CACEC,UAAWvX,EAAOmL,SAClB3L,KAAK,WACLO,KAAK,WACLpB,YAAY,6CACZD,MAAOyM,EACP5M,SAAU2Y,IAEZ,cAACE,GAAA,EAAKE,QAAQE,SAAd,CAAuBhY,KAAK,UAA5B,SACGQ,EAAOmL,mBAKhB,sBAAKtN,UAAU,gCAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,uBACE2B,KAAK,WACL3B,UAAU,oBACVK,GAAG,SAEL,uBAAOL,UAAU,oBAAoBuC,QAAQ,OAA7C,6BAIF,8BACE,cAAC,IAAD,CAAMX,GAAG,mBAAmB5B,UAAU,OAAtC,+CAKJ,qBAAKA,UAAU,8BAAf,SACE,wBAAQ2B,KAAK,SAAS3B,UAAU,oBAAhC,6CAMN,qBAAKA,UAAU,gBAAf,SACE,qBAAKyN,IAAKC,GAAKC,IAAI,gCAWjCuL,GAAM1W,aAAe,CACnB6B,SAAU,MAEG6U,UCrGAU,GAhCF,SAAC,GAAmB,IAIzBC,EAJQC,EAAgB,EAAhBA,UACZ,EAEI1M,qBAAWpB,IADXK,UAAYX,EADhB,EACgBA,YAAaF,EAD7B,EAC6BA,gBAI7B,GAAIE,EACAmO,EACI,qBAAK7Z,UAAU,gCAAf,SACI,cAAC+Z,GAAA,EAAD,CAASC,UAAU,SAAS/Z,QAAQ,eAI3C,CACD,GAAIuL,EAAiB,OAAO,cAAC,IAAD,CAAU5J,GAAG,WAErCiY,EACI,mCACmB,UAAdC,GAAyB,cAAC,GAAD,MAI1C,OACI,qBAAK9Z,UAAU,UAAf,SACI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAU,gBAAf,SACK6Z,SCdNI,I,OAfC,CACZC,SAAU,SAACna,GACP,OAAOd,IAAMmE,KAAN,UAAcxE,EAAd,oBAAwCmB,IAEnD+S,WAAY,SAAC/S,GACT,OAAOd,IAAMmE,KAAN,UAAcxE,EAAd,0BAA8CmB,MCIvDoa,GAAiB,SAACrY,GACJ+P,cAAhB,IAMMuF,EAAmBC,OAAaC,MAAM,CACxC8C,IAAK/C,OAAaG,SAAS,mCACtBE,IAAI,EAAG,+DACPD,IAAI,EAAG,wDACZnK,SAAU+J,OACLG,SAAS,4CACTC,IAAI,EAAG,kFACPC,IAAI,GAAI,sFACb2C,YAAahD,OACRG,SAAS,yFACbK,MAAM,CAACR,KAAQ,YAAa,MAAO,8DAGlChT,EAAQ,uCAAG,WAAOtE,GAAP,iBAAAF,EAAA,6DAEb+U,OAAO0F,OAAOva,EAAM+B,GAFP,kBAISmY,GAAQnH,WAAR,eAAwB/S,IAJjC,OAIHD,EAJG,QAOe,KAAd,QAFNgY,EALK,OAKIhY,QALJ,IAKIA,OALJ,EAKIA,EAAKC,YAER,IAAN+X,OAAA,EAAAA,EAAQpL,UACRqL,KAAMrL,QAAQ,yDACdsL,YAAW,WAEPlO,eAAeC,WAAWd,GAC1Be,aAAaD,WAAWd,GACxBgB,IAAQC,OAAO,UACfC,OAAOC,SAASC,KAAO,WACzB,OAEF0N,KAAMjV,MAAMgV,EAAO/K,SAjBd,gDAoBTgL,KAAMjV,MAAM,8BApBH,yDAAH,sDAwBd,OACI,mCACI,sBAAKzC,GAAG,OAAR,UACI,cAAC,KAAD,CACI8G,SAAS,YACT8Q,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,YAEV,qBAAKzY,UAAU,yBAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,cAAC,IAAD,CACIyE,cA5DF,CAClB2V,IAAK,GACL9M,SAAU,GACV+M,YAAY,IA0DQjD,iBAAkBA,EAClB/S,SAAU,SAAC1D,GAAD,OAAK0D,EAAS1D,IAH5B,SAKK,SAAA2E,GACG,OACI,cAAC,IAAD,UACI,sBAAKtF,UAAU,8BAAf,UACQ,sBAAMA,UAAU,6BAAhB,uDACA,sHACA,qBAAKA,UAAU,+BAA+BsB,MAAO,CAACkF,OAAQ,QAA9D,SACI,qBAAKxG,UAAU,eAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,sBAAcsD,UAAW1D,EAAYK,KAAK,MAAMpB,YAAY,kBAGrF,qBAAKd,UAAU,+BAA+BsB,MAAO,CAACkF,OAAQ,QAA9D,SACI,qBAAKxG,UAAU,eAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,+BAAgBsD,UAAW1D,EAAYK,KAAK,WAAWpB,YAAY,2BAG5F,qBAAKd,UAAU,+BAA+BsB,MAAO,CAACkF,OAAQ,QAA9D,SACI,qBAAKxG,UAAU,eAAf,SACI,cAAC,IAAD,CAAWiC,MAAM,wCAAoBsD,UAAW1D,EAAYK,KAAK,cAAcpB,YAAY,8CAGnG,qBAAKd,UAAU,kCASf,qBAAKA,UAAU,8BAAf,SACI,wBAAQ2B,KAAK,SAAS3B,UAAU,oBAAhC,gCAO5B,qBAAKA,UAAU,gBAAf,SACQ,qBAAKyN,IAAKC,GAAKC,IAAI,iCAYnDwM,GAAe3X,aAAe,CAC1ByL,SAAU,MAGCkM,UCxHTjD,GAAa,WAEf,IAAME,EAAmBC,OAAaC,MAAM,CACxCrE,MAAOoE,OACFpE,MAAM,mCACNuE,SAAS,2DAMlB,EAAgCpY,mBAAS,IAAzC,mBAAOmb,EAAP,KAAiBC,EAAjB,KACA,EAA8Bpb,oBAAS,GAAvC,mBAAOqb,EAAP,KAAgBC,EAAhB,KACMrW,EAAQ,uCAAG,WAAOtE,GAAP,yBAAAF,EAAA,+EAEQoa,GAAQC,SAAR,eAAqBna,IAF7B,OAEJD,EAFI,OAGTwE,QAAQC,IAAR,OAAYzE,QAAZ,IAAYA,GAAZ,UAAYA,EAAKC,YAAjB,iBAAY,EAAWqa,WAAvB,aAAY,EAAgBnH,OAC5BuH,EAAW,OAAC1a,QAAD,IAACA,GAAD,UAACA,EAAKC,YAAN,iBAAC,EAAWqa,WAAZ,aAAC,EAAgBnH,QAEN,KADnB6E,EALM,OAKGhY,QALH,IAKGA,OALH,EAKGA,EAAKC,MACP2M,SACPqL,KAAMrL,QAAQoL,EAAO/K,SACrB2N,GAAW,IAEX3C,KAAMrL,QAAQoL,EAAO/K,SAVf,kDAaVzI,QAAQC,IAAR,MACAwT,KAAMjV,MAAM,oCAdF,0DAAH,sDAkBd,OACI,mCACI,sBAAKzC,GAAG,OAAR,UACI,cAAC,KAAD,CACI8G,SAAS,YACT8Q,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,YAEV,qBAAKzY,UAAU,yBAAf,SACKya,EACG,sBAAKza,UAAU,gBAAf,UACI,cAAC,IAAD,CACIoX,iBAAkBA,EAClB3S,cA5CN,CAClBwO,MAAM,IA4CkB5O,SAAU,SAAC1D,GAAQ0D,EAAS1D,IAHhC,SAMK,SAAA2E,GACG,OACI,cAAC,IAAD,UACI,sBAAKtF,UAAU,8BAAf,UACI,sBAAMA,UAAU,6BAAhB,wCACA,kLACA,qBAAKA,UAAU,+BAAf,SACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,IAAD,CAAWuF,UAAW1D,EAAYK,KAAK,QAAQpB,YAAY,wBAGnE,qBAAKd,UAAU,gCAAf,SAKI,8BACI,cAAC,IAAD,CAAM4B,GAAG,SAAS5B,UAAU,OAA5B,0CAGR,qBAAKA,UAAU,8BAAf,SACI,wBAAQ2B,KAAK,SAAS3B,UAAU,oBAAhC,gCAOxB,qBAAKA,UAAU,gBAAf,SACI,qBAAKyN,IAAKC,GAAKC,IAAI,yBAG1B,mCAAE,cAAC,GAAD,CAAgBsF,MAAOsH,cAWlDrD,GAAW1U,aAAe,CACtByL,SAAU,MAGCiJ,U,iBCzFAyD,GApBQ,SAAC,GAAqC,IAAzBC,EAAwB,EAAnCrV,UAAyBsV,EAAU,kBACxD,EAEIzN,qBAAWpB,IADXK,UAAYX,EADhB,EACgBA,YAAaF,EAD7B,EAC6BA,gBAE7B,OAAIE,EACA,8BACI,cAACqO,GAAA,EAAD,CAASC,UAAU,SAAS/Z,QAAQ,WAKxC,mCACI,cAAC,IAAD,2BACQ4a,GADR,IAEIC,OAAQ,SAAAhZ,GAAK,OAAI0J,EAAmB,yCAAG,cAACoP,EAAD,2BAAcC,GAAU/Y,IAA3B,OAA6C,cAAC,IAAD,CAAUF,GAAG,kB,OCoB/FmZ,OAlBf,WACE,OACE,mCACE,cAAC,GAAD,UACA,cAAC,IAAD,UACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOnC,OAAK,EAAC7P,KAAK,IAAIxD,UAAWyV,IACjC,cAAC,GAAD,CAAgBjS,KAAK,SAASxD,UAAWmT,KACzC,cAAC,IAAD,CAAO3P,KAAK,SAAS+R,OAAQ,SAAAhZ,GAAK,OAAI,cAAC,GAAD,2BAAUA,GAAV,IAAiBgY,UAAU,cACjE,cAAC,IAAD,CAAO/Q,KAAK,mBAAmBxD,UAAW0V,KAC1C,cAAC,GAAD,cCrBKC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzR,MAAK,YAAkD,IAA/C0R,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASZ,OAEP,cAAC,IAAMa,WAAP,UACI,cAAC,GAAD,MAGJxE,SAASyE,eAAe,SAK1BV,O","file":"static/js/main.450b8695.chunk.js","sourcesContent":["export const apiURL = process.env.NODE_env !== 'production' ? 'https://corona.lmao.ninja' : 'URL';\r\n    //\"https://corona.lmao.ninja/v2/countries?fbclid=IwAR0cjDQx5onhmxgFX-xkNoHbYyWKTuKUUgmelOfHNYAeESo1PtbM1twUHlI\"","import axios from 'axios'\r\nimport { apiURL } from '../urlCovid';\r\n\r\nconst CovidApi = {\r\n    getVietNam: () => {\r\n        return axios.get(`${apiURL}/v3/covid-19/countries`)\r\n    }\r\n}\r\nexport default CovidApi;","import React,{useEffect, useState} from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n// import img from '../../../assets/images/Vietnam.png';\r\n// import { BiWorld } from 'react-icons/bi';\r\nimport CovidApi from '../../../api/Covid/covidApi';\r\nimport './Information.css';\r\n\r\nconst Information = () => {\r\n    const [dataCovid, setDataCovid] = useState([])\r\n    const [searchData, setSearchData] = useState(\"\")\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => setShow(false);\r\n    useEffect(() => {\r\n        const CovidData = async () => {\r\n            const res = await CovidApi.getVietNam()\r\n            // console.log(res?.data);\r\n            setDataCovid(res?.data)\r\n        }\r\n        CovidData()\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <button className=\"btn-dialog\" variant=\"primary\" onClick={handleShow}>\r\n                COVID-19\r\n            </button>\r\n            <Modal  show={show} onHide={handleClose}  id=\"style-scrollbar\" >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Cập nhật tình hình COVID-19</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div >\r\n                        <input onChange={(e)=>setSearchData(e.target.value)} className=\"form-control input-content mb-input\" placeholder=\"Nhập tên quốc gia\"/>\r\n                    </div>\r\n                    <div className=\"div-dialog height-content scrollbar\">\r\n                        <div className=\"information-content\">\r\n                            <div className=\"information-box\">\r\n                            </div>\r\n                            <table className=\"infor-table\">\r\n                                <tbody>\r\n                                    {dataCovid\r\n                                        ?.filter((item) => {\r\n                                            if (searchData === \"\") {\r\n                                            return item\r\n                                            } else if (item?.country.toLowerCase().includes(searchData.toLowerCase())) {\r\n                                                return item\r\n                                            } else {\r\n                                                return false\r\n                                            }\r\n                                    })\r\n                                    ?.map((item, index) => (\r\n                                        <tr key={index} className=\"border-top-table\">\r\n                                            <td style={{msWordBreak: \"break-word\"}}>\r\n                                                {/* <span className=\"\">\r\n                                                    <img className=\"infor-img\" src={item?.country?.countryInfo?.flag} alt={item?.country?.countryInfo?.flag} />\r\n                                                </span> */}\r\n                                                <span>{item?.country}</span>\r\n                                            </td>\r\n                                            <td className=\"border-infor\">\r\n                                                <div className=\"div-table-1\">Tổng ca nhiễm</div>\r\n                                                <div className=\"div-table-2\">\r\n                                                    <span>{item?.cases }&nbsp;N</span>\r\n                                                </div>\r\n                                                <div className=\"\"></div>\r\n                                            </td>\r\n                                            <td className=\"border-infor-right\">\r\n                                                <div className=\"div-table-1\">Ca tử vong</div>\r\n                                                <div className=\"div-table-2\">\r\n                                                    <span>{item?.deaths }&nbsp;N</span>\r\n                                                </div>\r\n                                                <div className=\"\"></div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))} \r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        {/* <div className=\"information-content \">\r\n                            <div className=\"information-box\">\r\n                                <span className=\"\">\r\n                                    <BiWorld className=\"icon-world\"/>\r\n                                    <img className=\"infor-img\" src={img} alt=\"img\" />\r\n                                </span>\r\n                                <span>Thế giới</span>\r\n                            </div>\r\n                            <table className=\"infor-table \">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-infor\">\r\n                                            <div className=\"div-table-1\">Tổng số ca nhiễm</div>\r\n                                            <div className=\"div-table-2\">\r\n                                                <span>631&nbsp;N</span>\r\n                                            </div>\r\n                                            <div className=\"\"></div>\r\n                                        </td>\r\n                                        <td className=\"border-infor-right\">\r\n                                             <div className=\"div-table-1\">Tổng số ca tử vong</div>\r\n                                            <div className=\"div-table-2\">\r\n                                                <span>15.279</span>\r\n                                            </div>\r\n                                            <div className=\"\"></div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div> */}\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Information;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { BsList } from 'react-icons/bs';\r\nimport Information from '../../Information/Information';\r\nimport './NavBar.css';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg bg-light\">\r\n        <div className=\"container-fluid\">\r\n            <button className=\"btn btn-light button-list\" id=\"sidebarToggle\"><BsList className=\"list-icon\"/></button>\r\n            <div className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><Information/></div>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav ms-auto mt-2 mt-lg-0\">\r\n                    <li className=\"nav-item active\"><Link className=\"nav-link\" to=\"#\"><Information/></Link></li>\r\n                    {/* <li className=\"nav-item\"><a className=\"nav-link\" href=\"#!\">Link</a></li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <Link className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" to=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</Link>\r\n                        <div className=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"navbarDropdown\">\r\n                            <Link className=\"dropdown-item\" to=\"#!\">Action</Link>\r\n                            <Link className=\"dropdown-item\" to=\"#!\">Another action</Link>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <Link className=\"dropdown-item\" to=\"#!\">Something else here</Link>\r\n                        </div>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n    )\r\n}\r\nexport default NavBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormGroup } from 'react-bootstrap';\r\nimport './InputFields.css';\r\n\r\n\r\nInputField.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    form: PropTypes.object.isRequired,\r\n    label: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    options: PropTypes.array,\r\n}\r\nInputField.defaultProps = {\r\n    label: '',\r\n    placeholder: '',\r\n    disabled: false,\r\n    options: [],\r\n    type: 'text',\r\n}\r\n\r\nfunction InputField(props) {\r\n    \r\n    const {\r\n        field, form, label, placeholder, value, type\r\n    } = props;\r\n    const { name } = field;\r\n    const { errors, touched } = form;\r\n    const ShowError = errors[name] && touched[name];\r\n    return (\r\n        <FormGroup className=\"input-field\">\r\n            {label && <label htmlFor={name} className=\"label-field\">{label}</label>}\r\n            <input value={value} type={type} className=\"auth-input form-control\" {...field} placeholder={placeholder} />\r\n            {ShowError && <p className=\"p-field\">{errors[name]}</p>}\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default InputField;","import React from \"react\";\r\n// import PropTypes from 'prop-types';\r\nimport { useField } from \"formik\";\r\nimport './TextAreaFields.css'\r\n\r\n\r\nconst MyTextArea = ({ label, ...props }) => {\r\n\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <>\r\n            <label className=\"label-field\" htmlFor={props.id || props.name}>{label}</label>\r\n            <textarea className=\"text-area\" {...props}{...field}  />\r\n            {meta.touched && meta.errors ? (<div className=\"error\">{meta.error}</div>) : null}\r\n        </>\r\n    )\r\n}\r\nexport default MyTextArea;","\r\nexport const apiURL = process.env.NODE_ENV !== 'production' ? 'http://localhost:8000' : 'http://app.hailehoang.com';","import axios from \"axios\";\r\nimport { apiURL } from '../constants';\r\n\r\nconst SendApi = {\r\n    getAll: () => {\r\n        return axios.get(`${apiURL}/take/all`)\r\n    },\r\n    getById: (_id)=>{\r\n        return axios.get(`${apiURL}/take/id/${_id}`)\r\n    },\r\n    addTake: (data)=>{\r\n        return axios.post(`${apiURL}/take/add`, data)\r\n    },\r\n    updateTake: (_id, data)=>{\r\n        return axios.patch(`${apiURL}/take/update/${_id}`, data)\r\n    },\r\n    deleteTake: (_id) => {\r\n        return axios.delete(`${apiURL}/take/delete/${_id}`)\r\n    },\r\n    updateStatus: (_id, data) => {\r\n        return axios.patch(`${apiURL}/take/update/status/${_id}`, data)\r\n    }\r\n}\r\n\r\nexport default SendApi;","export const CheckWord = (text) => {\r\n    let valueInput = text.toLowerCase()\r\n    let arr = ['nứng' , 'loz', 'lolz', 'lone', 'lồz' ,'lồn' ,\r\n    'Lồn' ,'đĩ' , 'Đĩ' , 'đỉ' , 'cặc', 'cc' , 'ncc', 'fuck',\r\n    'Fuck','bitch', 'Bitch', 'đụ' , 'Đụ' , 'đm' , 'Đm' , 'ĐM' ,\r\n    'dm' ,'Dm' , 'DM' ,'đmm' , 'Đmm' ,'dmm' ,'Dmm' ,'cl' , 'clm' ,\r\n        'clmm', 'clgt', 'Clgt', 'đéo', 'Đéo', \"lon\", \"vai\", \"vl\"]\r\n    \r\n    arr.forEach(word => {\r\n        if (valueInput.includes(word)) {\r\n            let str = \"\"\r\n            for (let i = 0; i < word.length; i++){\r\n                str += \"*\"\r\n            }\r\n            valueInput= valueInput.replace(word, str)\r\n        }\r\n    })\r\n    return valueInput\r\n}\r\n\r\nexport const  removeAccents = (str)  => {\r\n    var AccentsMap = [\r\n        \"aàảãáạăằẳẵắặâầẩẫấậ\",\r\n        \"AÀẢÃÁẠĂẰẲẴẮẶÂẦẨẪẤẬ\",\r\n        \"dđ\", \"DĐ\",\r\n        \"eèẻẽéẹêềểễếệ\",\r\n        \"EÈẺẼÉẸÊỀỂỄẾỆ\",\r\n        \"iìỉĩíị\",\r\n        \"IÌỈĨÍỊ\",\r\n        \"oòỏõóọôồổỗốộơờởỡớợ\",\r\n        \"OÒỎÕÓỌÔỒỔỖỐỘƠỜỞỠỚỢ\",\r\n        \"uùủũúụưừửữứự\",\r\n        \"UÙỦŨÚỤƯỪỬỮỨỰ\",\r\n        \"yỳỷỹýỵ\",\r\n        \"YỲỶỸÝỴ\",\r\n    ];\r\n    for (var i=0; i<AccentsMap.length; i++) {\r\n        var re = new RegExp('[' + AccentsMap[i].substr(1) + ']', 'g');\r\n        var char = AccentsMap[i][0];\r\n        str = str.replace(re, char);\r\n    }\r\n    return str;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Form, FastField } from 'formik';\r\nimport InputField from '../../../../Common/CustomFields/InputFields/InputFields';\r\nimport MyTextArea from '../../../../Common/CustomFields/TextAreaFields/TextAreaFields';\r\nimport takeApi from '../../../../../api/Take/takeApi';\r\nimport { CheckWord } from '../../../../Common/CheckWord/CheckWord'\r\n// import './FormAddSend.css';\r\n\r\nconst FormAdd = () => {\r\n    \r\n    const initialValues = {\r\n        name: '',\r\n        address: '',\r\n        phone: '',\r\n        text: '',\r\n        clothes: '',\r\n        car: '',\r\n        mark: '',\r\n        vegetable: '',\r\n        rice: '',\r\n        noodles: '',\r\n        milk: '',\r\n        egg:'',\r\n        status: false\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n        console.log(data);\r\n        await takeApi.addTake({...data})\r\n    }\r\n    const CheckText = (e) => {\r\n        let res = CheckWord(e.target.value)\r\n        e.target.value = res\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"section\">\r\n                {/* <div className=\"card\"> */}\r\n                    <div className=\"body-form-add\">\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        onSubmit={(data) => onSubmit(data)}\r\n                    >\r\n                            {formikProps => {\r\n                                return ( \r\n                                    <Form>\r\n                                        <div className=\"input-group\">\r\n                                            <FastField label=\"Áo quần\" component={InputField} value={0} name=\"clothes\" placeholder=\"Nhập số bộ\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                           \r\n                                            <FastField label=\"Khẩu trang\" component={InputField} value={0} name=\"mark\" placeholder=\"Nhập số hộp\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                          \r\n                                            <FastField label=\"Rau củ quả\" component={InputField} value={0} name=\"vegetable\" placeholder=\"Nhập số kg\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                          \r\n                                            <FastField label=\"Gạo\" component={InputField} value={0} name=\"rice\" placeholder=\"Nhập số kg\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                          \r\n                                            <FastField label=\"Mì gói\" component={InputField} value={0} name=\"noodles\" placeholder=\"Nhập số thùng\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                         \r\n                                            <FastField label=\"Sữa\" component={InputField} value={0} name=\"milk\" placeholder=\"Nhập số hộp\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                          \r\n                                            <FastField label=\"Trứng\" component={InputField} value={0} name=\"egg\" placeholder=\"Nhập số quả\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                        \r\n                                            <FastField label=\"Xe tải\" component={InputField} value={0} name=\"car\" placeholder=\"Nhập số chiếc\" />\r\n                                        </div>\r\n                                        <h5>Thông tin liên lạc</h5>\r\n                                        <div className=\"input-group\">\r\n                                            <FastField label=\"Họ và tên\" component={InputField} name=\"name\" placeholder=\"Nhập họ và tên\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">\r\n                                            <FastField label=\"Địa chỉ\" component={InputField} name=\"address\" placeholder=\"Nhập địa chỉ\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">\r\n                                            <FastField label=\"Số điện thoại\" component={InputField} name=\"phone\" placeholder=\"Số điện thoại\" />\r\n                                        </div>\r\n                                        <MyTextArea label=\"Ghi chú\" name=\"text\"  onChange={(e)=>CheckText(e)}/>\r\n                                        <div className=\"auth-button-footer \">\r\n                                            <button type=\"reset\" className=\"btn btn-danger mr-5\">Xóa</button>\r\n                                            <button type=\"submit\" value=\"submit\" className=\"btn btn-primary \">Lưu</button>\r\n                                        </div>\r\n                                    </Form>\r\n                                )\r\n                            }}\r\n                         </Formik>\r\n                    </div>\r\n                {/* </div> */}\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nFormAdd.propTypes = {\r\n    onSubmit: PropTypes.func\r\n}\r\nFormAdd.defaultProps = {\r\n    onSubmit: null,\r\n}\r\nexport default FormAdd;","import React, {useState} from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport FormTake from '../../Takes/FormTake/FormTake';\r\nimport './Take.css';\r\n\r\nconst Take = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n    return (\r\n        <>\r\n          <button className=\"button-add\" onClick={handleShow}>\r\n              <IoMdAdd className=\"icon-add\"/>Muốn nhận\r\n          </button>\r\n          <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Muốn nhận gì ?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <FormTake/>\r\n            </Modal.Body>\r\n          {/* <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Xóa\r\n            </Button>\r\n            <Button variant=\"primary\">Gửi</Button>\r\n          </Modal.Footer> */}\r\n          </Modal>\r\n        </>\r\n  )    \r\n}\r\n\r\nexport default Take;","import axios from \"axios\";\r\nimport { apiURL } from '../constants';\r\n\r\nconst SendApi = {\r\n    getAll: () => {\r\n        return axios.get(`${apiURL}/send/all`)\r\n    },\r\n    getById: (_id)=>{\r\n        return axios.get(`${apiURL}/send/id/${_id}`)\r\n    },\r\n    addSend: (data)=>{\r\n        return axios.post(`${apiURL}/send/add`, data)\r\n    },\r\n    updateSend: (_id, data)=>{\r\n        return axios.patch(`${apiURL}/send/update/${_id}`, data)\r\n    },\r\n    deleteSend: (_id) => {\r\n        return axios.delete(`${apiURL}/send/delete/${_id}`)\r\n    },\r\n    updateStatus: (_id, data) => {\r\n        return axios.patch(`${apiURL}/send/update/status/${_id}`, data)\r\n    }\r\n}\r\n\r\nexport default SendApi;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Form, FastField } from 'formik';\r\nimport InputField from '../../../../Common/CustomFields/InputFields/InputFields';\r\nimport MyTextArea from '../../../../Common/CustomFields/TextAreaFields/TextAreaFields';\r\nimport SendApi from '../../../../../api/Send/sendApi';\r\nimport './FormSend.css';\r\n\r\nconst FormAdd = () => {\r\n\r\n    const initialValues = {\r\n        name: '',\r\n        address: '',\r\n        phone: '',\r\n        text: '',\r\n        clothes: '',\r\n        car: '',\r\n        mark: '',\r\n        vegetable: '',\r\n        rice: '',\r\n        noodles: '',\r\n        milk: '',\r\n        egg:'',\r\n        status: false\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n        console.log(data);\r\n        await SendApi.addSend({...data})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"section\">\r\n                {/* <div className=\"card\"> */}\r\n                    <div className=\"body-form-add\">\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        onSubmit={(data)=>{onSubmit(data)}}\r\n                    >\r\n                            {formikProps => {\r\n                                return ( \r\n                                    <Form>\r\n                                        <div className=\"input-group\">\r\n                                            <FastField label=\"Áo quần\" component={InputField} name=\"clothes\" placeholder=\"Nhập số bộ\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                           \r\n                                            <FastField label=\"Khẩu trang\" component={InputField} name=\"mark\" placeholder=\"Nhập số hộp\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                          \r\n                                            <FastField label=\"Rau củ quả\" component={InputField} name=\"vegetable\" placeholder=\"Nhập số kg\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                          \r\n                                            <FastField label=\"Gạo\" component={InputField} name=\"rice\" placeholder=\"Nhập số kg\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                          \r\n                                            <FastField label=\"Mì gói\" component={InputField} name=\"noodles\" placeholder=\"Nhập số thùng\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                         \r\n                                            <FastField label=\"Sữa\" component={InputField} name=\"milk\" placeholder=\"Nhập số hộp\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                          \r\n                                            <FastField label=\"Trứng\" component={InputField} name=\"egg\" placeholder=\"Nhập số quả\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">                                        \r\n                                            <FastField label=\"Xe tải\" component={InputField} name=\"car\" placeholder=\"Nhập số chiếc\" />\r\n                                        </div>\r\n                                        <h5>Thông tin liên lạc</h5>\r\n                                        <div className=\"input-group\">\r\n                                            <FastField label=\"Họ và tên\" component={InputField} name=\"name\" placeholder=\"Nhập họ và tên\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">\r\n                                            <FastField label=\"Địa chỉ\" component={InputField} name=\"address\" placeholder=\"Nhập địa chỉ\" />\r\n                                        </div>\r\n                                        <div className=\"input-group\">\r\n                                            <FastField label=\"Số điện thoại\" component={InputField} name=\"phone\" placeholder=\"Số điện thoại\" />\r\n                                        </div>\r\n                                        <div style={{display: 'none'}}>\r\n                                            <FastField component={InputField} name=\"status\" placeholder=\"Số điện thoại\" />\r\n                                        </div>\r\n                                        <MyTextArea label=\"Ghi chú\" name=\"text\"/>\r\n                                        <div className=\"auth-button-footer \">\r\n                                            <button type=\"reset\" className=\"btn btn-danger mr-5\">Xóa</button>\r\n                                            <button type=\"submit\" value=\"submit\" className=\"btn btn-primary \">Lưu</button>\r\n                                        </div>\r\n                                    </Form>\r\n                                )\r\n                            }}\r\n                         </Formik>\r\n                    </div>\r\n                {/* </div> */}\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nFormAdd.propTypes = {\r\n    onSubmit: PropTypes.func\r\n}\r\nFormAdd.defaultProps = {\r\n    onSubmit: null,\r\n}\r\nexport default FormAdd;","import React,{useState} from 'react';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { BsDash } from 'react-icons/bs';\r\nimport FormSend from '../FormSend/FormSend';\r\nimport './Send.css'\r\n\r\nconst Send = () => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    return (\r\n        <>\r\n            <button className=\"button-add\" onClick={handleShow}>\r\n              <BsDash className=\"icon-send\"/>Muốn cho\r\n            </button>\r\n          <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Bạn muốn cho gì ?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <FormSend/>\r\n            </Modal.Body>\r\n          {/* <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Xóa\r\n            </Button>\r\n            <Button variant=\"primary\">Lưu</Button>\r\n          </Modal.Footer> */}\r\n          </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Send","import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactMapGL, { Source } from '@goongmaps/goong-map-react';\r\n\r\nconst GOONG_MAPTILES_KEY = 'jjnLR19QiJQ5VRmRXGc2215kUXYf2tpUi3MIXPNz';\r\n\r\nconst Map = () => {\r\n    const [viewport, setViewport] = useState({\r\n    width: 400,\r\n    height: 400,\r\n    latitude: 14.716597953261696,\r\n    longitude: 108.29480072949772,\r\n    zoom: 5\r\n    });\r\n    const mapRef = useRef(null);\r\n\r\n    const onClick = event => {\r\n        const feature = event?.features[0];\r\n        const clusterId = feature?.properties?.cluster_id;\r\n\r\n        const mapBoxSource = mapRef.current.getMap().getSource('earthquakes');\r\n        // console.log(mapRef.current, 6767);\r\n\r\n        mapBoxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\r\n            if (err) {\r\n                return;\r\n            }\r\n            setViewport({\r\n                ...viewport,\r\n                longitude: feature?.geometry?.coordinates[0],\r\n                latitude: feature?.geometry?.coordinates[1],\r\n                zoom,\r\n                transitionDuration: 500\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.watchPosition(function (position) {\r\n                // console.log(position, 'pos');\r\n                setViewport({\r\n                    ...viewport,\r\n                    latitude: position.coords.latitude,\r\n                    Longitude: position.coords.longitude\r\n                })\r\n\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <ReactMapGL {...viewport}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            mapStyle=\"https://tiles.goong.io/assets/goong_light_v2.json\"\r\n            goongApiAccessToken={GOONG_MAPTILES_KEY}\r\n            onViewportChange={setViewport}\r\n            onClick={onClick}\r\n            ref={mapRef}\r\n        >\r\n            <Source\r\n                type=\"geojson\"\r\n                data=\"https://docs.goong.io/assets/earthquakes.geojson\"\r\n                cluster={true}\r\n                clusterMaxZoom={14}\r\n                clusterRadius={50}\r\n            >\r\n            </Source>\r\n            </ReactMapGL>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\nimport './Content.css';\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport Take from './Takes/Take/Take';\r\nimport Send from './Sends/Send/Send';\r\nimport Map from '../map/map';\r\n\r\n\r\nconst Content = () => {\r\n    return(\r\n        <>\r\n            <section >\r\n                \r\n                <div className=\"content box-sos\" style={{zIndex:2}} >\r\n                    <div className=\"box-search\">\r\n                        <input className=\"form-control input-content\" placeholder=\"Nhập địa chỉ... \" />\r\n                        <BsSearch className=\"search-Icons\"/>\r\n                    </div>\r\n                    <div className=\"box-item\">\r\n                        <div className=\"row box-item-1 \">\r\n                            <div className=\"col-4 col-lg-4\">\r\n                                <div className=\"box-item-info box-red hover-box\">12345 Nhận</div>\r\n                            </div>\r\n                            <div className=\"col-4 col-lg-4\">\r\n                                <div className=\"box-item-info box-Orange hover-box\">5344 Cho</div>\r\n                            </div>\r\n                            <div className=\"col-4 col-lg-4 \">\r\n                                <div className=\"box-item-info box-green hover-box\">4064 Đã nhận</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"box-add-send\">\r\n                        <div className=\"row box-item-1\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"box-add\"><Take/></div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <div className=\"box-send\"><Send/></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ height: '100vh', width: '100%', position: \"absolute\" }}> \r\n                    <Map/>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\n// import SideBar from './Menu/SideBar/SideBar';\r\nimport NavBar from './Menu/NavBar/NavBar';\r\nimport Content from './Content/Content';\r\n// import ReactMapGL from '@goongmaps/goong-map-react';\r\n// import '@goongmaps/goong-js/dist/goong-js.css';\r\n\r\nconst HomeClient = () => {\r\n//     const [viewport, setViewPort] = useState({\r\n//         width: '100vh',\r\n//         height: '100vh',\r\n//         latitude: 37.7577,\r\n//         longitude: -122.4376,\r\n//         zoom: 8,\r\n//   })\r\n    return (\r\n      <>\r\n        <div className=\"d-flex\" id=\"wrapper\">\r\n            {/* <!-- Sidebar--> */}\r\n            {/* <SideBar/> */}\r\n            {/* <!-- Page content wrapper--> */}\r\n            <div id=\"page-content-wrapper\">\r\n                {/* <!-- Top navigation--> */}\r\n                    <NavBar/>\r\n                {/* <!-- Page content--> */}\r\n                <div className=\"container-fluid\">\r\n                    <Content />\r\n                </div>\r\n                 \r\n            </div>\r\n        {/* <ReactMapGL {...viewport} onViewportChange={setViewPort}/> */}\r\n            \r\n        </div>\r\n      </>\r\n    )\r\n}\r\nexport default HomeClient;","import React from 'react';\r\nimport {withRouter} from 'react-router'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Client from '../../components/Client/Home';\r\n// import SideBar from '../../components/Client/Home';\r\n\r\nconst ClientPage = () => {\r\n    return (\r\n        \r\n            <div id=\"app\">\r\n                {/* <SideBar/> */}\r\n            {/* <div id=\"main\"> */}\r\n                <Router>\r\n                    <Switch>\r\n                        <Route  path=\"/\" component={Client} />\r\n                    </Switch>\r\n                 </Router>\r\n                {/* </div> */}\r\n            </div>\r\n       \r\n    );\r\n};\r\nexport default withRouter(ClientPage);","export const LOCAL_STORAGE_TOKEN_NAME = 'Login' ","import Swal from 'sweetalert2';\r\nimport Cookies from 'js-cookie';\r\nimport {LOCAL_STORAGE_TOKEN_NAME} from '../../contexts/constants'\r\n\r\nconst LogoutAlter = () => {\r\n    return (\r\n        Swal.fire({\r\n            icon: 'warning',\r\n            title: 'Bạn muốn đăng xuất ?',\r\n            showDenyButton: true,\r\n            confirmButtonColor: '#1f1498',\r\n            confirmButtonText: 'Thoát',\r\n            denyButtonText:'Không',\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                sessionStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n                localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n                Cookies.remove('_token');\r\n                window.location.href = '/login';\r\n            }\r\n        })\r\n    )\r\n}\r\nexport const ErrorAlert = (text) => {\r\n    return (\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: text,\r\n            confirmButtonText: 'Nhập lại!',\r\n            confirmButtonColor: '#435ebe',\r\n        })\r\n    )\r\n}\r\nexport const sucAlert = (text) => {\r\n  return Swal.fire({\r\n      icon: 'success',\r\n      title: text,\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    })\r\n}\r\n\r\nexport default LogoutAlter;","import React, { useContext } from \"react\";\r\nimport { BsChevronDown } from 'react-icons/bs';\r\nimport { RiLogoutBoxRLine,RiDashboard3Line } from 'react-icons/ri';\r\nimport { BsCardList, BsFolderSymlink } from 'react-icons/bs';\r\nimport {MdClear} from 'react-icons/md'\r\nimport {BiUserCircle} from 'react-icons/bi'\r\nimport { useRouteMatch, Link, NavLink } from 'react-router-dom';\r\n// import { AuthContext } from \"../../contexts/authContext\";\r\nimport LogoutAlter from \"../../Common/Alert/CustomAlert\";\r\nimport './SideBar.css';\r\n\r\nconst SideBar = () => {\r\n    let matchList = useRouteMatch(\"/admin/danh-sach\");\r\n    let matchUser = useRouteMatch(\"/admin/quan-tri\");\r\n    let matchInfor = useRouteMatch(\"/admin/ho-so\");\r\n    let matchProduct = useRouteMatch(\"/admin/hang-hoa\")\r\n    // const {\r\n    //     authState: {\r\n    //         user: {username}\r\n    //     },logoutUser\r\n    // } = useContext(AuthContext)\r\n    // const logout = () => logoutUser()\r\n    // const [open, setOpen] = useState(false);\r\n    \r\n    return (\r\n        <>\r\n            <div id=\"sidebar\" className=\"active\">\r\n                <div className=\"sidebar-wrapper active shadow\">\r\n                    <div className=\"sidebar-header\">\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <div className=\"logo\">\r\n                                <small style={{ fontSize: \"1.1rem\", marginLeft: \"10px\" }}>SMALL-PROJECT</small>\r\n                            </div>\r\n                            <div className=\"toggle\">\r\n                                <div style={{ cursor: \"pointer\" }} className=\"sidebar-hide d-xl-none d-block\">\r\n                                    <i className=\"bi bi-x bi-middle\"></i>\r\n                                    <MdClear />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sidebar-menu\">\r\n                        {/* <nav className=\"navbar navbar-expand-sm \"> */}\r\n                            <ul className=\"menu\">\r\n                                <li className=\"sidebar-title\">Bảng điều khiển </li>\r\n                                <NavLink to=\"/admin\" className=\"sidebar-item\" activeClassName=\"active\">\r\n                                    <p className=\"sidebar-link\" >\r\n                                        <RiDashboard3Line className=\"icon-side\"/>\r\n                                        <span>Trang chủ</span>\r\n                                    </p>\r\n                                </NavLink>\r\n                                <li className={\"sidebar-item \" + (matchList ? \"active\" : \"\")} style={{ cursor: 'pointer' }}>\r\n                                    <p className=\"sidebar-link\" >\r\n                                        <BsCardList className=\"icon-side\"/>\r\n                                        <span>Danh sách</span>\r\n                                        <BsChevronDown className=\"has-sub\"/>\r\n                                    </p>\r\n                                    <ul className=\"submenu\">\r\n                                        <li className=\"submenu-item \">\r\n                                            <Link to=\"/admin/danh-sach/danh-sach-nhan\">Muốn Nhận</Link>\r\n                                        </li>\r\n                                        <li className=\"submenu-item \">\r\n                                            <Link to=\"/admin/danh-sach/danh-sach-cho\">Muốn Cho</Link>\r\n                                        </li>\r\n                                        {/* <li className=\"submenu-item \">\r\n                                            <Link to=\"\">Đã nhận</Link>\r\n                                        </li> */}\r\n                                    </ul>\r\n                                </li>\r\n                                <li className={\"sidebar-item \" + (matchUser ? \"active\" : \"\")} style={{ cursor: 'pointer' }}>\r\n                                    <p className='sidebar-link' >\r\n                                        <BiUserCircle className=\"icon-side\"/>\r\n                                        <span>Quản trị nhân viên</span>\r\n                                        <BsChevronDown className=\"has-sub\"/>\r\n                                    </p>\r\n                                <ul className=\"submenu\">\r\n                                    <li className=\"submenu-item \">\r\n                                            <Link to=\"/admin/quan-tri/danh-sach-admin\">Danh sách admin</Link>\r\n                                        </li>\r\n                                        <li className=\"submenu-item \">\r\n                                            <Link to=\"/admin/quan-tri/danh-sach-nhan-vien\">Danh sách nhân viên</Link>\r\n                                        </li>\r\n                                    </ul>\r\n                            </li>\r\n                            <li className={\"sidebar-item \" + (matchProduct ? \"active\" : \"\")} style={{ cursor: 'pointer' }}>\r\n                                    <p className='sidebar-link' >\r\n                                        <BiUserCircle className=\"icon-side\"/>\r\n                                        <span>Quản trị hàng hóa</span>\r\n                                        <BsChevronDown className=\"has-sub\"/>\r\n                                    </p>\r\n                                     <ul className=\"submenu\">\r\n                                        <li className=\"submenu-item \">\r\n                                            <Link to=\"/admin/quan-tri/hang-hoa\">Danh sách</Link>\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className={\"sidebar-item \" + (matchInfor ? \"active\" : \"\")} style={{cursor: 'pointer'}} > \r\n                                    <p className='sidebar-link'>\r\n                                        <BsFolderSymlink className=\"icon-side\"/>\r\n                                        <span>Hồ sơ</span>\r\n                                        <BsChevronDown className=\"has-sub\"/>\r\n                                    </p>\r\n                                    <ul className=\"submenu\">\r\n                                        <li className=\"submenu-item \">\r\n                                            <Link to=\"/admin/doi-mat-khau\">Đổi mật khẩu</Link>\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className=\"sidebar-item \" style={{ cursor: 'pointer' }}>\r\n                                <p className='sidebar-link'\r\n                                    onClick={LogoutAlter}\r\n                                >\r\n                                        <RiLogoutBoxRLine className=\"icon-side\" />\r\n                                        <span>Đăng xuất</span>\r\n                                        {/* <span>{username}</span> */}\r\n                                    </p>\r\n                                </li>\r\n                            </ul>\r\n                        {/* </nav> */}\r\n                    </div>\r\n                    {/* <button className=\"sidebar-toggler btn x\"><i data-feather=\"x\"></i></button> */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default SideBar;","import React from 'react';\r\nimport './TitleBreadcrumb.css';\r\n\r\nconst TitleBreadcrumb = ({title, subTitile, pathHome=\"\"}) => {\r\n    return (\r\n        <div className=\"page-title\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12 \">\r\n                    <h3>{title}</h3>\r\n                    <p className=\"text-subtitle text-muted\">{subTitile}</p>\r\n                </div>\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12 d-flex col-xs-flexstart align-items-center\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\"><a href={`/${pathHome}`}>Trang chủ</a></li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">{title}</li>\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TitleBreadcrumb;","import React from \"react\";\r\nimport TitleBreadcrumb from '../../Common/TitleBreadcrumb/TitleBreadcrumb';\r\nimport {RiUserReceived2Line, RiHeartAddLine, RiCheckFill} from 'react-icons/ri'\r\nimport './HomePage.css'\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <>\r\n            <div className=\"page-heading\">\r\n                <TitleBreadcrumb title=\"Trang chủ\" pathHome=\"/admin\" />\r\n                <section className=\"section\">\r\n                     <div className=\"card shadow-sm mb-3\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-4 col-md-6 col-sm-6 pd-card\">\r\n                                    <div className=\"box-card box-danger text-white\">\r\n                                        <div className=\"d-flex justify-content-between card-body\">                               \r\n                                            <div className=\"width-box\">\r\n                                                <h3>1234</h3>\r\n                                                <h6>Tổng số hộ muốn nhận</h6>\r\n                                            </div>\r\n                                            <div className=\"width-box \">\r\n                                                <RiUserReceived2Line className=\"box-icon\" />\r\n                                            </div>                                          \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-4 col-md-6 col-sm-6 pd-card\">\r\n                                    <div className=\"box-card box-primary text-white\">\r\n                                        <div className=\"d-flex justify-content-between card-body\">                               \r\n                                            <div className=\"width-box\">\r\n                                                <h3>123</h3>\r\n                                                <h6>Tổng số hộ muốn cho</h6>\r\n                                            </div>\r\n                                            <div className=\"width-box \">\r\n                                                <RiHeartAddLine className=\"box-icon\" />\r\n                                            </div>                                          \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-4 col-md-4 col-sm-4 pd-card\">\r\n                                    <div className=\"box-card box-success text-white\">\r\n                                        <div className=\"d-flex justify-content-between card-body\">                               \r\n                                            <div className=\"width-box\">\r\n                                                <h3>123</h3>\r\n                                                <h6>Tổng số hộ đã nhận</h6>\r\n                                            </div>\r\n                                            <div className=\"width-box \">\r\n                                                <RiCheckFill className=\"box-icon\" />\r\n                                            </div>                                          \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                     </div>   \r\n                </section>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/userface.4ed6765a.jpg\";","export const authReducer = (state, action) => {\r\n    const { type, payload:{isAuthenticated, user} } = action\r\n    switch (type) {\r\n        case 'SET_AUTH':\r\n            return {\r\n                ...state,\r\n                authLoading: false,\r\n                isAuthenticated,\r\n                user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n    if (token) {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n    } else {\r\n        delete axios.defaults.headers.common['Authorization']\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import { createContext, useReducer, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { authReducer } from '../reducers/authReducer'\r\nimport { LOCAL_STORAGE_TOKEN_NAME } from './constants';\r\nimport SetAuthToken from '../Utils/setAuthToken';\r\nimport { apiURL } from '../../api/constants'\r\n\r\n\r\nexport const AuthContext = createContext()\r\n \r\n// export const getIdAdmin = () => {\r\n//     const res = axios.get(`${apiURL}/auth`)\r\n//     console.log(res.data);\r\n// }\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n\r\n    const [authState, dispatch] = useReducer(authReducer, {\r\n        authLoading: true,\r\n        isAuthenticated: false,\r\n        user: null\r\n    })\r\n\r\n    useEffect(() => {loadUser() },[])\r\n\r\n    const loadUser = async () => {\r\n        if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) {\r\n            SetAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME])\r\n        }\r\n        try {\r\n            const response = await axios.get(`${apiURL}/auth`)\r\n            console.log(response,666);\r\n            if (response.data.success)\r\n                dispatch({\r\n                    type: 'SET_AUTH',\r\n                    payload: { isAuthenticated: true, user: response.data.user }\r\n                })\r\n        } catch (err) {\r\n            localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME)\r\n            SetAuthToken(null)\r\n            dispatch({\r\n                type: 'SET_AUTH',\r\n                payload: { isAuthenticated: false, user: null }\r\n            })\r\n        }\r\n    }\r\n\r\n    const loginUser = async userForm => {\r\n        try {\r\n            const response = await axios.post(`${apiURL}/auth/login`, userForm)\r\n            if (response.data.success)\r\n                localStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, response.data.accessToken)\r\n            \r\n            await loadUser()\r\n            // console.log(response.data);\r\n            return response.data\r\n        } catch (err) {\r\n            if (err.response.data)\r\n                return err.response.data\r\n            else return {\r\n                success: false,\r\n                message: err.message\r\n            }\r\n        }\r\n    }\r\n\r\n    const logoutUser = () => {\r\n        localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME)\r\n        dispatch({\r\n            type: 'SET_AUTH',\r\n            payload: {isAuthenticated: false, user: null}\r\n        })\r\n    }\r\n\r\n    const authContextData = { loginUser, logoutUser, authState }\r\n    return (\r\n        <AuthContext.Provider value={authContextData}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContextProvider;","import React, {useContext} from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport {BsPersonSquare} from 'react-icons/bs';\r\nimport { GrSettingsOption, GrLogout } from 'react-icons/gr';\r\nimport img from '../../../assets/images/userface.jpg';\r\nimport LogoutAlter from \"../Alert/CustomAlert\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n    const {\r\n        authState: {\r\n            user: { _id, fullname, password, username },\r\n        },\r\n    } = useContext(AuthContext)\r\n    console.log(_id, fullname, password, username, 'full');\r\n    //const logout = ()=> logoutUser()\r\n\r\n    return (\r\n        // <header>\r\n            <nav className=\"navbar navbar-expand navbar-light px-0\" style={{paddingTop: 0}}>\r\n                <div className=\"container-fluid px-0\" >\r\n                    \r\n                    <div className=\"burger-btn d-block \" style={{cursor: \"pointer\"}}>\r\n                        <i className=\"bi bi-justify fs-3\"></i>\r\n                        {/* <BsList/> */}\r\n                    </div>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">    \r\n                        <div className=\"dropdown ms-auto mt-2\">\r\n                            <Link to=\"/\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                <div className=\"user-menu d-flex\">\r\n                                    <div className=\"user-img d-flex align-items-center\">\r\n                                        <div className=\"avatar avatar-md\">\r\n                                                <img src={img} alt=\"\"/>\r\n                                        </div>\r\n                                    </div>     \r\n                                    <div className=\"user-name text-end\">\r\n                                        <h6 className=\"text-gray-600\">\r\n                                            {fullname}\r\n                                        </h6>\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                            <ul className=\"dropdown-menu dropdown-menu-end shadow\" aria-labelledby=\"dropdownMenuButton\">\r\n                                <li>\r\n                                    <h6 className=\"dropdown-header\">Xin chào &nbsp;\r\n                                        {fullname}\r\n                                    </h6>\r\n                                    </li>\r\n                                <Link to=\"#\">\r\n                                    <p className=\"dropdown-item \"><BsPersonSquare className=\"mr-5\"/> Thông tin</p>        \r\n                                </Link>\r\n                                <Link to=\"#\">\r\n                                    <p className=\"dropdown-item\"><GrSettingsOption className=\"mr-5\"/> Đổi mật khẩu</p>        \r\n                                </Link>\r\n                                <li>\r\n                                    <hr className=\"dropdown-divider\" />\r\n                                </li>    \r\n                                <li>\r\n                                    <Link to=\"#\" className=\"dropdown-item\"\r\n                                        onClick={LogoutAlter}\r\n                                    >\r\n                                    <GrLogout className=\"mr-5\" />\r\n                                    <span>Đăng xuất</span>\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>    \r\n                        </div>                 \r\n                    </div>\r\n                </div>\r\n            {/* </div> */}\r\n            </nav>\r\n        // </header>\r\n    )\r\n}\r\nexport default Navbar;","import axios from 'axios';\r\nimport { apiURL } from '../constants';\r\n\r\nconst CateApi = {\r\n    getAll: () => {\r\n        return axios.get(`${apiURL}/category/all`)\r\n    },\r\n\r\n    getById: (_id) => {\r\n        return axios.get(`${apiURL}/category/id/${_id}`)\r\n    },\r\n\r\n    addCategory: (data) => {\r\n        return axios.post(`${apiURL}/category/add`, data)\r\n    },\r\n\r\n    updateCategory: (_id, data) => {\r\n        return axios.patch(`${apiURL}/category/update/${_id}`, data )\r\n    },\r\n\r\n    deleteCategory: (_id) => {\r\n        return axios.delete(`${apiURL}/category/delete/${_id}`)\r\n    }\r\n}\r\n\r\nexport default CateApi","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Form, FastField } from 'formik';\r\nimport InputField from \"../../../Common/CustomFields/InputFields/InputFields\";\r\nimport CateApi from \"../../../../api/Category/categoryApi\";\r\n\r\nconst FormAddCate = () => {\r\n    const initialValues = {\r\n        name: ''\r\n    }     \r\n    const onSubmit = async (data) => {\r\n        // console.log(data, 23432432432);\r\n        await CateApi.addCategory({ ...data });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={(data)=>onSubmit(data)}\r\n            >\r\n                {formikProps => {\r\n                    return (\r\n                        <Form>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-6 \">\r\n                                    <div className=\"col-sm p-4\">\r\n                                        <div className=\"input-group pad-add \">\r\n                                            <FastField label=\"Tên mặt hàng\" component={InputField} name=\"name\" placeholder=\"Nhập tên mặt hàng\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"auth-button-footer pad-4\">\r\n                                <button type=\"reset\" className=\"btn btn-danger mr-5\">Xóa</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary \">Lưu</button>\r\n                            </div>\r\n                            </div>\r\n                        </Form>       \r\n                    )\r\n                }}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n \r\n\r\nFormAddCate.propTypes = {\r\n    onsubmit: PropTypes.func\r\n}\r\nFormAddCate.defaultProps = {\r\n    onsubmit: null\r\n}\r\n\r\nexport default FormAddCate;","import React, { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { IoMdPersonAdd, IoMdAdd } from 'react-icons/io';\r\nimport FormAddCate from '../FormAddCate/FormAddCate';\r\nconst AddCate = () => {\r\n    const [lgShow, setLgShow] = useState(false);\r\n    return (\r\n        <>\r\n            <Button onClick={() => setLgShow(true)}><IoMdAdd className=\"add-icon\"/> Thêm</Button>\r\n            <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                        Thêm hàng hóa\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                        <FormAddCate/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCate;","import React, {useEffect, useState} from \"react\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { FiDelete, FiEdit } from 'react-icons/fi';\r\nimport { useHistory } from 'react-router';\r\nimport TitleBreadcrumb from '../../../Common/TitleBreadcrumb/TitleBreadcrumb';\r\nimport { Link } from 'react-router-dom';\r\n// import AddUser from \"../AddUser/AddUser\";\r\nimport AddCategory from '../AddCategory/AddCate'\r\nimport CateApi from \"../../../../api/Category/categoryApi\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ListCategory = () => {\r\n    // const [isCheckAll, setIsCheckAll] = useState(false);\r\n    // const [isCheck, setIsCheck] = useState([]);\r\n    // const [list, setList] = useState([]);\r\n\r\n    // const handleSelectAll = e => {\r\n    //     setIsCheckAll(!isCheckAll)\r\n    //     setIsCheck(list.map(tr => tr.id));\r\n    //     if (isCheckAll) {\r\n    //         setIsCheck([]);\r\n    //     }\r\n    // }\r\n    // const handleClick = e => {\r\n    //     const { id, checked } = e.target;\r\n    //     setIsCheck([...isCheck, id]);\r\n    //     if (!checked) {\r\n    //         setIsCheck(isCheck.filter(item => item !== id));\r\n    //     }\r\n    // }\r\n    // const history = useHistory();\r\n    const [listCate, setListCate] = useState([])\r\n    useEffect(() => {\r\n        getList()\r\n    }, [])\r\n    \r\n\r\n     const getList = async () => {\r\n            const res = await CateApi.getAll()\r\n            console.log(res.data.category);\r\n            setListCate(res?.data?.category)\r\n    }\r\n    \r\n    const deleteCate = async (id) => {\r\n        console.log(id);\r\n        return Swal.fire({\r\n            icon: 'warning',\r\n            title: \"Bạn muốn xóa chứ\",\r\n            text: \"Tất cả thông tin sẽ bị xóa vĩnh viễn\",\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Xóa',\r\n            confirmButtonColor: \"#435ebe\",\r\n            denyButtonText: `Không`,\r\n        }).then((res) => {\r\n            if (res.isConfirmed) {\r\n                 CateApi.deleteCategory(id)\r\n                .then(()=>getList())\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"page-heading\">\r\n                <TitleBreadcrumb title=\"Danh sách hàng hóa\" pathHome=\"admin\" />\r\n                {\r\n                    <section className=\"section\">\r\n                        <div className=\"card shadow-sm\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row justify-content-between mb-4\">\r\n                                    <div className=\"col-lg-4 col-md-6\">\r\n                                        <div className=\"box-search\">\r\n                                            <input className=\"form-control input-content\" placeholder=\"Nhập họ tên, địa chỉ, số điện thoại...\" />\r\n                                            <BsSearch className=\"search-Icon\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 col-md-6 text-right\">\r\n                                        <div className=\"dt-buttons btn-group\">\r\n                                            <button type=\"button\" className=\"btn button-outline\">\r\n                                                <span>XLSX</span>\r\n                                            </button>\r\n                                            <button type=\"button\" className=\"btn button-outline\">\r\n                                                <span>Copy</span>\r\n                                            </button>\r\n                                            <button type=\"button\" className=\"btn button-outline\">\r\n                                                <span>PDF</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"pd-add\">\r\n                                        <AddCategory/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"tableShow scrollTable overflow-auto table-responsive-lg\">\r\n                                    <table className=\" received\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>#\r\n                                                    {/* <Checkbox\r\n                                                type=\"checkbox\"\r\n                                                className=\"check-box\"\r\n                                                name=\"selectAll\"\r\n                                                id=\"selectAll\"\r\n                                                handleClick={handleSelectAll}\r\n                                                isChecked={isCheckAll}\r\n\r\n                                                /> */}\r\n                                                </th>\r\n                                                <th>Tên Hàng</th>\r\n                                                {/* <th>Trạng thái</th> */}\r\n                                                <th>Chức năng</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {listCate?.map((cate, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>{cate?.name}</td>\r\n                                                    <td>\r\n                                                        <Link to={`/admin/quan-tri/edit-category/${cate?._id}`}>\r\n                                                            <FiEdit className=\"font-icon mr-10\" />\r\n                                                        </Link>\r\n                                                        <FiDelete className=\"font-icon\" onClick={()=>deleteCate(cate?._id)} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListCategory;\r\n","import React from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\n\r\nconst exportFile = ({ data, filename }) => {\r\n    const fileType = `application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8`;\r\n    const fileExtension = '.xlsx';\r\n\r\n    const ExportTo = (dataExport, filenameExport) => {\r\n        const ws = XLSX.utils.json_to_sheet(dataExport);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, filenameExport + fileExtension);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button type=\"button\" className=\"btn button-outline\" onClick={(e) => ExportTo(data, filename)}>\r\n                <span>XLSX</span>\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default exportFile;","import React, {useEffect, useState} from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { IoMdClose } from 'react-icons/io'\r\nimport {FcCheckmark} from 'react-icons/fc'\r\nimport { FiDelete, FiEdit } from 'react-icons/fi';\r\nimport { Button } from \"react-bootstrap\";\r\n// import Checkbox from \"../../../Common/Checkbox/Checkbox\";\r\nimport TitleBreadcrumb from '../../../Common/TitleBreadcrumb/TitleBreadcrumb';\r\nimport { removeAccents } from '../../../Common/CheckWord/CheckWord';\r\nimport ExportXLSX from '../../../Common/export/export';\r\nimport ReactPaginate from 'react-paginate';\r\nimport Swal from \"sweetalert2\";\r\nimport takeApi from '../../../../api/Take/takeApi';\r\nimport './Take.css';\r\n\r\n\r\nconst Received = () => {\r\n    // const [isCheckAll, setIsCheckAll] = useState(false);\r\n    // const [isCheck, setIsCheck] = useState([]);\r\n    // const [list, setList] = useState([]);\r\n\r\n    // const handleSelectAll = e => {\r\n    //     setIsCheckAll(!isCheckAll)\r\n    //     setIsCheck(list.map(tr => tr.id));\r\n    //     if (isCheckAll) {\r\n    //         setIsCheck([]);\r\n    //     }\r\n    // }\r\n    // const handleClick = e => {\r\n    //     const { id, checked } = e.target;\r\n    //     setIsCheck([...isCheck, id]);\r\n    //     if (!checked) {\r\n    //         setIsCheck(isCheck.filter(item => item !== id));\r\n    //     }\r\n    // }\r\n    const [showTake, setShowTake] = useState([]);\r\n    const [dataExport, setDataExport] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const userPerPage = 20;\r\n    const pagesVisited = pageNumber * userPerPage;\r\n    const pageCount = Math.ceil(showTake.length / userPerPage);\r\n    const onPageChange = ({ selected }) => {\r\n        setPageNumber(selected);\r\n    }\r\n    const sttList = pageNumber * userPerPage;\r\n\r\n    useEffect(() => {\r\n        takeList()\r\n    },[])\r\n    \r\n    const takeList = async ()=> {\r\n        const res = await takeApi.getAll();\r\n        // console.log(res?.data?.takes);\r\n        setShowTake(res?.data?.takes)\r\n\r\n        const exportTake = res?.data?.takes.map((e, index) => {\r\n            return {\r\n                 \"STT\": index + 1,\r\n                \"Họ và tên\": e.name,\r\n                \"SĐT\": e.phone,\r\n                \"Địa chỉ\": e.address,\r\n                \"Áo quần\": e.clothes,\r\n                \"Rau củ quả\": e.vegetable,\r\n                \"Gạo\": e.rice,\r\n                \"Mì gói\": e.noodles,\r\n                \"Sữa\": e.milk,\r\n                \"Trứng\": e.egg,\r\n                \"Xe\": e.car,\r\n                \"Trạng thái\": e.status ? \"Đã nhận\" : \"Chưa nhận\" \r\n            }\r\n        })\r\n        setDataExport(exportTake)\r\n    }\r\n\r\n    // const getTakeId = async (id) => {\r\n    //     const res = await takeApi.getById(id)\r\n\r\n    // }\r\n\r\n    const deleteTake = (id) => {\r\n        return Swal.fire({\r\n            icon: 'warning',\r\n            title: \"Bạn muốn xóa chứ\",\r\n            text: \"Tất cả thông tin sẽ bị xóa vĩnh viễn\",\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Xóa',\r\n            confirmButtonColor: \"#435ebe\",\r\n            denyButtonText: `Không`,\r\n        }).then((res) => {\r\n            if (res.isConfirmed) {\r\n                takeApi.deleteTake(id).then(()=>takeList())\r\n            }\r\n        })\r\n    }\r\n    const handleStatus = async (_id, data) => {\r\n        let dataStatus = data.status;\r\n        await takeApi.updateStatus(_id, { ...data, status: !dataStatus })\r\n        takeList();\r\n    }   \r\n\r\n    return (\r\n        <>\r\n            <div className=\"page-heading\">\r\n                <TitleBreadcrumb title=\"Danh sách muốn nhận\" pathHome=\"admin\" />\r\n                {\r\n                    <section className=\"section\">\r\n                        <div className=\"card shadow-sm \">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row justify-content-between mb-4\">\r\n                                    <div className=\"col-lg-4 col-md-6\">\r\n                                        <div className=\"box-search\">\r\n                                            <input className=\"form-control input-content\" placeholder=\"Nhập họ tên, địa chỉ, số điện thoại...\" onChange={(e)=>setSearch(e.target.value) }/>\r\n                                            <BsSearch className=\"search-Icon\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 col-md-6 text-right\">\r\n                                        <div className=\"dt-buttons btn-group\">\r\n                                            {/* <button type=\"button\" className=\"btn button-outline\">\r\n                                                <span>XLSX</span>\r\n                                            </button> */}\r\n                                            <ExportXLSX data={dataExport} filename=\"Danh sách nhận\" />\r\n                                            <button type=\"button\" className=\"btn button-outline\">\r\n                                                <span>Copy</span>\r\n                                            </button>\r\n                                            <button type=\"button\" className=\"btn button-outline\">\r\n                                                <span>PDF</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"tableShow scrollTable overflow-auto table-responsive-lg\">\r\n                                    <table className=\" received\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th >#\r\n                                                    {/* <Checkbox\r\n                                                type=\"checkbox\"\r\n                                                className=\"check-box\"\r\n                                                name=\"selectAll\"\r\n                                                id=\"selectAll\"\r\n                                                handleClick={handleSelectAll}\r\n                                                isChecked={isCheckAll}\r\n\r\n                                                /> */}\r\n                                                </th>\r\n                                                <th >Họ tên</th>\r\n                                                <th >SĐT</th>\r\n                                                <th >Địa chỉ</th>\r\n                                                <th>Khẩu trang</th>\r\n                                                <th>Áo quần</th>\r\n                                                <th>Rau củ quả</th>\r\n                                                <th>Gạo</th>\r\n                                                <th>Mì gói</th>\r\n                                                <th>Sữa</th>\r\n                                                <th>Trứng</th>\r\n                                                <th>Xe</th>\r\n                                                <th>Ghi chú</th>\r\n                                                <th>Trạng thái</th>\r\n                                                <th>Chức năng</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {showTake\r\n                                                ?.slice(pagesVisited, pagesVisited + userPerPage)\r\n                                                ?.filter((item) => {\r\n                                                    //console.log(item.phone = item.phone.toString())\r\n                                                    let query = removeAccents(search.toLowerCase())\r\n                                                    //item.phone = item.phone.toString()\r\n                                                    if (search === \"\") {\r\n                                                        return item\r\n                                                    } else if ( item?.phone.toLowerCase().includes(query) || item?.name.toLowerCase().includes(query)\r\n                                                    ) {\r\n                                                        return item\r\n                                                    } else {\r\n                                                        return false\r\n                                                    }\r\n                                                })\r\n                                                ?.map((item, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{sttList + index + 1}\r\n                                                        {/* <Checkbox\r\n                                                    type=\"checkbox\"\r\n                                                    key={1}\r\n                                                    name='check-1'\r\n                                                    handleClick={handleClick}\r\n                                                    isChecked={isCheck.includes(1)}\r\n                                                /> */}\r\n                                                    </td>\r\n                                                    <td>{item?.name }</td>\r\n                                                    <td>{item?.phone }</td>\r\n                                                    <td>{item?.address}</td>\r\n                                                    <td>{item?.mark}</td>\r\n                                                    <td>{item?.clothes}</td>\r\n                                                    <td>{item?.vegetable}</td>\r\n                                                    <td>{item?.rice}</td>\r\n                                                    <td>{item?.noodles}</td>\r\n                                                    <td>{item?.milk}</td>\r\n                                                    <td>{item?.egg}</td>\r\n                                                    <td>{item?.car}</td>\r\n                                                    <td>\r\n                                                        <textarea className=\"form-control\" rows=\"2\" defaultValue={item?.text} disabled={true} />\r\n                                                    </td>\r\n                                                    <td style={{ width: \"150px\" }}>\r\n                                                        {item?.status ? <Button onClick={() => handleStatus(item?._id, item)} variant=\"outline-success\" style={{ fontSize: '14px' }}><FcCheckmark/> Đã nhận</Button>\r\n                                                                : <Button onClick={() => handleStatus(item?._id, item)} variant=\"outline-danger\" style={{ fontSize: '14px' }}><IoMdClose/> Chưa nhận</Button>\r\n                                                            }\r\n                                                        {/* <Form>\r\n                                                    <Form.Check\r\n                                                        type=\"switch\"\r\n                                                        id=\"custom-switch\"\r\n                                                        label=\"Chưa Nhận\"\r\n                                                    />\r\n                                                </Form> */}\r\n                                                    </td>\r\n                                                    <td>                                                     \r\n                                                        <Link to={`/admin/quan-tri/edit-take/${item?._id}`}>\r\n                                                            <FiEdit className=\"font-icon  mr-10\" />\r\n                                                        </Link>\r\n                                                        <FiDelete className=\"font-icon\" onClick={()=>deleteTake(item?._id)} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                            <ReactPaginate\r\n                                previousLabel={\"Trước\"}\r\n                                nextLabel={\"Sau\"}\r\n                                pageCount={pageCount}\r\n                                onPageChange={onPageChange}\r\n                                previousClassName={\"previousBttns\"}\r\n                                containerClassName={\"paginationBttns\"}\r\n                                nextLinkClassName={\"nextBttns\"}\r\n                                disabledClassName={\"paginationDisabled\"}\r\n                                activeClassName={\"paginationActive\"}\r\n                            />\r\n                        </div>\r\n                    </section>\r\n                }\r\n            </div>\r\n        </>\r\n    )  \r\n}\r\n\r\nexport default Received;","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst BtnBack = () => {\r\n\r\n    let history = useHistory()\r\n\r\n    return (\r\n        <button className=\"btn btn-primary mb-3\" onClick={()=>history.goBack()}    >\r\n            Quay lại\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default BtnBack;","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Form, FastField, Field } from 'formik';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport TitleBreadcrumb from \"../../../Common/TitleBreadcrumb/TitleBreadcrumb\";\r\nimport InputField from '../../../Common/CustomFields/InputFields/InputFields';\r\nimport MyTextArea from '../../../Common/CustomFields/TextAreaFields/TextAreaFields';\r\nimport BtnBack from '../../../Common/BtnBack';\r\nimport takeApi from '../../../../api/Take/takeApi';\r\n\r\nconst EditTake = () => {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    let initialValues = {\r\n        _id: '',\r\n        name: '',\r\n        address: '',\r\n        phone: '',\r\n        text: '',\r\n        clothes: '',\r\n        car: '',\r\n        mark: '',\r\n        vegetable: '',\r\n        rice: '',\r\n        noodles: '',\r\n        milk: '',\r\n        egg:'',\r\n        status: false\r\n    }\r\n   \r\n    const [updateTake, setUpdateTake] = useState(initialValues);\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const res = await takeApi.getById(id)\r\n            // console.log(res?.data);\r\n            setUpdateTake(res?.data?.takes)\r\n        };\r\n        loadData()\r\n    }, [id])\r\n    \r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const res = await takeApi.updateTake(data._id, data)\r\n            setUpdateTake(res?.data?.takes)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"page-heading\">\r\n                <TitleBreadcrumb title=\"Sửa thông tin nhận\" />\r\n                <BtnBack onClick={()=>history.goBack()}/>\r\n                <section className=\"section\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                    {updateTake._id !== \"\" ?\r\n                        <Formik\r\n                            initialValues={updateTake}\r\n                                onSubmit={(data) => { onSubmit(data) }}\r\n                        >\r\n                            {formikProps => {\r\n                                return (\r\n                                    <Form>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 \">\r\n                                                <div className=\"col-sm p-4\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Họ và tên\" component={InputField} name=\"name\" placeholder=\"Nhập họ và tên\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Địa chỉ\" component={InputField} name=\"address\" placeholder=\"Nhập địa chỉ\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Số điện thoại\" component={InputField} name=\"phone\" placeholder=\"Số điện thoại\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <Field as=\"select\" name=\"status\" className=\"form-group-table form-select mb-3\"> \r\n                                                            <option value={true} label=\"Đã nhận\" />\r\n                                                            <option value={false } label=\"Chưa nhận\"/>\r\n                                                        </Field>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 \">\r\n                                                <div className=\"col-sm p-4\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Áo quần\" component={InputField} name=\"clothes\" placeholder=\"Nhập số bộ\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Khẩu trang\" component={InputField} name=\"mark\" placeholder=\"Nhập số hộp\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Rau củ quả\" component={InputField} name=\"vegetable\" placeholder=\"Nhập số kg\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Gạo\" component={InputField} name=\"rice\" placeholder=\"Nhập số kg\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Mì gói\" component={InputField} name=\"noodles\" placeholder=\"Nhập số thùng\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Sữa\" component={InputField} name=\"milk\" placeholder=\"Nhập số hộp\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Trứng\" component={InputField} name=\"egg\" placeholder=\"Nhập số quả\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Xe tải\" component={InputField} name=\"car\" placeholder=\"Nhập số chiếc\" />\r\n                                                    </div>\r\n                                                \r\n                                                    <MyTextArea label=\"Ghi chú\" name=\"text\" disabled={true} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"auth-button-footer \">\r\n                                                <button type=\"reset\" className=\"btn btn-danger mr-5\">Xóa</button>\r\n                                                <button type=\"submit\" value=\"submit\" className=\"btn btn-primary \">Lưu</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Form>\r\n                                )\r\n                            }\r\n                            }\r\n                        </Formik>\r\n                        :<></>\r\n                    }\r\n                    </div>\r\n                    </div>\r\n                </section>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nEditTake.propTypes = {\r\n    onsubmit: PropTypes.func\r\n}\r\nEditTake.defaultProps = {\r\n    onsubmit: null\r\n}\r\n\r\n\r\nexport default EditTake;","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Form, FastField, Field } from 'formik';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport TitleBreadcrumb from \"../../../Common/TitleBreadcrumb/TitleBreadcrumb\";\r\nimport InputField from '../../../Common/CustomFields/InputFields/InputFields';\r\nimport MyTextArea from '../../../Common/CustomFields/TextAreaFields/TextAreaFields';\r\nimport BtnBack from '../../../Common/BtnBack';\r\nimport sendApi from '../../../../api/Send/sendApi';\r\n\r\nconst EditSend = () => {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    let initialValues = {\r\n        _id: '',\r\n        name: '',\r\n        address: '',\r\n        phone: '',\r\n        text: '',\r\n        clothes: '',\r\n        car: '',\r\n        mark: '',\r\n        vegetable: '',\r\n        rice: '',\r\n        noodles: '',\r\n        milk: '',\r\n        egg:'',\r\n        status: false\r\n    }\r\n   \r\n    const [updateSend, setUpdateSend] = useState(initialValues);\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const res = await sendApi.getById(id)\r\n            // console.log(res?.data);\r\n            setUpdateSend(res?.data?.sends)\r\n        };\r\n        loadData();\r\n    }, [id])\r\n    \r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const res = await sendApi.updateSend(data._id, data)\r\n            setUpdateSend(res?.data?.sends)\r\n            history.goBack();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"page-heading\">\r\n                <TitleBreadcrumb title=\"Sửa thông tin cho\" />\r\n                \r\n                <BtnBack onClick={()=>history.goBack()}/>\r\n                <section className=\"section\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                        {updateSend._id !== \"\" ?\r\n                        <Formik\r\n                            initialValues={updateSend}\r\n                            onSubmit={(data) => { onSubmit(data) }}\r\n                        >\r\n                            {formikProps => {\r\n                                return (\r\n                                    <Form>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 \">\r\n                                                <div className=\"col-sm p-4\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Họ và tên\" component={InputField} name=\"name\" placeholder=\"Nhập họ và tên\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Địa chỉ\" component={InputField} name=\"address\" placeholder=\"Nhập địa chỉ\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Số điện thoại\" component={InputField} name=\"phone\" placeholder=\"Số điện thoại\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <Field as=\"select\" name=\"status\" className=\"form-group-table form-select mb-3\"> \r\n                                                            <option value={true} label=\"Đã cho\" />\r\n                                                            <option value={false } label=\"Chưa cho\"/>\r\n                                                        </Field>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 \">\r\n                                                <div className=\"col-sm p-4\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Áo quần\" component={InputField} name=\"clothes\" placeholder=\"Nhập số bộ\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Khẩu trang\" component={InputField} name=\"mark\" placeholder=\"Nhập số hộp\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Rau củ quả\" component={InputField} name=\"vegetable\" placeholder=\"Nhập số kg\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Gạo\" component={InputField} name=\"rice\" placeholder=\"Nhập số kg\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Mì gói\" component={InputField} name=\"noodles\" placeholder=\"Nhập số thùng\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Sữa\" component={InputField} name=\"milk\" placeholder=\"Nhập số hộp\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Trứng\" component={InputField} name=\"egg\" placeholder=\"Nhập số quả\" />\r\n                                                    </div>\r\n                                                    <div className=\"input-group\">\r\n                                                        <FastField label=\"Xe tải\" component={InputField} name=\"car\" placeholder=\"Nhập số chiếc\" />\r\n                                                    </div>\r\n                                                \r\n                                                    <MyTextArea label=\"Ghi chú\" name=\"text\" disabled={true} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"auth-button-footer \">\r\n                                                <button type=\"reset\" className=\"btn btn-danger mr-5\">Xóa</button>\r\n                                                <button type=\"submit\" value=\"submit\" className=\"btn btn-primary \">Lưu</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Form>\r\n                                )\r\n                            }}\r\n                        </Formik>\r\n                        :<></>\r\n                    }\r\n                    </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nEditSend.propTypes = {\r\n    onsubmit: PropTypes.func\r\n}\r\nEditSend.defaultProps = {\r\n    onsubmit: null\r\n}\r\n\r\nexport default EditSend;","// import axiosConfig from \"../axiosConfig\";\r\nimport axios from \"axios\"\r\nimport { apiURL } from '../constants';\r\n\r\nconst authApi = {\r\n    login: (data) => {\r\n        return axios.post(`${apiURL}/auth/login`, data)\r\n    },\r\n    register: (data) => {\r\n        return axios.post(`${apiURL}/auth/register`, data)\r\n    },\r\n    getAdmin: () => {\r\n        return axios.get(`${apiURL}/auth/admin/all`)\r\n    },\r\n    getById: (_id) => {\r\n        return axios.get(`${apiURL}/auth/admin/${_id}`)\r\n    },\r\n    updateAdmin: (_id, data) => {\r\n        return axios.patch(`${apiURL}/auth/admin/update/${_id}`, data)\r\n    },\r\n    deleteAdmin: (_id) => {\r\n        return axios.delete(`${apiURL}/auth/admin/delete/${_id}`)  \r\n    },\r\n    updateStatus: (_id, data) => {\r\n        return axios.patch(`${apiURL}/auth/admin/update/status/${_id}`, data)\r\n    },\r\n    changePass: (_id,data) => {\r\n        return axios.patch(`${apiURL}/auth/admin/change-pass/${_id}`)\r\n    },\r\n    mailChange: (data) => {\r\n        return axios.post(`${apiURL}/auth/admin/send-mail`,data)\r\n    },\r\n}\r\nexport default authApi;","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport TitleBreadcrumb from '../../../Common/TitleBreadcrumb/TitleBreadcrumb';\r\n// import * as Yup from 'yup';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Formik, Form, FastField, Field } from 'formik';\r\nimport InputField from '../../../Common/CustomFields/InputFields/InputFields';\r\nimport AdminApi from \"../../../../api/Auth/authApi\";\r\nimport BtnBack from '../../../Common/BtnBack';\r\n\r\nconst FormEdit = () => {\r\n    // const [imgPreview, setImgPreview] = useState(null);\r\n    // const [error, setError] = useState(false);\r\n    \r\n    \r\n    // const uploadImage = (e) => {\r\n    //     const formData = e.target.files[0];\r\n    //     const ALLOWED_TYPES = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\r\n    //     if (formData && ALLOWED_TYPES.includes(formData.type)) {\r\n    //         let reader = new FileReader();\r\n    //         reader.onloadend = () => {\r\n    //             setImgPreview(reader.result)\r\n    //         }\r\n    //         reader.readAsDataURL(formData);\r\n    //     } else {\r\n    //         setError(true)\r\n    //     }\r\n    // };\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n\r\n    let initialValues = {\r\n            _id:'',\r\n            fullname: '',\r\n            username: '',\r\n            // password: '',\r\n            // image: '',\r\n            phone: '',\r\n            email: '',\r\n            gender: '',\r\n            address: '',\r\n            passport: '',\r\n            nationality: '',\r\n            nation: '',\r\n            position: '',\r\n            work: false\r\n    }\r\n\r\n    // const validationSchema =Yup.object().shape({\r\n    //     fullname: Yup.string().required('vui lòng nhập tên người dùng')\r\n    // })\r\n    const [updateAdmin, setUpdateAdmin] = useState(initialValues);\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const res = await AdminApi.getById(id)\r\n            setUpdateAdmin(res?.data?.admins)\r\n        };\r\n        loadData()\r\n    },[id])\r\n\r\n    const onSubmit = async (data) => {\r\n        // console.log(data, 2324324324);\r\n        try {\r\n            const res = await AdminApi.updateAdmin(data._id, data)\r\n            // console.log(res?.data?.admins, 222222);\r\n            setUpdateAdmin(res?.data?.admins)\r\n            history.goBack() \r\n            // history.push(`/admin/quan-tri/danh-sach-admin`)\r\n        } catch (err) {\r\n           console.log(err);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"page-heading\">\r\n                <TitleBreadcrumb title=\"Sửa thông tin Admin\" pathHome=\"admin\" />\r\n                <BtnBack />\r\n                <section className=\"section\">\r\n                    <div className=\"card\">\r\n                        \r\n                        <div className=\"card-body\">\r\n                            {updateAdmin._id !== \"\" ?\r\n                                 \r\n                            <Formik\r\n                                // validationSchema={validationSchema}\r\n                                initialValues={updateAdmin}\r\n                                onSubmit={(data) => { onSubmit(data) }}\r\n                            >\r\n                                {formikProps => {\r\n                                    return (\r\n                                        <Form>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 \">\r\n                                                    <div className=\"\">\r\n                                                        {/* <div className=\"card-box-img card-box text-center\">\r\n                                                            {error && <p className=\"errorMsg\">Chọn file ảnh png, jpeg, jpg</p>}\r\n                                                            <div\r\n                                                                className=\"imgPreview\"\r\n                                                                style={{\r\n                                                                    background: imgPreview\r\n                                                                        ? `url(\"${imgPreview}\") no-repeat center/cover`\r\n                                                                        : \"#d8dff7\"\r\n                                                                }}\r\n                                                            >\r\n                                                                {!imgPreview && (\r\n                                                                    <>\r\n                                                                        <p>Thêm ảnh đại diện</p>\r\n                                                                        <label htmlFor=\"fileUpload\" className=\"customFileUpload \">Chọn ảnh</label>\r\n                                                                        <input name=\"image\" type=\"file\" id=\"fileUpload\" onChange={uploadImage} />\r\n                                                                    </>\r\n                                                                )}\r\n                                                            </div>\r\n                                                            {imgPreview && (<button className=\"upload-img-button\" onClick={() => setImgPreview(null)}>Xóa ảnh</button>)}\r\n                                                        </div> */}\r\n                                                    </div>\r\n                                                    <div className=\"col-sm p-4\">\r\n                                                        <div className=\"input-group pad-add \">\r\n                                                            <FastField label=\"Họ và tên\" component={InputField} name=\"fullname\" placeholder=\"Nhập họ tên\" />\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add \">\r\n                                                            <FastField label=\"Tên đăng nhập\" component={InputField} name=\"username\" placeholder=\"Nhập tên đăng nhập\" />\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"Số điện thoại\" component={InputField} name=\"phone\" placeholder=\"Nhập số điện thoại\" />\r\n                                                        </div>\r\n                                                        {/* <div className=\"input-group pad-add \">\r\n                                                            <FastField label=\"Mật khẩu\" component={InputField} name=\"password\" placeholder=\"Nhập Mật khẩu\" />\r\n                                                        </div> */}\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"Email\" component={InputField} name=\"email\" placeholder=\"Nhập email\" />\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <label className=\"label-field\">Giới tính</label>\r\n                                                            <Field label=\"\" name=\"gender\" as=\"select\" className=\"form-group-table form-select\">\r\n                                                                <option label=\"Nhập giới tính\" />\r\n                                                                <option value=\"Nam\" label=\"Nam\" />\r\n                                                                <option value=\"Nữ\" label=\"Nữ\" />\r\n                                                            </Field>\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"Địa chỉ\" component={InputField} name=\"address\" placeholder=\"Nhập địa chỉ\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-6 \">\r\n                                                    <div className=\"col-sm p-4\">\r\n                                                        \r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"CMND/CCCD/PASSPORT\" component={InputField} name=\"passport\" placeholder=\"Nhập số CMND/CCCD/PASSPORT\" />\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"Quốc tịch\" component={InputField} name=\"nationality\" placeholder=\"Nhập quốc tịch\" />\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"Dân tộc\" component={InputField} name=\"nation\" placeholder=\"Nhập dân tộc\" />\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"Chức vụ\" component={InputField} name=\"position\" placeholder=\"Nhập chức vụ\" />\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <label className=\"label-field\">Trạng thái</label>\r\n                                                            <Field label=\"\" name=\"work\" as=\"select\" className=\"form-group-table form-select mb-3\">\r\n                                                                <option label=\"Nhập trạng thái\" />\r\n                                                                <option value={true} label=\"Đang làm việc\" />\r\n                                                                <option value={false} label=\"Nghĩ làm\" />\r\n                                                            </Field>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"auth-button-footer pad-4\">\r\n                                                    <button type=\"reset\" className=\"btn btn-danger mr-5\">Xóa</button>\r\n                                                    <button type=\"submit\" value=\"submit\" className=\"btn btn-primary \">Lưu</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Form>\r\n                                    )\r\n                                }}\r\n                            </Formik>\r\n                            :<></>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nFormEdit.propTypes = {\r\n    onsubmit: PropTypes.func\r\n}\r\nFormEdit.defaultProps = {\r\n    onsubmit: null\r\n}\r\n\r\nexport default FormEdit;","import axios from \"axios\";\r\nimport { apiURL } from \"../constants\";\r\n\r\nconst UserApi =  {\r\n    getAll: () => {\r\n        return axios.get(`${apiURL}/users/all`)\r\n    },\r\n    getUserId: (_id) => {\r\n        return axios.get(`${apiURL}/users/id/${_id}`)\r\n    },\r\n    addUser: (data) => {\r\n        return axios.post(`${apiURL}/users/add`, data)\r\n    },\r\n    updateUser: (_id, data) => {\r\n        return axios.patch(`${apiURL}/users/update/${_id}`, data)\r\n    },\r\n    deleteUser: (_id) => {\r\n        return axios.delete(`${apiURL}/users/delete/${_id}`)\r\n    },\r\n    updateStatus: (_id, data)=>{\r\n        return axios.patch(`${apiURL}/users/update/status/${_id}`, data)\r\n    }\r\n}\r\n\r\nexport default UserApi;","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport TitleBreadcrumb from '../../../Common/TitleBreadcrumb/TitleBreadcrumb';\r\n// import * as Yup from 'yup';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Formik, Form, FastField, Field } from 'formik';\r\nimport InputField from '../../../Common/CustomFields/InputFields/InputFields';\r\nimport UserApi from '../../../../api/User/userApi'\r\nimport BtnBack from '../../../Common/BtnBack';\r\n\r\nconst FormEdit = () => {\r\n    // const [imgPreview, setImgPreview] = useState(null);\r\n    // const [error, setError] = useState(false);\r\n    \r\n    \r\n    // const uploadImage = (e) => {\r\n    //     const formData = e.target.files[0];\r\n    //     const ALLOWED_TYPES = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\r\n    //     if (formData && ALLOWED_TYPES.includes(formData.type)) {\r\n    //         let reader = new FileReader();\r\n    //         reader.onloadend = () => {\r\n    //             setImgPreview(reader.result)\r\n    //         }\r\n    //         reader.readAsDataURL(formData);\r\n    //     } else {\r\n    //         setError(true)\r\n    //     }\r\n    // };\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n\r\n    let initialValues = {\r\n            _id:'',\r\n            fullname: '',\r\n            phone: '',\r\n            email: '',\r\n            gender: '',\r\n            address: '',\r\n            passport: '',\r\n            nationality: '',\r\n            nation: '',\r\n            position: '',\r\n            work: false\r\n    }\r\n\r\n    // const validationSchema =Yup.object().shape({\r\n    //     fullname: Yup.string().required('vui lòng nhập tên người dùng')\r\n    // })\r\n    const [updateUser, setUpdateUser] = useState(initialValues);\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const res = await UserApi.getUserId(id)\r\n            setUpdateUser(res?.data?.users)\r\n        };\r\n        loadData()\r\n    },[id])\r\n\r\n    const onSubmit = async (data) => {\r\n        // console.log(data, 2324324324);\r\n        try {\r\n            const res = await UserApi.updateUser(data._id, data)\r\n            // console.log(res?.data?.admins, 222222);\r\n            setUpdateUser(res?.data?.users)\r\n            history.goBack() \r\n            // history.push(`/admin/quan-tri/danh-sach-admin`)\r\n        } catch (err) {\r\n           console.log(err);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"page-heading\">\r\n                <TitleBreadcrumb title=\"Sửa thông tin nhân viên\" pathHome=\"admin\" />\r\n                <BtnBack onClick={()=>history.goBack()}/>\r\n                <section className=\"section\">\r\n                    <div className=\"card\">\r\n                        \r\n                        <div className=\"card-body\">\r\n                            {updateUser._id !== \"\" ?\r\n                                 \r\n                            <Formik\r\n                                // validationSchema={validationSchema}\r\n                                initialValues={updateUser}\r\n                                onSubmit={(data) => { onSubmit(data) }}\r\n                            >\r\n                                {formikProps => {\r\n                                    return (\r\n                                        <Form>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 \">\r\n                                                    <div className=\"\">\r\n                                                        {/* <div className=\"card-box-img card-box text-center\">\r\n                                                            {error && <p className=\"errorMsg\">Chọn file ảnh png, jpeg, jpg</p>}\r\n                                                            <div\r\n                                                                className=\"imgPreview\"\r\n                                                                style={{\r\n                                                                    background: imgPreview\r\n                                                                        ? `url(\"${imgPreview}\") no-repeat center/cover`\r\n                                                                        : \"#d8dff7\"\r\n                                                                }}\r\n                                                            >\r\n                                                                {!imgPreview && (\r\n                                                                    <>\r\n                                                                        <p>Thêm ảnh đại diện</p>\r\n                                                                        <label htmlFor=\"fileUpload\" className=\"customFileUpload \">Chọn ảnh</label>\r\n                                                                        <input name=\"image\" type=\"file\" id=\"fileUpload\" onChange={uploadImage} />\r\n                                                                    </>\r\n                                                                )}\r\n                                                            </div>\r\n                                                            {imgPreview && (<button className=\"upload-img-button\" onClick={() => setImgPreview(null)}>Xóa ảnh</button>)}\r\n                                                        </div> */}\r\n                                                    </div>\r\n                                                    <div className=\"col-sm p-4\">\r\n                                                        <div className=\"input-group pad-add \">\r\n                                                            <FastField label=\"Họ và tên\" component={InputField} name=\"fullname\" placeholder=\"Nhập họ tên\" />\r\n                                                        </div>\r\n                                                        {/* <div className=\"input-group pad-add \">\r\n                                                            <FastField label=\"Tên đăng nhập\" component={InputField} name=\"username\" placeholder=\"Nhập tên đăng nhập\" />\r\n                                                        </div> */}\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"Số điện thoại\" component={InputField} name=\"phone\" placeholder=\"Nhập số điện thoại\" />\r\n                                                        </div>\r\n                                                        {/* <div className=\"input-group pad-add \">\r\n                                                            <FastField label=\"Mật khẩu\" component={InputField} name=\"password\" placeholder=\"Nhập Mật khẩu\" />\r\n                                                        </div> */}\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"Email\" component={InputField} name=\"email\" placeholder=\"Nhập email\" />\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <label className=\"label-field\">Giới tính</label>\r\n                                                            <Field label=\"\" name=\"gender\" as=\"select\" className=\"form-group-table form-select\">\r\n                                                                <option label=\"Nhập giới tính\" />\r\n                                                                <option value=\"Nam\" label=\"Nam\" />\r\n                                                                <option value=\"Nữ\" label=\"Nữ\" />\r\n                                                            </Field>\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"Địa chỉ\" component={InputField} name=\"address\" placeholder=\"Nhập địa chỉ\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-6 \">\r\n                                                    <div className=\"col-sm p-4\">\r\n                                                        \r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"CMND/CCCD/PASSPORT\" component={InputField} name=\"passport\" placeholder=\"Nhập số CMND/CCCD/PASSPORT\" />\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"Quốc tịch\" component={InputField} name=\"nationality\" placeholder=\"Nhập quốc tịch\" />\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"Dân tộc\" component={InputField} name=\"nation\" placeholder=\"Nhập dân tộc\" />\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <FastField label=\"Chức vụ\" component={InputField} name=\"position\" placeholder=\"Nhập chức vụ\" />\r\n                                                        </div>\r\n                                                        <div className=\"input-group pad-add\">\r\n                                                            <label className=\"label-field\">Trạng thái</label>\r\n                                                            <Field label=\"\" name=\"work\" as=\"select\" className=\"form-group-table form-select mb-3\">\r\n                                                                <option label=\"Nhập trạng thái\" />\r\n                                                                <option value={true} label=\"Đang làm việc\" />\r\n                                                                <option value={false} label=\"Nghĩ làm\" />\r\n                                                            </Field>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"auth-button-footer pad-4\">\r\n                                                    <button type=\"reset\" className=\"btn btn-danger mr-5\">Xóa</button>\r\n                                                    <button type=\"submit\" value=\"submit\" className=\"btn btn-primary \">Lưu</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Form>\r\n                                    )\r\n                                }}\r\n                            </Formik>\r\n                            :<></>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nFormEdit.propTypes = {\r\n    onsubmit: PropTypes.func\r\n}\r\nFormEdit.defaultProps = {\r\n    onsubmit: null\r\n}\r\n\r\nexport default FormEdit;","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport TitleBreadcrumb from '../../../Common/TitleBreadcrumb/TitleBreadcrumb';\r\n// import * as Yup from 'yup';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Formik, Form, FastField, Field } from 'formik';\r\nimport InputField from '../../../Common/CustomFields/InputFields/InputFields';\r\nimport CategoryApi from \"../../../../api/Category/categoryApi\";\r\nimport BtnBack from '../../../Common/BtnBack';\r\n\r\nconst FormEdit = () => {\r\n    \r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n\r\n    let initialValues = {\r\n            _id:'',\r\n            name: '',\r\n    }\r\n    const [updateCate, setUpdateCate] = useState(initialValues);\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const res = await CategoryApi.getById(id)\r\n            setUpdateCate(res?.data?.category)\r\n        };\r\n        loadData()\r\n    },[id])\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const res = await CategoryApi.updateCategory(data._id, data)\r\n            setUpdateCate(res?.data?.category)\r\n            history.goBack() \r\n            // history.push(`/admin/quan-tri/danh-sach-admin`)\r\n        } catch (err) {\r\n           console.log(err);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"page-heading\">\r\n                <TitleBreadcrumb title=\"Sửa thông tin Admin\" pathHome=\"admin\" />\r\n                <BtnBack onClick={()=>history.goBack()}/>\r\n                <section className=\"section\">\r\n                    <div className=\"card\">\r\n                        \r\n                        <div className=\"card-body\">\r\n                            {updateCate._id !== \"\" ?                         \r\n                            <Formik\r\n                                // validationSchema={validationSchema}\r\n                                initialValues={updateCate}\r\n                                onSubmit={(data) => { onSubmit(data) }}\r\n                            >\r\n                                {formikProps => {\r\n                                    return (\r\n                                        <Form>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 \">\r\n                                                    <div className=\"\">\r\n                                                    </div>\r\n                                                    <div className=\"col-sm p-4\">\r\n                                                        <div className=\"input-group pad-add \">\r\n                                                            <FastField label=\"Họ và tên\" component={InputField} name=\"name\" placeholder=\"Nhập họ tên\" />\r\n                                                        </div>\r\n                                                        \r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"    col-sm-6 \">\r\n                                                    <div className=\"col-sm p-4\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"auth-button-footer pad-4\">\r\n                                                    <button type=\"reset\" className=\"btn btn-danger mr-5\">Xóa</button>\r\n                                                    <button type=\"submit\" value=\"submit\" className=\"btn btn-primary \">Lưu</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Form>\r\n                                    )\r\n                                }}\r\n                            </Formik>\r\n                            :<></>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nFormEdit.propTypes = {\r\n    onsubmit: PropTypes.func\r\n}\r\nFormEdit.defaultProps = {\r\n    onsubmit: null\r\n}\r\n\r\nexport default FormEdit;","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport {IoMdClose} from 'react-icons/io'\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FiDelete, FiEdit } from 'react-icons/fi';\r\nimport TitleBreadcrumb from '../../../Common/TitleBreadcrumb/TitleBreadcrumb';\r\nimport { removeAccents } from '../../../Common/CheckWord/CheckWord';\r\nimport Swal from \"sweetalert2\";\r\nimport ExportXLSX from '../../../Common/export/export'\r\nimport {FcCheckmark} from 'react-icons/fc'\r\nimport ReactPaginate from 'react-paginate';\r\nimport sendApi from '../../../../api/Send/sendApi';\r\nimport './Send.css';\r\n\r\n\r\nconst Send = () => {\r\n    const [search, setSearch] = useState(\"\")\r\n    const [dataExport, setDataExport] = useState([])\r\n    const [showSend, setShowSend] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const userPerPage = 20;\r\n    const pagesVisited = pageNumber * userPerPage;\r\n    const pageCount = Math.ceil(showSend.length / userPerPage);\r\n    const onPageChange = ({ selected }) => {\r\n        setPageNumber(selected);\r\n    }\r\n    const sttList = pageNumber * userPerPage;\r\n\r\n    useEffect(() => {\r\n        getList()\r\n    },[])\r\n    const getList = async () => {\r\n        const res = await sendApi.getAll()\r\n        setShowSend(res?.data?.sends)\r\n        // console.log(8887777)\r\n        const exportSend = res?.data?.sends.map((e, index) => {\r\n            return {\r\n                \"STT\": index + 1,\r\n                \"Họ và tên\": e.name,\r\n                \"SĐT\": e.phone,\r\n                \"Địa chỉ\": e.address,\r\n                \"Áo quần\": e.clothes,\r\n                \"Rau củ quả\": e.vegetable,\r\n                \"Gạo\": e.rice,\r\n                \"Mì gói\": e.noodles,\r\n                \"Sữa\": e.milk,\r\n                \"Trứng\": e.egg,\r\n                \"Xe\": e.car,\r\n                \"Trạng thái\": e.status ? \"Đã cho\" : \"Chưa cho\" \r\n            }\r\n        })\r\n        setDataExport(exportSend)\r\n    }\r\n\r\n    const deleteSend = (id) => {\r\n        return Swal.fire({\r\n            icon: 'warning',\r\n            title: \"Bạn muốn xóa chứ\",\r\n            text: \"Tất cả thông tin sẽ bị xóa vĩnh viễn\",\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Xóa',\r\n            confirmButtonColor: \"#435ebe\",\r\n            denyButtonText: `Không`,\r\n        }).then((res) => {\r\n            if (res.isConfirmed) {\r\n                sendApi.deleteSend(id).then(()=>getList())\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleStatus = async (_id, data) => {\r\n        let dataStatus = data.status;\r\n        await sendApi.updateStatus(_id, { ...data, status: !dataStatus })\r\n        getList();\r\n    }\r\n// console.log(showSend,99988888)\r\n    return (\r\n        <>\r\n            <div className=\"page-heading\">\r\n                <TitleBreadcrumb title=\"Danh sách muốn cho\" pathHome=\"admin\" />\r\n                {\r\n                    <section className=\"section\">\r\n                        <div className=\"card shadow-sm \">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row justify-content-between mb-4\">\r\n                                    <div className=\"col-lg-4 col-md-6\">\r\n                                        <div className=\"box-search\">\r\n                                            <input className=\"form-control input-content\" placeholder=\"Nhập họ tên, địa chỉ, số điện thoại...\" onChange={(e)=>setSearch(e.target.value)} />\r\n                                            <BsSearch className=\"search-Icon\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 col-md-6 text-right\">\r\n                                        <div className=\"dt-buttons btn-group\">\r\n                                            \r\n                                                <ExportXLSX data={dataExport } filename=\"Danh sách cho\"/>\r\n                                           \r\n                                            \r\n                                                <button type=\"button\" className=\"btn button-outline\">\r\n                                                    <span>Copy</span>\r\n                                                </button>\r\n                                           \r\n                                            \r\n                                                <button type=\"button\" className=\"btn button-outline\">\r\n                                                    <span>PDF</span>\r\n                                                </button>\r\n                                                                             \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"tableShow scrollTable overflow-auto table-responsive-lg\">\r\n                                    <table className=\" received\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th >#</th>\r\n                                                <th >Họ tên</th>\r\n                                                <th >SĐT</th>\r\n                                                <th >Địa chỉ</th>\r\n                                                <th>Khẩu trang</th>\r\n                                                <th>Áo quần</th>\r\n                                                <th>Rau củ quả</th>\r\n                                                <th>Gạo</th>\r\n                                                <th>Mì gói</th>\r\n                                                <th>Sữa</th>\r\n                                                <th>Trứng</th>\r\n                                                <th>Xe</th>\r\n                                                <th>Ghi chú</th>\r\n                                                <th>Trạng thái</th>\r\n                                                <th>Chức năng</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {showSend\r\n                                                ?.slice(pagesVisited, pagesVisited + userPerPage)\r\n                                                ?.filter((item) => {\r\n                                                    //console.log(item.phone = item.phone.toString())\r\n                                                    let query = removeAccents(search.toLowerCase())\r\n                                                    //item.phone = item.phone.toString()\r\n                                                    if (search === \"\") {\r\n                                                        return item\r\n                                                    } else if ( item?.phone.toLowerCase().includes(query) || item?.name.toLowerCase().includes(query)\r\n                                                    ) {\r\n                                                        return item\r\n                                                    } else {\r\n                                                        return false\r\n                                                    }\r\n                                                })\r\n                                                ?.map((item, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{ sttList +  index + 1}</td>\r\n                                                    <td>{item?.name }</td>\r\n                                                    <td>{item?.phone }</td>\r\n                                                    <td>{item?.address}</td>\r\n                                                    <td>{item?.mark}</td>\r\n                                                    <td>{item?.clothes}</td>\r\n                                                    <td>{item?.vegetable}</td>\r\n                                                    <td>{item?.rice}</td>\r\n                                                    <td>{item?.noodles}</td>\r\n                                                    <td>{item?.milk}</td>\r\n                                                    <td>{item?.egg}</td>\r\n                                                    <td>{item?.car}</td>\r\n                                                    <td><textarea className=\"form-control\" rows=\"2\" defaultValue={item?.text } disabled={true}/></td>\r\n                                                    <td style={{width:\"150px\"}}>\r\n                                                            {item?.status ? <Button onClick={() => handleStatus(item?._id, item)} variant=\"outline-success\" style={{ fontSize: '14px' }}><FcCheckmark/> Đã cho</Button>\r\n                                                                : <Button onClick={() => handleStatus(item?._id, item)} variant=\"outline-danger\" style={{ fontSize: '14px' }}><IoMdClose/> Chưa cho</Button>\r\n                                                            }\r\n                                                              \r\n                                                        {/* <Form>\r\n                                                    <Form.Check\r\n                                                        type=\"switch\"\r\n                                                        id=\"custom-switch\"\r\n                                                        label=\"Chưa Nhận\"\r\n                                                    />\r\n                                                </Form> */}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Link to={`/admin/danh-sach/edit-send/${item?._id}`}>\r\n                                                            <FiEdit className=\"font-icon mr-10\" />\r\n                                                        </Link>\r\n                                                        <FiDelete className=\"font-icon \" onClick={()=>deleteSend(item?._id)} />\r\n                                                    </td>\r\n                                            </tr>\r\n                                            )) } \r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                            <ReactPaginate\r\n                                previousLabel={\"Trước\"}\r\n                                nextLabel={\"Sau\"}\r\n                                pageCount={pageCount}\r\n                                onPageChange={onPageChange}\r\n                                previousClassName={\"previousBttns\"}\r\n                                containerClassName={\"paginationBttns\"}\r\n                                nextLinkClassName={\"nextBttns\"}\r\n                                disabledClassName={\"paginationDisabled\"}\r\n                                activeClassName={\"paginationActive\"}\r\n                            />\r\n                        </div>\r\n                    </section>\r\n                }\r\n            </div>\r\n        </>\r\n    )  \r\n}\r\n\r\nexport default Send;","import React,{useState} from \"react\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport img from \"../../../../assets/images/userface.jpg\";\r\nimport './DetailUser.css'\r\n\r\nconst DetailUser = ({display, setDisplay, data}) => {\r\n    return (\r\n        <>\r\n            <Modal size=\"lg\" show={display} onHide={() => setDisplay(false)} aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                        Đây là {data?.fullname}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 \">\r\n                            <div className=\"img-user\">\r\n                                <img src={img} alt=\"img-user\"/>\r\n                            </div>\r\n                            <div className=\"infor-user\">\r\n                                <h6>Họ tên: <span className=\"text-detail\">{data?.fullname}</span></h6>\r\n                                <h6>Tên đăng nhập: <span className=\"text-detail\">{ data?.username }</span></h6>\r\n                                <h6>Số điện thoại: <span className=\"text-detail\">{data?.phone}</span></h6>\r\n                                <h6>Email: <span className=\"text-detail\">{data?.email}</span></h6>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6 \">\r\n                            <div className=\"detail-user\">\r\n                                <h6>Giới tính: <span className=\"text-detail\">{data?.gender}</span></h6>\r\n                                <h6>Địa chỉ: <span className=\"text-detail\">{data?.address}</span></h6>\r\n                                <h6>CMND/CCCD/PASSPORT: <span className=\"text-detail\">{data?.passport}</span></h6>\r\n                                <h6>Quốc tịch: <span className=\"text-detail\">{data?.nationality}</span></h6>\r\n                                <h6>Dân tộc: <span className=\"text-detail\">{data?.nation}</span></h6>\r\n                                <h6>Chức vụ: <span className=\"text-detail\">{data?.position}</span></h6>\r\n                                <h6>Trạng thái: <span className=\"text-detail\">{data?.work ? \"Đang làm việc\":\"nghĩ việc\"}</span></h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default DetailUser;","import React, { useEffect } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport userApi from '../../../api/User/userApi';\r\nimport './import.css'\r\n\r\nconst importFile = () => {\r\n    // useEffect(() => {\r\n        \r\n    // })\r\n\r\n    const col = (obj, index) => {\r\n        return (obj[Object.keys(obj)[index]])\r\n    }\r\n\r\n    const readExcel = (file) => {\r\n        const promise = new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsArrayBuffer(file)\r\n            fileReader.onload = (e) => {\r\n                const bufferArray = e.target.result;\r\n                const wb = XLSX.read(bufferArray, { type: \"buffer\" });\r\n                const wbName = wb.SheetNames[0];\r\n                const ws = wb.Sheets[wbName];\r\n                const data = XLSX.utils.sheet_to_json(ws);\r\n                resolve(data);\r\n            };\r\n            fileReader.onerror = (err) => {\r\n                reject(err);\r\n            }\r\n        });\r\n        promise.then((d) => {\r\n            const result = d.map(async (e, k) => {\r\n                const users = {\r\n                    fullname: col(e, 1),\r\n                    phone: col(e, 2),\r\n                    email: col(e, 3),\r\n                    gender: col(e, 4),\r\n                    address: col(e, 5),\r\n                    passport: col(e, 6),\r\n                    nationality: col(e, 7),\r\n                    nation: col(e, 8),\r\n                    position: col(e, 9),\r\n                    work: col(e, 10)\r\n                };\r\n                await userApi.addUser(users)\r\n                return (users)\r\n            });\r\n            console.log(result);\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"mr-5\">\r\n                <label htmlFor=\"importFile\" className=\"custom-file-label\">import</label>\r\n                <input\r\n                    onChange={(e) => {\r\n                        const file = e.target.files[0];\r\n                        readExcel(file)\r\n                    }}\r\n                    name=\"file\" type=\"file\" id=\"importFile\" className=\"custom-file-input\" />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default importFile;","import React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n// import * as Yup from 'yup';\r\n// import { useHistory } from 'react-router-dom';\r\nimport { Formik, Form, FastField, Field } from 'formik';\r\nimport InputField from '../../../Common/CustomFields/InputFields/InputFields';\r\nimport UserApi from \"../../../../api/User/userApi\";\r\nimport './FormAdd.css';\r\n\r\nconst FormAdd = () => {\r\n    // const [imgPreview, setImgPreview] = useState(null);\r\n    // const [error, setError] = useState(false);\r\n    // const uploadImage = (e) => {\r\n    //     const formData = e.target.files[0];\r\n    //     const ALLOWED_TYPES = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\r\n    //     if (formData && ALLOWED_TYPES.includes(formData.type)) {\r\n    //         let reader = new FileReader();\r\n    //         reader.onloadend = () => {\r\n    //             setImgPreview(reader.result)\r\n    //         }\r\n    //         reader.readAsDataURL(formData);\r\n    //     } else {\r\n    //         setError(true)\r\n    //     }\r\n    // };\r\n    // const history = useHistory();\r\n    const initialValues = {\r\n            fullname: '',\r\n            phone: '',\r\n            email: '',\r\n            gender: '',\r\n            address: '',\r\n            passport: '',\r\n            nationality: '',\r\n            nation: '',\r\n            position: '',\r\n            work: false\r\n    }\r\n\r\n    // const validationSchema =Yup.object().shape({\r\n    //     fullname: Yup.string().required('vui lòng nhập tên người dùng')\r\n    // })\r\n\r\n    const onSubmit = async (data) => {\r\n        console.log(data, 434434342);\r\n        await UserApi.addUser({ ...data })\r\n        // history.push('/admin/quan-tri/danh-sach-quan-tri')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                // validationSchema={validationSchema}\r\n                initialValues={initialValues}\r\n                onSubmit={(data) => { onSubmit(data)}}\r\n            >\r\n                {formikProps => {\r\n                    return(\r\n                    <Form>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6 \">\r\n                                <div className=\"\">\r\n                                    {/* <div className=\"card-box-img card-box text-center\">\r\n                                        {error && <p className=\"errorMsg\">Chọn file ảnh png, jpeg, jpg</p>}\r\n                                        <div\r\n                                            className=\"imgPreview\"\r\n                                            style={{\r\n                                                background: imgPreview\r\n                                                    ? `url(\"${imgPreview}\") no-repeat center/cover`\r\n                                                    : \"#d8dff7\"\r\n                                            }}\r\n                                        >\r\n                                            {!imgPreview && (\r\n                                                <>\r\n                                                    <p>Thêm ảnh đại diện</p>\r\n                                                    <label htmlFor=\"fileUpload\" className=\"customFileUpload \">Chọn ảnh</label>\r\n                                                    <input name=\"image\" type=\"file\" id=\"fileUpload\" onChange={uploadImage} />\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                        {imgPreview && (<button className=\"upload-img-button\" onClick={() => setImgPreview(null)}>Xóa ảnh</button>)}\r\n                                    </div> */}\r\n                                </div>\r\n                                <div className=\"col-sm p-4\">\r\n                                    <div className=\"input-group pad-add \">\r\n                                        <FastField label=\"Họ và tên\" component={InputField} name=\"fullname\" placeholder=\"Nhập họ tên\" />\r\n                                    </div>\r\n                                    {/* <div className=\"input-group pad-add \">\r\n                                        <FastField label=\"Tên đăng nhập\" component={InputField} name=\"username\" placeholder=\"Nhập tên đăng nhập\" />\r\n                                    </div> */}\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"Số điện thoại\" component={InputField} name=\"phone\" placeholder=\"Nhập số điện thoại\" />\r\n                                    </div>\r\n                                    {/* <div className=\"input-group pad-add \">\r\n                                        <FastField label=\"Mật khẩu\" component={InputField} name=\"password\" placeholder=\"Nhập Mật khẩu\" />\r\n                                    </div> */}\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"Email\" component={InputField} name=\"email\" placeholder=\"Nhập email\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <label className=\"label-field\">Giới tính</label>\r\n                                        <Field label=\"\" name=\"gender\" as=\"select\" className=\"form-group-table form-select\">\r\n                                                <option label=\"Nhập giới tính\" />\r\n                                                <option value=\"Nam\" label=\"Nam\" />\r\n                                                <option value=\"Nữ\" label=\"Nữ\"/>\r\n                                        </Field>\r\n                                        </div>\r\n                                        <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"Địa chỉ\" component={InputField} name=\"address\" placeholder=\"Nhập địa chỉ\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-6 \">\r\n                                <div className=\"col-sm p-4\">\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"CMND/CCCD/PASSPORT\" component={InputField} name=\"passport\" placeholder=\"Nhập số CMND/CCCD/PASSPORT\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"Quốc tịch\" component={InputField} name=\"nationality\" placeholder=\"Nhập quốc tịch\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"Dân tộc\" component={InputField} name=\"nation\" placeholder=\"Nhập dân tộc\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"Chức vụ\" component={InputField} name=\"position\" placeholder=\"Nhập chức vụ\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <label className=\"label-field\">Trạng thái</label>\r\n                                        <Field label=\"\" name=\"work\" as=\"select\" className=\"form-group-table form-select mb-3\">\r\n                                                <option label=\"Nhập trạng thái\" />\r\n                                                <option value={true} label=\"Đang làm việc\" />\r\n                                                <option value={false} label=\"Nghĩ làm\"/>\r\n                                        </Field>\r\n                                    </div>    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"auth-button-footer pad-4\">\r\n                                <button type=\"reset\" className=\"btn btn-danger mr-5\">Xóa</button>\r\n                                <button type=\"submit\" value=\"submit\" className=\"btn btn-primary \">Lưu</button>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                     ) }}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\nFormAdd.propTypes = {\r\n    onsubmit: PropTypes.func\r\n}\r\nFormAdd.defaultProps = {\r\n    onsubmit: null\r\n}\r\n\r\nexport default FormAdd;","import React,{useState} from \"react\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { IoMdPersonAdd } from 'react-icons/io';\r\nimport FormAdd from '../FormAdd/FormAdd';\r\nimport './AddUser.css'\r\n\r\nconst AddUser = () => {\r\n    const [lgShow, setLgShow] = useState(false);\r\n    return (\r\n        <>\r\n            <Button onClick={() => setLgShow(true)}><IoMdPersonAdd className=\"add-icon\"/> Thêm</Button>\r\n            <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                        Thêm quản trị viên\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                        <FormAdd/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default AddUser;","import React, {useState, useEffect} from \"react\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\n// import { useParams } from 'react-router';\r\nimport Swal from \"sweetalert2\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport {IoMdClose} from 'react-icons/io'\r\nimport {FcCheckmark} from 'react-icons/fc'\r\nimport { FiDelete, FiEdit } from 'react-icons/fi';\r\nimport TitleBreadcrumb from '../../../Common/TitleBreadcrumb/TitleBreadcrumb';\r\nimport { Link } from 'react-router-dom'\r\nimport ReactPaginate from 'react-paginate';\r\nimport { removeAccents } from '../../../Common/CheckWord/CheckWord';\r\nimport ExportXLSX from '../../../Common/export/export';\r\nimport './UserAdmin.css';\r\nimport DetailUser from '../DetailUser/DetailUser';\r\nimport ImportFile from '../../../Common/import/import';\r\nimport AddUser from \"../AddUser/AddUser\";\r\nimport UserApi from \"../../../../api/User/userApi\";\r\n\r\nconst UserAdmin = () => {\r\n    // const [lgShow, setLgShow] = useState(false);\r\n    // const [isCheckAll, setIsCheckAll] = useState(false);\r\n    // const [isCheck, setIsCheck] = useState([]);\r\n    // const [list, setList] = useState([]);\r\n\r\n    // const handleSelectAll = e => {\r\n    //     setIsCheckAll(!isCheckAll)\r\n    //     setIsCheck(list.map(tr => tr.id));\r\n    //     if (isCheckAll) {\r\n    //         setIsCheck([]);\r\n    //     }\r\n    // }\r\n    // const handleClick = e => {\r\n    //     const { id, checked } = e.target;\r\n    //     setIsCheck([...isCheck, id]);\r\n    //     if (!checked) {\r\n    //         setIsCheck(isCheck.filter(item => item !== id));\r\n    //     }\r\n    // }\r\n    // const { id } = useParams();\r\n\r\n    const [search, setSearch] = useState(\"\")\r\n    const [dataExport, setDataExport] = useState([])\r\n    const [allUser, setAllUser] = useState([])\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [detail, setDetail] = useState({});\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const userPerPage = 20;\r\n    const pagesVisited = pageNumber * userPerPage;\r\n    const pageCount = Math.ceil(allUser.length / userPerPage);\r\n    const onPageChange = ({ selected }) => {\r\n        setPageNumber(selected);\r\n    }\r\n    const sttUser = pageNumber * userPerPage;\r\n\r\n    useEffect(() => {\r\n        getAllUser();\r\n    }, [])\r\n    \r\n    const getAllUser = async () => {\r\n        const res = await UserApi.getAll()\r\n        // console.log(res?.data?.users);\r\n        setAllUser(res?.data?.users);\r\n        const exportUser = res?.data?.users.map((e, index) => {\r\n            return {\r\n                \"STT\": index + 1,\r\n                \"Họ và tên\": e.fullname,\r\n                \"Số điện thoại\": e.phone,\r\n                \"email\": e.email,\r\n                \"Giới tính\": e.gender,\r\n                \"Địa chỉ\": e.address,\r\n                \"CCCD\": e.passport,\r\n                \"Quốc tịch\": e.nationality,\r\n                \"Dân tộc\": e.nation,\r\n                \"Vị trí\": e.position,\r\n                \"Trạng thái\": e.work ? \"Đang làm việc\" : \"Nghĩ làm\"\r\n            }\r\n        })\r\n        setDataExport(exportUser)\r\n    }\r\n    const getUsersId = async (userId) => {\r\n        setLgShow(true);\r\n        // console.log(userId,1212)\r\n        const res = await UserApi.getUserId(userId)\r\n        setDetail(res?.data?.users);\r\n        // console.log(res?.data);\r\n    }\r\n\r\n    const deleteUser = (id) => {\r\n       \r\n        return Swal.fire({\r\n            icon: 'warning',\r\n            title: \"Bạn muốn xóa chứ\",\r\n            text: \"Tất cả thông tin sẽ bị xóa vĩnh viễn\",\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Xóa',\r\n            confirmButtonColor: \"#435ebe\",\r\n            denyButtonText: `Không`,\r\n        }).then((res) => {\r\n            if (res.isConfirmed) {\r\n                UserApi.deleteUser(id).then(() => getAllUser())\r\n            }\r\n        })\r\n    }\r\n    \r\n    const handleStatus = async (_id, data) => {\r\n        let dataWork = data.work;\r\n        // console.log(data?.work);\r\n        await UserApi.updateStatus(_id, { ...data, work: !dataWork });\r\n        getAllUser();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"page-heading\">\r\n                <TitleBreadcrumb title=\"Danh sách quản trị viên\" pathHome=\"admin\" />\r\n                {\r\n                    <section className=\"section\">\r\n                        <div className=\"card shadow-sm\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row justify-content-between mb-4\">\r\n                                    <div className=\"col-lg-4 col-md-6\">\r\n                                        <div className=\"box-search\">\r\n                                            <input className=\"form-control input-content\" placeholder=\"Nhập họ tên, địa chỉ, số điện thoại...\" onChange={(e)=>setSearch(e.target.value)} />\r\n                                            <BsSearch className=\"search-Icon\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 col-md-6 text-right\">\r\n                                        <div className=\"dt-buttons btn-group\">\r\n                                            <ImportFile getAllUser={getAllUser}/>\r\n                                        </div>\r\n                                        <div className=\"dt-buttons btn-group\">\r\n                                            <ExportXLSX data={dataExport} filename=\"Danh sách nhân viên\"/>\r\n                                            <button type=\"button\" className=\"btn button-outline\">\r\n                                                <span>Copy</span>\r\n                                            </button>\r\n                                            <button type=\"button\" className=\"btn button-outline\">\r\n                                                <span>PDF</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"pd-add\">\r\n                                        <AddUser  />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"tableShow scrollTable overflow-auto table-responsive-lg\">\r\n                                    <table className=\" received\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>#\r\n                                                    {/* <Checkbox\r\n                                                type=\"checkbox\"\r\n                                                className=\"check-box\"\r\n                                                name=\"selectAll\"\r\n                                                id=\"selectAll\"\r\n                                                handleClick={handleSelectAll}\r\n                                                isChecked={isCheckAll}\r\n\r\n                                                /> */}\r\n                                                </th>\r\n                                                <th>Họ tên</th>\r\n                                                <th>Số điện thoại</th>\r\n                                                <th>Xem</th>\r\n                                                <th>Trạng thái</th>\r\n                                                <th>Chức năng</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {allUser\r\n                                                ?.slice(pagesVisited, pagesVisited + userPerPage)\r\n                                                ?.filter((item) => {\r\n                                                    //console.log(item.phone = item.phone.toString())\r\n                                                    let query = removeAccents(search.toLowerCase())\r\n                                                    item.phone = item.phone.toString()\r\n                                                    if (search === \"\") {\r\n                                                        return item\r\n                                                    } else if ( item?.phone.toLowerCase().includes(query) || item?.fullname.toLowerCase().includes(query)\r\n                                                    ) {\r\n                                                        return item\r\n                                                    } else {\r\n                                                        return false\r\n                                                    }\r\n                                                })\r\n                                                ?.map((user, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td> { sttUser + index + 1}\r\n                                                        {/* <Checkbox\r\n                                                            type=\"checkbox\"\r\n                                                            key={1}\r\n                                                            name='check-1'\r\n                                                            handleClick={handleClick}\r\n                                                            isChecked={isCheck.includes(1)}\r\n                                                        /> */}\r\n                                                    </td>\r\n                                                    <td>{user?.fullname}</td>\r\n                                                    <td>{user?.phone }</td>\r\n                                                    <td>\r\n                                                        <button className=\"btn btn-primary\" onClick={() => { getUsersId(user?._id) }}>Xem chi tiết</button>\r\n                                                        {/* <DetailUser  /> */}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {user?.work ? <Button onClick={() => handleStatus(user?._id, user)} variant=\"outline-success\" style={{ fontSize: '14px' }}><FcCheckmark/> Đang làm việc</Button>\r\n                                                                : <Button onClick={() => handleStatus(user?._id, user)} variant=\"outline-danger\" style={{ fontSize: '14px' }}><IoMdClose/> Nghĩ việc</Button>\r\n                                                            }\r\n                                                        {/* <Form>\r\n                                                            <Form.Check\r\n                                                                type=\"switch\"\r\n                                                                id=\"custom-switch\"\r\n                                                                label=\"Đang làm việc\"\r\n                                                            />\r\n                                                        </Form> */}\r\n                                                    </td>\r\n                                                    <td> \r\n                                                        <Link to={`/admin/quan-tri/edit-user/${user?._id}`}>\r\n                                                            <FiEdit className=\"font-icon mr-10\" />\r\n                                                        </Link>\r\n                                                        <FiDelete className=\"font-icon \" onClick={()=> deleteUser(user?._id)}/>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                            }\r\n                                             <DetailUser data={detail} display={lgShow} setDisplay={setLgShow}/>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                            <ReactPaginate\r\n                                previousLabel={\"Trước\"}\r\n                                nextLabel={\"Sau\"}\r\n                                pageCount={pageCount}\r\n                                onPageChange={onPageChange}\r\n                                previousClassName={\"previousBttns\"}\r\n                                containerClassName={\"paginationBttns\"}\r\n                                nextLinkClassName={\"nextBttns\"}\r\n                                disabledClassName={\"paginationDisabled\"}\r\n                                activeClassName={\"paginationActive\"}\r\n                            />\r\n                        </div>\r\n                    </section>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserAdmin;","import React,{useState} from \"react\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\n// import { IoMdPersonAdd } from 'react-icons/io';\r\nimport img from \"../../../../assets/images/userface.jpg\";\r\nimport './DetailAdmin.css'\r\n\r\nconst DetailAdmin = ({display, setDisplay, data}) => {\r\n    return (\r\n        <>\r\n            {/* <Button onClick={() => setDisplay(true)}>\r\n               Xem chi tiet\r\n            </Button> */}\r\n            <Modal size=\"lg\" show={display} onHide={() => setDisplay(false)} aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                        Đây là {data?.fullname}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 \">\r\n                            <div className=\"img-user\">\r\n                                <img src={img} alt=\"img-user\"/>\r\n                            </div>\r\n                            <div className=\"infor-user\">\r\n                                <h6>Họ tên: <span className=\"text-detail\">{data?.fullname}</span></h6>\r\n                                <h6>Tên đăng nhập: <span className=\"text-detail\">{ data?.username }</span></h6>\r\n                                <h6>Số điện thoại: <span className=\"text-detail\">{data?.phone}</span></h6>\r\n                                <h6>Email: <span className=\"text-detail\">{data?.email}</span></h6>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6 \">\r\n                            <div className=\"detail-user\">\r\n                                <h6>Giới tính: <span className=\"text-detail\">{data?.gender}</span></h6>\r\n                                {/* <h6>Password: {data?.password}</h6> */}\r\n                                <h6>Địa chỉ: <span className=\"text-detail\">{data?.address}</span></h6>\r\n                                <h6>CMND/CCCD/PASSPORT: <span className=\"text-detail\">{data?.passport}</span></h6>\r\n                                <h6>Quốc tịch: <span className=\"text-detail\">{data?.nationality}</span></h6>\r\n                                <h6>Dân tộc: <span className=\"text-detail\">{data?.nation}</span></h6>\r\n                                <h6>Chức vụ: <span className=\"text-detail\">{data?.position}</span></h6>\r\n                                <h6>Trạng thái: <span className=\"text-detail\">{data?.work ? \"Đang làm việc\" : \"nghĩ việc\"}</span></h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default DetailAdmin;","import React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\n// import { useHistory } from 'react-router-dom';\r\nimport { Formik, Form, FastField, Field } from 'formik';\r\nimport InputField from '../../../Common/CustomFields/InputFields/InputFields';\r\nimport AdminApi from \"../../../../api/Auth/authApi\";\r\n\r\nconst FormAdd = ({control, userLoad}) => {\r\n    // const [imgPreview, setImgPreview] = useState(null);\r\n    // const [error, setError] = useState(false);\r\n    // // const history = useHistory();\r\n    \r\n    // const uploadImage = (e) => {\r\n    //     const formData = e.target.files[0];\r\n    //     const ALLOWED_TYPES = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\r\n    //     if (formData && ALLOWED_TYPES.includes(formData.type)) {\r\n    //         let reader = new FileReader();\r\n    //         reader.onloadend = () => {\r\n    //             setImgPreview(reader.result)\r\n    //         }\r\n    //         reader.readAsDataURL(formData);\r\n    //     } else {\r\n    //         setError(true)\r\n    //     }\r\n    // };\r\n\r\n    const initialValues = {\r\n            fullname: '',\r\n            username: '',\r\n            password: '',\r\n            // image: '',\r\n            phone: '',\r\n            email: '',\r\n            gender: '',\r\n            address: '',\r\n            passport: '',\r\n            nationality: '',\r\n            nation: '',\r\n            position: '',\r\n            work: true\r\n    }\r\n\r\n    // const validationSchema =Yup.object().shape({\r\n    //     fullname: Yup.string().required('vui lòng nhập tên người dùng')\r\n    // })\r\n\r\n    const onSubmit = async (data) => {\r\n        // console.log(data, 434434342);\r\n        await AdminApi.register({ ...data });\r\n        control(false);\r\n        userLoad();\r\n        // history.push('/admin/quan-tri/danh-sach-quan-tri')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                // validationSchema={validationSchema}\r\n                initialValues={initialValues}\r\n                onSubmit={(data) => { onSubmit(data)}}\r\n            >\r\n                {formikProps => {\r\n                    return(\r\n                    <Form>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6 \">\r\n                                <div className=\"\">\r\n                                    {/* <div className=\"card-box-img card-box text-center\">\r\n                                        {error && <p className=\"errorMsg\">Chọn file ảnh png, jpeg, jpg</p>}\r\n                                        <div\r\n                                            className=\"imgPreview\"\r\n                                            style={{\r\n                                                background: imgPreview\r\n                                                    ? `url(\"${imgPreview}\") no-repeat center/cover`\r\n                                                    : \"#d8dff7\"\r\n                                            }}\r\n                                        >\r\n                                            {!imgPreview && (\r\n                                                <>\r\n                                                    <p>Thêm ảnh đại diện</p>\r\n                                                    <label htmlFor=\"fileUpload\" className=\"customFileUpload \">Chọn ảnh</label>\r\n                                                    <input name=\"image\" type=\"file\" id=\"fileUpload\" onChange={uploadImage} />\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                        {imgPreview && (<button className=\"upload-img-button\" onClick={() => setImgPreview(null)}>Xóa ảnh</button>)}\r\n                                    </div> */}\r\n                                </div>\r\n                                <div className=\"col-sm p-4\">\r\n                                    <div className=\"input-group pad-add \">\r\n                                        <FastField label=\"Họ và tên\" component={InputField} name=\"fullname\" placeholder=\"Nhập họ tên\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add \">\r\n                                        <FastField label=\"Tên đăng nhập\" component={InputField} name=\"username\" placeholder=\"Nhập tên đăng nhập\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"Số điện thoại\" component={InputField} name=\"phone\" placeholder=\"Nhập số điện thoại\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add \">\r\n                                        <FastField label=\"Mật khẩu\" component={InputField} name=\"password\" placeholder=\"Nhập Mật khẩu\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"Email\" component={InputField} name=\"email\" placeholder=\"Nhập email\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <label className=\"label-field\">Giới tính</label>\r\n                                        <Field label=\"\" name=\"gender\" as=\"select\" className=\"form-group-table form-select\">\r\n                                                <option label=\"Nhập giới tính\" />\r\n                                                <option value=\"Nam\" label=\"Nam\" />\r\n                                                <option value=\"Nữ\" label=\"Nữ\"/>\r\n                                        </Field>\r\n                                    </div>  \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-6 \">\r\n                                <div className=\"col-sm p-4\">\r\n                                          \r\n                                    <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"Địa chỉ\" component={InputField} name=\"address\" placeholder=\"Nhập địa chỉ\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"CMND/CCCD/PASSPORT\" component={InputField} name=\"passport\" placeholder=\"Nhập số CMND/CCCD/PASSPORT\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"Quốc tịch\" component={InputField} name=\"nationality\" placeholder=\"Nhập quốc tịch\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"Dân tộc\" component={InputField} name=\"nation\" placeholder=\"Nhập dân tộc\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <FastField label=\"Chức vụ\" component={InputField} name=\"position\" placeholder=\"Nhập chức vụ\" />\r\n                                    </div>\r\n                                    <div className=\"input-group pad-add\">\r\n                                        <label className=\"label-field\">Trạng thái</label>\r\n                                        <Field label=\"\" name=\"work\" as=\"select\" className=\"form-group-table form-select mb-3\">\r\n                                                <option label=\"Nhập trạng thái\" />\r\n                                                <option value={true} label=\"Đang làm việc\" />\r\n                                                <option value={false} label=\"Nghĩ làm\"/>\r\n                                        </Field>\r\n                                    </div>    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"auth-button-footer pad-4\">\r\n                                <button type=\"reset\" className=\"btn btn-danger mr-5\">Xóa</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary \">Lưu</button>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                     ) }}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\nFormAdd.propTypes = {\r\n    onsubmit: PropTypes.func\r\n}\r\nFormAdd.defaultProps = {\r\n    onsubmit: null\r\n}\r\n\r\nexport default FormAdd;","import React,{useState} from \"react\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { IoMdPersonAdd } from 'react-icons/io';\r\nimport FormAdd from '../FormAdd/FormAdd';\r\n\r\nconst AddUser = ({userLoad}) => {\r\n    const [lgShow, setLgShow] = useState(false);\r\n    return (\r\n        <>\r\n            <Button onClick={() => setLgShow(true)}><IoMdPersonAdd className=\"add-icon\"/> Thêm</Button>\r\n            <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                        Thêm quản trị viên\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <FormAdd control={setLgShow} userLoad={ userLoad}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default AddUser;","import React, {useState, useEffect} from \"react\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { Link } from 'react-router-dom';\r\n// import { useHistory } from 'react-router';\r\nimport {IoMdClose} from 'react-icons/io'\r\nimport {FcCheckmark} from 'react-icons/fc'\r\nimport ReactPaginate from 'react-paginate';\r\nimport Swal from \"sweetalert2\";\r\nimport { FiDelete, FiEdit } from 'react-icons/fi';\r\nimport TitleBreadcrumb from '../../../Common/TitleBreadcrumb/TitleBreadcrumb';\r\nimport { Button } from \"react-bootstrap\";\r\nimport ExportXLSX from '../../../Common/export/export';\r\nimport DetailAdmin from '../DetailAdmin/DetailAdmin';\r\nimport AddAdmin from \"../AddAdmin/AddAdmin\";\r\nimport { removeAccents } from '../../../Common/CheckWord/CheckWord';\r\nimport AdminApi from '../../../../api/Auth/authApi';\r\nimport './Admin.css'\r\n\r\nconst UserAdmin = () => {\r\n    // const [lgShow, setLgShow] = useState(false);\r\n    // const [isCheckAll, setIsCheckAll] = useState(false);\r\n    // const [isCheck, setIsCheck] = useState([]);\r\n    // const [list, setList] = useState([]);\r\n\r\n    // const handleSelectAll = e => {\r\n    //     setIsCheckAll(!isCheckAll)\r\n    //     setIsCheck(list.map(tr => tr.id));\r\n    //     if (isCheckAll) {\r\n    //         setIsCheck([]);\r\n    //     }\r\n    // }\r\n    // const handleClick = e => {\r\n    //     const { id, checked } = e.target;\r\n    //     setIsCheck([...isCheck, id]);\r\n    //     if (!checked) {\r\n    //         setIsCheck(isCheck.filter(item => item !== id));\r\n    //     }\r\n    // }\r\n    // const { id } = useParams();\r\n    // const history = useHistory();\r\n    const [search, setSearch] = useState(\"\")\r\n    const [dataExport, setDataExport] = useState([])\r\n    const [allUser, setAllUser] = useState([])\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [detail, setDetail] = useState({});\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const userPerPage = 20;\r\n    const pagesVisited = pageNumber * userPerPage;\r\n    const pageCount = Math.ceil(allUser.length / userPerPage);\r\n\r\n    const onPageChange = ({ selected }) => {\r\n        setPageNumber(selected);\r\n    }\r\n    const sttUser = pageNumber * userPerPage;\r\n\r\n    useEffect(() => {\r\n        getAllUser();\r\n    },[])\r\n    const getAllUser = async () => {\r\n        const res = await AdminApi.getAdmin()\r\n        // console.log(res?.data?.admins);\r\n        setAllUser(res?.data?.admins);\r\n        const ExportAdmin = res?.data?.admins.map((e, index) => {\r\n            return {\r\n                \"STT\": index + 1,\r\n                \"Họ và tên\": e.fullname,\r\n                \"Tên đăng nhập\": e.username,\r\n                \"Số điện thoại\": e.phone,\r\n                \"email\": e.email,\r\n                \"Giới tính\": e.gender,\r\n                \"Địa chỉ\": e.address,\r\n                \"CCCD\": e.passport,\r\n                \"Quốc tịch\": e.nationality,\r\n                \"Dân tộc\": e.nation,\r\n                \"Vị trí\": e.position,\r\n                \"Trạng thái\": e.work ? \"Đang lầm việc\" : \"Nghĩ việc\"\r\n            }\r\n        })\r\n        setDataExport(ExportAdmin)\r\n    }\r\n    \r\n    const getUsersId = async (userId) => {\r\n        setLgShow(true);\r\n        // console.log(userId,1212)\r\n        const res = await AdminApi.getById(userId)\r\n        setDetail(res?.data?.admins);\r\n    }\r\n\r\n    const deleteUser = async (id) => {\r\n        console.log(id);\r\n        return Swal.fire({\r\n            icon: 'warning',\r\n            title: \"Bạn muốn xóa chứ\",\r\n            text: \"Tất cả thông tin sẽ bị xóa vĩnh viễn\",\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Xóa',\r\n            confirmButtonColor: \"#435ebe\",\r\n            denyButtonText: `Không`,\r\n        }).then((res) => {\r\n            if (res.isConfirmed) {\r\n                AdminApi.deleteAdmin(id).then(() => getAllUser())\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleStatus = async (_id, data) => {\r\n        let dataWork = data.work;\r\n        // console.log(data?.work);\r\n        await AdminApi.updateStatus(_id, { ...data, work: !dataWork });\r\n        getAllUser();\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"page-heading\">\r\n                <TitleBreadcrumb title=\"Danh sách Admin\" pathHome=\"admin\" />\r\n                {\r\n                    <section className=\"section\">\r\n                        <div className=\"card shadow-sm\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row justify-content-between mb-4\">\r\n                                    <div className=\"col-lg-4 col-md-6\">\r\n                                        <div className=\"box-search\">\r\n                                            <input className=\"form-control input-content\" placeholder=\"Nhập họ tên, địa chỉ, số điện thoại...\" onChange={(e) => setSearch(e.target.value)}  />\r\n                                            <BsSearch className=\"search-Icon\"  />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 col-md-6 text-right\">\r\n                                        <div className=\"dt-buttons btn-group\">\r\n                                            <ExportXLSX data={dataExport} filename=\"Danh sách quản trị viên\"/>\r\n                                            <button type=\"button\" className=\"btn button-outline\">\r\n                                                <span>Copy</span>\r\n                                            </button>\r\n                                            <button type=\"button\" className=\"btn button-outline\">\r\n                                                <span>PDF</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"pd-add\">\r\n                                        <AddAdmin userLoad={getAllUser}  />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"tableShow scrollTable overflow-auto table-responsive-lg\">\r\n                                    <table className=\" received\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>#\r\n                                                    {/* <Checkbox\r\n                                                type=\"checkbox\"\r\n                                                className=\"check-box\"\r\n                                                name=\"selectAll\"\r\n                                                id=\"selectAll\"\r\n                                                handleClick={handleSelectAll}\r\n                                                isChecked={isCheckAll}\r\n\r\n                                                /> */}\r\n                                                </th>\r\n                                                <th>Họ tên</th>\r\n                                                <th>Số điện thoại</th>\r\n                                                <th>Xem</th>\r\n                                                <th>Trạng thái</th>\r\n                                                <th>Chức năng</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {allUser\r\n                                                ?.slice(pagesVisited, pagesVisited + userPerPage)\r\n                                                ?.filter((item) => {\r\n                                                    //console.log(item.phone = item.phone.toString())\r\n                                                    let query = removeAccents(search.toLowerCase())\r\n                                                    item.phone = item.phone.toString()\r\n                                                    if (search === \"\") {\r\n                                                        return item\r\n                                                    } else if ( item?.phone.toLowerCase().includes(query) || item?.fullname.toLowerCase().includes(query)\r\n                                                    ) {\r\n                                                        return item\r\n                                                    } else {\r\n                                                        return false\r\n                                                    }\r\n                                                })\r\n                                                ?.map((user, index) => (\r\n                                                    <tr key={index}>\r\n                                                        <td> {sttUser +  index + 1}\r\n                                                            {/* <Checkbox\r\n                                                                type=\"checkbox\"\r\n                                                                key={1}\r\n                                                                name='check-1'\r\n                                                                handleClick={handleClick}\r\n                                                                isChecked={isCheck.includes(1)}\r\n                                                            /> */}\r\n                                                        </td>\r\n                                                        <td>{user?.fullname}</td>\r\n                                                        <td>{user?.phone }</td>\r\n                                                        <td>\r\n                                                            <button className=\"btn btn-primary\" onClick={() => { getUsersId(user?._id) }}>Xem chi tiết</button>\r\n                                                            {/* <DetailAdmin\r\n                                                                onClick={() => { getUsersId(user?._id) }}\r\n                                                                data={detail} display={lgShow} setDisplay={setLgShow}\r\n                                                            /> */}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {user?.work ? <Button onClick={() => handleStatus(user?._id, user)} variant=\"outline-success\" style={{ fontSize: '14px' }}><FcCheckmark/> Đang làm việc</Button>\r\n                                                                : <Button onClick={() => handleStatus(user?._id, user)} variant=\"outline-danger\" style={{ fontSize: '14px' }}><IoMdClose/> Nghĩ việc</Button>\r\n                                                            }\r\n                                                            {/* <Form>\r\n                                                                <Form.Check\r\n                                                                    type=\"switch\"\r\n                                                                    id=\"custom-switch\"\r\n                                                                    label=\"Đang làm việc\"\r\n                                                                />\r\n                                                            </Form> */}\r\n                                                        </td>\r\n                                                        <td> \r\n                                                            <Link to={`/admin/quan-tri/edit-admin/${user?._id}`}>\r\n                                                                <FiEdit className=\"font-icon mr-10\" />\r\n                                                            </Link>\r\n                                                            \r\n                                                            <FiDelete className=\"font-icon \" onClick={()=> deleteUser(user?._id)}/>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))\r\n                                            }\r\n                                            <DetailAdmin data={detail} display={lgShow} setDisplay={setLgShow}/>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                            <ReactPaginate\r\n                                previousLabel={\"Trước\"}\r\n                                nextLabel={\"Sau\"}\r\n                                pageCount={pageCount}\r\n                                onPageChange={onPageChange}\r\n                                previousClassName={\"previousBttns\"}\r\n                                containerClassName={\"paginationBttns\"}\r\n                                nextLinkClassName={\"nextBttns\"}\r\n                                disabledClassName={\"paginationDisabled\"}\r\n                                activeClassName={\"paginationActive\"}\r\n                            />\r\n                        </div>\r\n                    </section>\r\n                }\r\n            </div>\r\n            {/* <EditAdmin\r\n                className=\"font-icon mr-10\"\r\n                data={editAdmin}\r\n                display={lgEdit}\r\n                setDisplay={setLgEdit}\r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserAdmin;","import React, { useState, useContext, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport Cookies from 'js-cookie';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Form, FastField } from 'formik';\r\nimport {AuthContext} from '../../contexts/authContext'\r\nimport InputField from '../../Common/CustomFields/InputFields/InputFields';\r\nimport TitleBreadcrumb from '../../Common/TitleBreadcrumb/TitleBreadcrumb';\r\n// import authApi from '../../../api/Auth/authApi';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport './ChangePass.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { LOCAL_STORAGE_TOKEN_NAME } from '../../contexts/constants';\r\n// import { useParams } from 'react-router';\r\nimport axios from 'axios';\r\n\r\nconst ChangePass = () => {\r\n    const {\r\n        authState: {\r\n            user: { _id, fullname, password, username },\r\n        },\r\n    } = useContext(AuthContext)\r\n    console.log(_id, fullname, password, username, 'full');\r\n    // Usecontext\r\n    // const [use,setUse]=useState()\r\n    const history = useHistory()\r\n    document.title = \"Đổi mật khẩu\"\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        oldPass: Yup.string()\r\n            .required('Vui lòng nhập mật khẩu')\r\n            .min(6, 'Mật khẩu không được ít hơn 6 ký tự')\r\n            .max(20, 'Mật khẩu không được lớn hơn 20 ký tự'),\r\n        newPass: Yup.string()\r\n            .required(\"Mật khẩu không được bỏ trống\")\r\n            .min(6, 'Mật khẩu không được ít hơn 6 ký tự')\r\n            .max(20, 'Mật khẩu không được lớn hơn 20 ký tự'),\r\n        comNewPass: Yup.string()\r\n            .required(\"Mật khẩu nhập lại không được bỏ trống\")\r\n            .oneOf([Yup.ref('newPass'), null], 'Mật khẩu nhập lại không khớp')\r\n    })\r\n    const initialValues = {\r\n        oldPass: '',\r\n        newPass: '',\r\n        comNewPass:''\r\n    }\r\n    // const arr=[]\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            // console.log(data);\r\n            // await authApi.changePass({...data })\r\n            const res = await axios.patch(`http://localhost:8000/auth/admin/change-pass/${_id}`, data)\r\n            // ?.then(res => console.log(res, 666))\r\n            let record = res?.data;\r\n            if (record?.success === true) {\r\n                toast.success(\"Đổi mật khẩu thành công\");\r\n                sessionStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME)\r\n                localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n                Cookies.remove('_token');\r\n                setTimeout(() => {\r\n                    // history.push('/login')\r\n                    window.location.href = '/login'\r\n                },1500)\r\n            } else {\r\n                toast.error(record?.message)\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            toast.error(\"Mật khẩu không tồn tại\")\r\n        }\r\n\r\n\r\n    // comNewPass: \"1234567\"\r\n    // newPass: \"1234567\"\r\n    // oldPass: \"123456\"\r\n    // [[Prototype]]: Object\r\n        // const filteredByValue = Object.fromEntries(Object.entries(use).filter(([key, value]) => value._id === _id))\r\n        // if (data?.oldPass === filteredByValue?.password) {\r\n        //     // call api patch lên DB\r\n        //     console.log(data?.oldPass);\r\n        // } else {\r\n        //      console.log('mật khẩu không đúng');\r\n        // }\r\n        //  await use?.admins?.map(ele => console.log(ele?._id == _id))\r\n            // if (data?.usernme ===use?.username && data?.password ===use?.password) {\r\n            //         // call api patch lên DB\r\n            // } \r\n        //điều kiện là trả về nguyên obj user đã login { _id:1,username,pass....}\r\n    }\r\n    useEffect(() => {\r\n        // const getById = async() => {\r\n        //     await authApi.getAdmin()?.then(res=>setUse(res?.data?.admins))\r\n        // }\r\n        // getById()\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"page-heading\">\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={4000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                    theme=\"colored\"\r\n                />\r\n                <TitleBreadcrumb title=\"Đổi mật khẩu\" pathHome=\"admin\" />\r\n                <section className=\"section\">\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 col-12 w-80 mx-auto p-3 page-change\">\r\n                                <h2>Chào mừng bạn đến trang đổi mật khẩu</h2>\r\n                                <p>Nhập mật khẩu của bạn và chúng tôi sẽ cài cho bạn mật khẩu mới.</p>\r\n                                <Formik\r\n                                    validationSchema={validationSchema}\r\n                                    initialValues={initialValues}\r\n                                    onSubmit={(data)=>onSubmit(data)}\r\n                                >\r\n                                    {formikProps => {\r\n                                        return(\r\n                                        <Form>\r\n                                            <div className=\"input-group color-change\">\r\n                                                <FastField name=\"oldPass\" label=\"Mật khẩu củ\" component={InputField} placeholder=\"Nhập mật khẩu củ\" />\r\n                                            </div>\r\n                                            <div className=\"input-group color-change \">\r\n                                                <FastField name=\"newPass\" label=\"Mật khẩu mới\" component={InputField} placeholder=\"Nhập mật khẩu mới\" />\r\n                                            </div>\r\n                                            <div className=\"input-group color-change \">\r\n                                                <FastField name=\"comNewPass\" label=\"Xác nhận mật khẩu mới\" component={InputField} placeholder=\"Nhập lại mật khẩu mới\" />\r\n                                            </div>\r\n                                            <button type=\"submit\" className=\"w-btn btn btn-primary\">Lưu</button>\r\n                                        </Form>\r\n                                        )}}\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nChangePass.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n}\r\nChangePass.defaultProps = {\r\n    onSubmit: null,\r\n}\r\nexport default ChangePass;","import React from 'react';\r\nimport { BrowserRouter as  Router, Route, Switch } from 'react-router-dom';\r\nimport SideBar from '../../components/Admin/SideBar/SideBar';\r\nimport HomePage from '../../components/Admin/HomePage/HomePage';\r\nimport Header from '../../components/Common/Navbar/Navbar';\r\nimport ListCategory from '../../components/Admin/Category/ListCategory/ListCategory';\r\nimport Take from '../../components/Admin/Take/showTake/Take';\r\nimport EditTake from '../../components/Admin/Take/editTake/EditTake';\r\nimport EditSend from '../../components/Admin/Send/editSend/EditSend';\r\nimport EditAdmin from '../../components/Admin/UserAdmin/FormEdit/FormEdit';\r\nimport EditUser from '../../components/Admin/User/FormEdit/FormEdit';\r\nimport EditCategory from '../../components/Admin/Category/EditCategory/EditCategory';\r\nimport Send from '../../components/Admin/Send/showSend/Send';\r\nimport User from '../../components/Admin/User/User/UserAdmin';\r\nimport Admin from '../../components/Admin/UserAdmin/Admin/Admin';\r\nimport ChangePass from '../../components/Admin/ChangePass/ChangePass';\r\n\r\nconst AdminPage = () => {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <div id=\"app\">\r\n                    <SideBar />\r\n                    <div id=\"main\">\r\n                        <Header match=\"admin\"/>\r\n                        <Switch>                           \r\n                            <Route path=\"/admin\" exact component={HomePage} />\r\n                            <Route path=\"/admin/danh-sach/danh-sach-nhan\" exact component={Take} />\r\n                            <Route path=\"/admin/quan-tri/edit-take/:id\" exact component={EditTake}/>\r\n                            <Route path=\"/admin/danh-sach/danh-sach-cho\" exact component={Send} />\r\n                            <Route path=\"/admin/danh-sach/edit-send/:id\" exact component={EditSend}/>\r\n                            <Route path=\"/admin/quan-tri/danh-sach-admin\" exact component={Admin} />\r\n                            <Route path=\"/admin/quan-tri/edit-admin/:id\" exact component={EditAdmin} />\r\n                            <Route path=\"/admin/quan-tri/edit-user/:id\" exact component={EditUser} />\r\n                            <Route path=\"/admin/quan-tri/edit-category/:id\" exact component={EditCategory}/>\r\n                            <Route path=\"/admin/quan-tri/danh-sach-nhan-vien\" exact component={User} />\r\n                            <Route path=\"/admin/quan-tri/hang-hoa\" exact component={ListCategory} />\r\n                            <Route path=\"/admin/doi-mat-khau\" exact component={ChangePass} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </Router>   \r\n        </>\r\n    )\r\n}\r\nexport default AdminPage;","export default __webpack_public_path__ + \"static/media/react.26a3daf4.png\";","import { useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form } from \"react-bootstrap\";\r\n// import { Formik, Form, FastField } from \"formik\";\r\n// import * as yup from 'yup';\r\n// import InputField from '../../components/Common/CustomFields/InputFields/InputFields';\r\nimport \"./Login.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../components/contexts/authContext\";\r\nimport img from \"../../assets/images/react.png\";\r\n\r\nconst Login = () => {\r\n  const { loginUser } = useContext(AuthContext);\r\n  console.log(\"Hello world\");\r\n  document.title = \"Đăng nhập\";\r\n\r\n  // const initialValues = {\r\n  //     username: '',\r\n  //     password: ''\r\n  // }\r\n  // const validationSchema = yup.object().shape({\r\n  //     username: yup.string()\r\n  //         .required('Vui lòng nhập tên người dùng')\r\n  //         .min(8, 'Tên người dùng không được ít hơn 8 ký tự')\r\n  //         .max(20, 'Tên người dùng hông được lớn hơn 20 ký tự'),\r\n  //     password: yup.string()\r\n  //         .required('Vui lòng nhập mật khẩu')\r\n  //         .min(6, 'Mật khẩu không được ít hơn 6 ký tự')\r\n  //         .max(20, 'Mật khẩu không được lớn hơn 20 ký tự')\r\n  // })\r\n\r\n  // const history = useHistory()\r\n  const [errors, setErrors] = useState({});\r\n  const [loginForm, setLoginForm] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  // const [alert, setAlert] = useState(null)\r\n  const { username, password } = loginForm;\r\n  const onHandleChange = (data) =>\r\n    setLoginForm({\r\n      ...loginForm,\r\n      [data.target.name]: data.target.value,\r\n    });\r\n  const login = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const loginData = await loginUser(loginForm);\r\n      if (loginData.success) {\r\n        // history.push('/admin')\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"auth\">\r\n        <div className=\"row container-login100\">\r\n          <div className=\"wrap-login100\">\r\n            <Form onSubmit={login}>\r\n              <div className=\"login100-form validate-form\">\r\n                <span className=\"login100-form-title p-b-43\">Đăng nhập</span>\r\n                <div className=\"wrap-input100 validate-input\">\r\n                  <div className=\"input-group pad-login\">\r\n                    {/* <FastField component={InputField} name=\"username\" placeholder=\"Nhập tên người dùng\"/> */}\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        isInvalid={errors.email}\r\n                        type=\"text\"\r\n                        placeholder=\"Nhập tên người dùng\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={onHandleChange}\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.email}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"input-group pad-login\">\r\n                    {/* <FastField type=\"password\" component={InputField} name=\"password\" placeholder=\"Nhập mật khẩu\" /> */}\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        isInvalid={errors.password}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Nhập password người dùng\"\r\n                        value={password}\r\n                        onChange={onHandleChange}\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.password}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex-sb-m w-full p-t-3 p-b-32\">\r\n                  <div className=\"contact100-form-checkbox\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"input-checkbox100\"\r\n                      id=\"ckb1\"\r\n                    />\r\n                    <label className=\"label-checkbox100\" htmlFor=\"ckb1\">\r\n                      Ghi nhớ\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <Link to=\"/forget-password\" className=\"txt1\">\r\n                      Quên mật khẩu ?\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"container-login100-form-btn\">\r\n                  <button type=\"submit\" className=\"login100-form-btn\">\r\n                    Đăng nhập\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n            <div className=\"login100-more\">\r\n              <img src={img} alt=\"backgroup-login\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nLogin.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\nLogin.defaultProps = {\r\n  onSubmit: null,\r\n};\r\nexport default Login;\r\n","import React, {useContext} from 'react'\r\nimport { AuthContext } from '../contexts/authContext';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport LoginForm from '../../page/Login/Login';\r\n\r\nconst Auth = ({ authRoute }) => {\r\n    const {\r\n        authState: {authLoading, isAuthenticated }\r\n    } = useContext(AuthContext)\r\n    let body\r\n\r\n    if (authLoading) {\r\n        body = (\r\n            <div className=\"d-flex justify-content-center\">\r\n                <Spinner animation='border' variant='info' />\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        if (isAuthenticated) return <Redirect to=\"/admin\" />\r\n         else \r\n            body = (\r\n                <>\r\n                    {authRoute === 'login' && <LoginForm/>}\r\n                </>\r\n            ) \r\n    }\r\n    return (\r\n        <div className='landing'>\r\n            <div className='dark-overlay'>\r\n                <div className='landing-inner'>\r\n                    {body}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Auth;\r\n","import axios from 'axios';\r\nimport { apiURL } from '../constants';\r\n\r\nconst mailApi = {\r\n    sendMail: (data) => {\r\n        return axios.post(`${apiURL}/email/send-mail`, data);\r\n    },\r\n    changePass: (data) => {\r\n        return axios.post(`${apiURL}/email/change-password`, data)\r\n    }\r\n    // passwordReset: (_id, token, data) => {\r\n    //     return axios.post(`${apiURL}/mail/${_id}/${token}`, data)\r\n    // },\r\n    // defineRoute: (data) => {\r\n    //     return axios.post(`${apiURL}/mail/define-route`, data)\r\n    // }\r\n}\r\n\r\nexport default mailApi;","import React from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport { Formik, Form, FastField } from \"formik\";\r\nimport InputField from '../../components/Common/CustomFields/InputFields/InputFields';\r\nimport * as Yup from \"yup\";\r\nimport mailApi from '../../api/Mail/mailApi';\r\nimport PropTypes from 'prop-types';\r\nimport img from '../../assets/images/react.png'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {LOCAL_STORAGE_TOKEN_NAME} from '../../components/contexts/constants'\r\n\r\nconst ChangePassForm = (props) => {\r\n    const history = useHistory();\r\n    const initialValues = {\r\n        otp: '',\r\n        password: '',\r\n        confirmPass:''\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        otp: Yup.string().required('Vui lòng nhập mã OTP')\r\n            .max(4, 'Mã OTP không vượt quá 4 chữ số')\r\n            .min(4, 'Mã OTP không ít hơn 4 chữ số'),\r\n        password: Yup.string()\r\n            .required('Vui lòng nhập mật khẩu')\r\n            .min(6, 'Mật khẩu không được ít hơn 6 ký tự')\r\n            .max(20, 'Mật khẩu không được lớn hơn 20 ký tự'),\r\n        confirmPass: Yup.string()\r\n            .required(\"Mật khẩu nhập lại không được bỏ trống\")\r\n        .oneOf([Yup.ref('password'), null], 'Mật khẩu nhập lại không khớp')\r\n\r\n    })\r\n    const onSubmit = async (data) => {\r\n        // console.log(data, props);\r\n        Object.assign(data, props)\r\n        try {\r\n            const res = await mailApi.changePass({ ...data })\r\n            let record = res?.data\r\n            \r\n            if (record?.success === true ) {\r\n                toast.success(\"Lấy lại mật khẩu thành công\");\r\n                setTimeout(() => {\r\n                    // history.push('/login')\r\n                    sessionStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME)\r\n                    localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n                    Cookies.remove('_token');\r\n                    window.location.href = '/login';\r\n                },1500)\r\n            } else {\r\n                toast.error(record.message)\r\n            }\r\n        } catch (err) {\r\n            toast.error(\"Không tồn tại\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"auth\">\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={4000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                    theme=\"colored\"\r\n                />\r\n                <div className=\"row container-login100\">\r\n                    <div className=\"wrap-login100\">\r\n                        <Formik\r\n                            initialValues={initialValues}\r\n                            validationSchema={validationSchema}\r\n                            onSubmit={(e)=>onSubmit(e)}\r\n                        >\r\n                            {formikProps => {\r\n                                return (\r\n                                    <Form>\r\n                                        <div className=\"login100-form validate-form\">\r\n                                                <span className=\"login100-form-title p-b-43\">Đặt lại Mật khẩu</span>\r\n                                                <p>Nhập mã OTP và đặt lại mật khẩu của bạn</p>\r\n                                                <div className=\"wrap-input100 validate-input\" style={{height: '90px'}}>\r\n                                                    <div className=\"input-group \">\r\n                                                        <FastField label=\"Nhập mã OTP\" component={InputField} name=\"otp\" placeholder=\"Mã OTP\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"wrap-input100 validate-input\" style={{height: '90px'}}>\r\n                                                    <div className=\"input-group \">\r\n                                                        <FastField label=\"Nhập mật khẩu\" component={InputField} name=\"password\" placeholder=\"Mật khẩu\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"wrap-input100 validate-input\" style={{height: '90px'}}>\r\n                                                    <div className=\"input-group \">\r\n                                                        <FastField label=\"Nhập lại mật khẩu\" component={InputField} name=\"confirmPass\" placeholder=\"Nhập lại mật khẩu\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"flex-sb-m w-full p-t-3 p-b-32\">\r\n                                                    {/* <div className=\"contact100-form-checkbox\">\r\n                                                    <input type=\"checkbox\" className=\"input-checkbox100\" id=\"ckb1\" />\r\n                                                    <label className=\"label-checkbox100\" htmlFor=\"ckb1\">Ghi nhớ</label>\r\n                                                </div> */}\r\n                                                    {/* <div>\r\n                                                        <Link to=\"/login\" className=\"txt1\">Đăng nhập</Link>\r\n                                                    </div> */}\r\n                                                </div>\r\n                                                <div className=\"container-login100-form-btn\">\r\n                                                    <button type=\"submit\" className=\"login100-form-btn\">Gửi</button>\r\n                                                </div>\r\n                                            </div>\r\n                                    </Form>\r\n                                )\r\n                            }}\r\n                        </Formik>\r\n                        <div className=\"login100-more\">\r\n                                <img src={img} alt=\"backgroup-login\" />\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nChangePassForm.propTypes = {\r\n    onsubmit: PropTypes.func\r\n}\r\nChangePassForm.defaultProps = {\r\n    onsubmit: null\r\n}\r\n\r\nexport default ChangePassForm;","import React, { useState, useRef } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form, FastField } from \"formik\";\r\nimport InputField from '../../components/Common/CustomFields/InputFields/InputFields';\r\nimport '../Login/Login.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport ChangePassForm from '../changePassForm/ChangePassForm';\r\nimport img from '../../assets/images/react.png';\r\nimport mailApi from \"../../api/Mail/mailApi\";\r\n\r\nconst ChangePass = () => {\r\n    \r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .email(\"Email không hợp lệ\")\r\n            .required(\"email không được bỏ trống\")\r\n    })\r\n    const initialValues = {\r\n        email:''\r\n    }\r\n    //const emailRef = useRef(initialValues);\r\n    const [mailData, setMailData] = useState([])\r\n    const [otpForm, setOtpFrom] = useState(true)\r\n    const onSubmit = async (data) => {\r\n       try {\r\n           const res = await mailApi.sendMail({...data})\r\n            console.log(res?.data?.otp?.email);\r\n            setMailData(res?.data?.otp?.email)\r\n           let record = res?.data\r\n           if (record.success === true) {\r\n               toast.success(record.message)\r\n               setOtpFrom(false)\r\n           } else {\r\n               toast.success(record.message)\r\n           }\r\n       } catch (err) {\r\n           console.log(err);\r\n           toast.error(\"Email không tồn tại\")\r\n       }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"auth\">\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={4000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                    theme=\"colored\"\r\n                />\r\n                <div className=\"row container-login100\">\r\n                    {otpForm ? \r\n                        <div className=\"wrap-login100\">\r\n                            <Formik\r\n                                validationSchema={validationSchema}\r\n                                initialValues={initialValues}\r\n                                onSubmit={(e) => { onSubmit(e) }}\r\n                            \r\n                            >\r\n                                {formikProps => {\r\n                                    return (\r\n                                        <Form>\r\n                                            <div className=\"login100-form validate-form\">\r\n                                                <span className=\"login100-form-title p-b-43\">Quên Mật khẩu</span>\r\n                                                <p>Nhập email của bạn và chúng tôi sẽ gửi cho bạn liên kết đặt lại mật khẩu.</p>\r\n                                                <div className=\"wrap-input100 validate-input\">\r\n                                                    <div className=\"input-group pad-login\">\r\n                                                        <FastField component={InputField} name=\"email\" placeholder=\"Nhập email\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"flex-sb-m w-full p-t-3 p-b-32\">\r\n                                                    {/* <div className=\"contact100-form-checkbox\">\r\n                                                    <input type=\"checkbox\" className=\"input-checkbox100\" id=\"ckb1\" />\r\n                                                    <label className=\"label-checkbox100\" htmlFor=\"ckb1\">Ghi nhớ</label>\r\n                                                </div> */}\r\n                                                    <div>\r\n                                                        <Link to=\"/login\" className=\"txt1\">Đăng nhập</Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"container-login100-form-btn\">\r\n                                                    <button type=\"submit\" className=\"login100-form-btn\">Gửi</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Form>\r\n                                    )\r\n                                }}\r\n                            </Formik>\r\n                            <div className=\"login100-more\">\r\n                                <img src={img} alt=\"backgroup-login\" />\r\n                            </div>\r\n                        </div>\r\n                        :<><ChangePassForm email={mailData} /></>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nChangePass.propTypes = {\r\n    onsubmit: PropTypes.func\r\n}\r\nChangePass.defaultProps = {\r\n    onsubmit: null\r\n}\r\n\r\nexport default ChangePass;","import { Route, Redirect } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../contexts/authContext'\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\n\r\nconst ProtectedRoute = ({component: Component, ...rest}) => {\r\n    const {\r\n        authState: {authLoading, isAuthenticated }\r\n    } = useContext(AuthContext)\r\n    if (authLoading) return (\r\n        <div>\r\n            <Spinner animation='border' variant='info' />\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <Route\r\n                {...rest}\r\n                render={props => isAuthenticated ? (<> <Component{...rest} {...props} /> </>) : (<Redirect to=\"/login\" />)}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import React from \"react\";\r\n\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport ClientPage from \"./page/client/clientPage\";\r\nimport AdminPage from \"./page/admin/AdminPage\";\r\nimport \"bootstrap/dist/js/bootstrap.js\";\r\n\r\nimport \"./assets/css/App.css\";\r\nimport \"./assets/css/Bootstrap.css\";\r\nimport \"./assets/css/style.css\";\r\nimport \"./assets/vendors/iconly/bold.css\";\r\nimport \"./assets/vendors/bootstrap-icons/bootstrap-icons.css\";\r\nimport \"./assets/vendors/perfect-scrollbar/perfect-scrollbar.css\";\r\n\r\nimport Auth from \"./components/Auth/AuthProvider\";\r\nimport ForgetPass from \"./page/ForgetPass/ForgetPass\";\r\nimport AuthContextProvider from \"./components/contexts/authContext\";\r\nimport ProtectedRoute from \"./components/Auth/ProtectedRoute\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <AuthContextProvider>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          {/* <Redirect from=\"/admin\" to=\"/login\"/> */}\r\n          <Route exact path='/' component={ClientPage} />\r\n          <ProtectedRoute path='/admin' component={AdminPage}/>\r\n          <Route path='/login' render={props => <Auth {...props} authRoute='login' />}/>\r\n          <Route path='/forget-password' component={ForgetPass} />\r\n          <AdminPage />\r\n        </Switch>\r\n      </BrowserRouter>\r\n      </AuthContextProvider>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n\r\n/**\r\n * react-router-dom v6\r\n * \r\n * <Routes>\r\n * <Route path='/' element={<Layout />}>\r\n * <Route index element={<Homepage />} />\r\n * <Route path='/contact' element={<Contact />} />\r\n * <Route path='/admin' element={<AdminLayout />}></Route>\r\n * <Route path='*' element={<Page404 />} />\r\n * </Route>\r\n * </Routes>\r\n */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import { BrowserRouter as Router,Switch ,Route} from \"react-router-dom\";\n\n\nReactDOM.render(\n  \n  <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}